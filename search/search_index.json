{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Lambda Feedback! A place to study, supported by automated feedback. {width=350} Students : Teachers : Accessible content - in the browser and on PDF. Feedback - express ideas naturally and get instant feedback, thousands of times per year. Analytics - track your progress, manage your time. Curate content - edit and publish your content in one place. Feedback - configure automation to give students timely support. Analytics - data driven feedback to students, and teaching organisation. Above: a screenshot from the web-app showing feedback on handwritten mathematics. Lambda Feedback is a project at Imperial College running since 2021. For more info see our list of publications . Calling all teachers! We are recruiting participants to collaborate with us on a pilot. Register your interest here. Overview of documentation: In these docs you can find: Student guide Teacher guide Advanced teachers . Check out Lambda Feedback by clicking on the button below! [Visit Lambda Feedback](https://lambdafeedback.com/){ .md-button .md-button--primary .center}","title":"Welcome to Lambda Feedback!"},{"location":"#welcome-to-lambda-feedback","text":"A place to study, supported by automated feedback. {width=350} Students : Teachers : Accessible content - in the browser and on PDF. Feedback - express ideas naturally and get instant feedback, thousands of times per year. Analytics - track your progress, manage your time. Curate content - edit and publish your content in one place. Feedback - configure automation to give students timely support. Analytics - data driven feedback to students, and teaching organisation. Above: a screenshot from the web-app showing feedback on handwritten mathematics. Lambda Feedback is a project at Imperial College running since 2021. For more info see our list of publications .","title":"Welcome to Lambda Feedback!"},{"location":"#calling-all-teachers","text":"We are recruiting participants to collaborate with us on a pilot. Register your interest here.","title":"Calling all teachers!"},{"location":"#overview-of-documentation","text":"In these docs you can find: Student guide Teacher guide Advanced teachers . Check out Lambda Feedback by clicking on the button below! [Visit Lambda Feedback](https://lambdafeedback.com/){ .md-button .md-button--primary .center}","title":"Overview of documentation:"},{"location":"opportunities/","text":"Opportunities We are looking for schools, universities, and tutoring agencies to pilot Lambda Feedback. Please register your interest at https://forms.office.com/e/qA1UndSHrs About the pilot: Organisations can use the platform (without charge) to deliver self-study exercises to their students. All the features of the platform will be available, including curating content, automated feedback, and data analytics The team at Imperial will support your deployment We will ask for your feedback and suggestions before, during, and after the pilot We will initiate further collaborations after the pilot Key points to consider: The government has advised schools to use automation for low stakes feedback Lambda Feedback is automated formative feedback, perfect for this application We are a not-for-profit project funded by the Imperial College London Digital Innovation Fund (DiF) All automated feedback is provided by external services that are open source, tested, and can be used on other platforms This is a genuine pilot, and the future of this project will change based on feedback from pioneers who deploy it in practice As this is a pilot, it will require engaged participants who are willing to be adaptive and constructively react to challenges.","title":"Opportunities"},{"location":"opportunities/#opportunities","text":"We are looking for schools, universities, and tutoring agencies to pilot Lambda Feedback. Please register your interest at https://forms.office.com/e/qA1UndSHrs About the pilot: Organisations can use the platform (without charge) to deliver self-study exercises to their students. All the features of the platform will be available, including curating content, automated feedback, and data analytics The team at Imperial will support your deployment We will ask for your feedback and suggestions before, during, and after the pilot We will initiate further collaborations after the pilot Key points to consider: The government has advised schools to use automation for low stakes feedback Lambda Feedback is automated formative feedback, perfect for this application We are a not-for-profit project funded by the Imperial College London Digital Innovation Fund (DiF) All automated feedback is provided by external services that are open source, tested, and can be used on other platforms This is a genuine pilot, and the future of this project will change based on feedback from pioneers who deploy it in practice As this is a pilot, it will require engaged participants who are willing to be adaptive and constructively react to challenges.","title":"Opportunities"},{"location":"publications/","text":"2025a: Formative feedback on engineering self-study: Towards 1 million times per year per cohort :material-download: Download PDF or access via IEEE: https://ieeexplore.ieee.org/abstract/document/11016422 Conference paper; 3-page summary of the Lambda Feedback system. Recommended for a general overview. 2025b: How do we define and evaluate \"good\" automated formative feedback? :material-download: Download PDF . Will be a workshop at SEFI 2025 , but not currently published. Conference workshop. General overview (5 pages) of the literature and thinking behind automated formative feedback. Good for educators wanting a general framing of our approach. 2024: Automated Feedback on Student Attempts to Produce a Set of Dimensionless Power Products from a Set of Physical Quantities that Describe a Physical Problem :material-download: Download PDF or access via International Journal for Technology in Mathematics Education Journal paper. Deeply technical paper (8 pages) about a specialist evaluation function for the Buckingham Pi theorem. Only recommended for specialists. Blog articles Value proposition: Computers make us human Student experience of self-study: Getting stuck The role of challenge in self-study: Friction in the ideal learning process Configuring online learning: Worked solutions: when and how to use them?","title":"Publications"},{"location":"publications/#2025a-formative-feedback-on-engineering-self-study-towards-1-million-times-per-year-per-cohort","text":":material-download: Download PDF or access via IEEE: https://ieeexplore.ieee.org/abstract/document/11016422 Conference paper; 3-page summary of the Lambda Feedback system. Recommended for a general overview.","title":"2025a: Formative feedback on engineering self-study: Towards 1 million times per year per cohort"},{"location":"publications/#2025b-how-do-we-define-and-evaluate-good-automated-formative-feedback","text":":material-download: Download PDF . Will be a workshop at SEFI 2025 , but not currently published. Conference workshop. General overview (5 pages) of the literature and thinking behind automated formative feedback. Good for educators wanting a general framing of our approach.","title":"2025b: How do we define and evaluate \"good\" automated formative feedback?"},{"location":"publications/#2024-automated-feedback-on-student-attempts-to-produce-a-set-of-dimensionless-power-products-from-a-set-of-physical-quantities-that-describe-a-physical-problem","text":":material-download: Download PDF or access via International Journal for Technology in Mathematics Education Journal paper. Deeply technical paper (8 pages) about a specialist evaluation function for the Buckingham Pi theorem. Only recommended for specialists.","title":"2024: Automated Feedback on Student Attempts to Produce a Set of Dimensionless Power Products from a Set of Physical Quantities that Describe a Physical Problem"},{"location":"publications/#blog-articles","text":"Value proposition: Computers make us human Student experience of self-study: Getting stuck The role of challenge in self-study: Friction in the ideal learning process Configuring online learning: Worked solutions: when and how to use them?","title":"Blog articles"},{"location":"terminology/","text":"General Information LambdaFeedback is a place to study online. Teachers curate content that students can access. Content is available in the browser and in PDF. Automated feedback on final answers and detailed worked solutions are provided. Terminology Used and Definitions Here, the fundamental structure and terminology will be laid out. Evaluation Functions An evaluation function is an algorithm that is applied to a response area, whereby the student's response is evaluated and checked. The types of evaluation functions correspond to the types of response areas. Final Answer This section lies within the \"Help\" panel which appears upon clicking on the \"Help\" button. It serves as a simple container for the final answer, so that the student may compare results. This is an optional section, and so does not have to be included in any question. Modules A module is a set programme of taught material. In a university setting, this would correspond to a course module. Questions A question is a problem within a set, and it may contain any number of parts. Response Areas A response area is an interactive element. Student enters a response and receives feedback. There are different types of response area (text, numerical, array etc.), and these correspond to the different types of information the student is required to input. Sets We use the word 'Set' to refer to a group of questions content. In a university setting, a Set typically corresponds to an individual homework/tutorial sheet. Structured Tutorial Content providing a structure with which to approach a problem - but not to give the full details away. It is encouraged to be the first piece of guidance for the student before they look at the \"Worked Solution\", or \"Final Answer\". This section lies within the \"Help\" panel which appears upon clicking on the \"Help\" button. This is an optional section, and so does not have to be included in any question. Student (learner) From the perspective of Lambda Feedback, a student is someone who accesses and responds to problem sets. A student only has permissions to view and respond to problem sets (not to edit them). Teacher From the perspective of Lambda Feedback, a teacher is someone who creates and manages content. A teacher's account has permissions to create, edit, and delete content within a Module. Worked Solution The stages of working that lead to a final answer. It may be split into multiple steps which the student can reveal sequentially. This section lies within the \"Help\" panel which appears upon clicking on the \"Help\" button. This is an optional section, and so does not have to be included in any question. Workspace On the Question page, the students has access to their own workspace tab. Here they can find the \"Canvas\", for handwriting notes, and the \"Chat\", for conversing with an AI Chatbot on the question materials.","title":"Terminology"},{"location":"terminology/#general-information","text":"LambdaFeedback is a place to study online. Teachers curate content that students can access. Content is available in the browser and in PDF. Automated feedback on final answers and detailed worked solutions are provided.","title":"General Information"},{"location":"terminology/#terminology-used-and-definitions","text":"Here, the fundamental structure and terminology will be laid out.","title":"Terminology Used and Definitions"},{"location":"terminology/#evaluation-functions","text":"An evaluation function is an algorithm that is applied to a response area, whereby the student's response is evaluated and checked. The types of evaluation functions correspond to the types of response areas.","title":"Evaluation Functions"},{"location":"terminology/#final-answer","text":"This section lies within the \"Help\" panel which appears upon clicking on the \"Help\" button. It serves as a simple container for the final answer, so that the student may compare results. This is an optional section, and so does not have to be included in any question.","title":"Final Answer"},{"location":"terminology/#modules","text":"A module is a set programme of taught material. In a university setting, this would correspond to a course module.","title":"Modules"},{"location":"terminology/#questions","text":"A question is a problem within a set, and it may contain any number of parts.","title":"Questions"},{"location":"terminology/#response-areas","text":"A response area is an interactive element. Student enters a response and receives feedback. There are different types of response area (text, numerical, array etc.), and these correspond to the different types of information the student is required to input.","title":"Response Areas"},{"location":"terminology/#sets","text":"We use the word 'Set' to refer to a group of questions content. In a university setting, a Set typically corresponds to an individual homework/tutorial sheet.","title":"Sets"},{"location":"terminology/#structured-tutorial","text":"Content providing a structure with which to approach a problem - but not to give the full details away. It is encouraged to be the first piece of guidance for the student before they look at the \"Worked Solution\", or \"Final Answer\". This section lies within the \"Help\" panel which appears upon clicking on the \"Help\" button. This is an optional section, and so does not have to be included in any question.","title":"Structured Tutorial"},{"location":"terminology/#student-learner","text":"From the perspective of Lambda Feedback, a student is someone who accesses and responds to problem sets. A student only has permissions to view and respond to problem sets (not to edit them).","title":"Student (learner)"},{"location":"terminology/#teacher","text":"From the perspective of Lambda Feedback, a teacher is someone who creates and manages content. A teacher's account has permissions to create, edit, and delete content within a Module.","title":"Teacher"},{"location":"terminology/#worked-solution","text":"The stages of working that lead to a final answer. It may be split into multiple steps which the student can reveal sequentially. This section lies within the \"Help\" panel which appears upon clicking on the \"Help\" button. This is an optional section, and so does not have to be included in any question.","title":"Worked Solution"},{"location":"terminology/#workspace","text":"On the Question page, the students has access to their own workspace tab. Here they can find the \"Canvas\", for handwriting notes, and the \"Chat\", for conversing with an AI Chatbot on the question materials.","title":"Workspace"},{"location":"advanced/","text":"Advanced users Microservices The fundamental idea of Lambda Feedback is that it calls external microservices to provide interaction with users. There are two types of microservice: Evaluate a student response and provide feedback: Evaluation functions - Quickstart Guide { .md-button .md-button--primary style=\"width: 400px;\"} Dialogic conversations with students: Chat functions - Quickstart guide { .md-button .md-button--primary style=\"width: 400px;\"} All microservices are called over http. There is complete freedom in their implementation. Lambda Feedback also provides families of deployed microservices, using open source code available in our public GitHub repositories. This section of documentation is to help developers of microservices. The documentation is written assuming you have basic developer skills. In addition to microservices, this 'Advanced' section caters to administrators of Lambda Feedback tenants; and to developers of interactive response areas, that can be published within our web-stack via discussion with the developers. Response areas Response areas are components in the frontend where student users can enter a response. The response is sent to the evaluation function, which returns feedback to the response area. In the alpha version response areas are built into the software (rather than being modular) so are not straightforward to redevelop. This website catalogues the basic behaviour of response areas, to inform developers of evaluation functions. Response areas - overview { .md-button .md-button--primary style=\"width: 400px;\"} Administrators Content to be added.","title":"Advanced users"},{"location":"advanced/#advanced-users","text":"","title":"Advanced users"},{"location":"advanced/#microservices","text":"The fundamental idea of Lambda Feedback is that it calls external microservices to provide interaction with users. There are two types of microservice: Evaluate a student response and provide feedback: Evaluation functions - Quickstart Guide { .md-button .md-button--primary style=\"width: 400px;\"} Dialogic conversations with students: Chat functions - Quickstart guide { .md-button .md-button--primary style=\"width: 400px;\"} All microservices are called over http. There is complete freedom in their implementation. Lambda Feedback also provides families of deployed microservices, using open source code available in our public GitHub repositories. This section of documentation is to help developers of microservices. The documentation is written assuming you have basic developer skills. In addition to microservices, this 'Advanced' section caters to administrators of Lambda Feedback tenants; and to developers of interactive response areas, that can be published within our web-stack via discussion with the developers.","title":"Microservices"},{"location":"advanced/#response-areas","text":"Response areas are components in the frontend where student users can enter a response. The response is sent to the evaluation function, which returns feedback to the response area. In the alpha version response areas are built into the software (rather than being modular) so are not straightforward to redevelop. This website catalogues the basic behaviour of response areas, to inform developers of evaluation functions. Response areas - overview { .md-button .md-button--primary style=\"width: 400px;\"}","title":"Response areas"},{"location":"advanced/#administrators","text":"Content to be added.","title":"Administrators"},{"location":"advanced/placeholder/","text":"coming soon","title":"coming soon"},{"location":"advanced/placeholder/#coming-soon","text":"","title":"coming soon"},{"location":"advanced/chat_functions/local/","text":"Running and Testing Agents Locally You can run the Python function for your agent itself by writing a main() function, or you can call the testbench_prompts.py script that runs a similar pipeline to the module.py . python src/agents/utils/testbench_prompts.py You can also use the test_prompts.py script to test the agents with example inputs from Lambda Feedback questions and synthetic conversations. python src/agents/utils/test_prompts.py Testing using the Docker Image :material-docker: You can also build and run the docker pipeline for the agents. The chatbot agents are deployed onto a AWS Lambda serverless cloud function using the docker image. Hence, for final testing of your chatbots, we recommend completing those steps. Build the Docker Image To build the Docker image, run the following command in the root folder of the project (where the Dockerfile is located): docker build -t llm_chat . Running the Docker Image To run the Docker image, use the following command: Without .env file: docker run -e OPENAI_API_KEY={your key} -e OPENAI_MODEL={your LLM chosen model name} -p 8080:8080 llm_chat With container name (for interaction, e.g. copying file from inside the docker container): docker run --env-file .env -it --name my-lambda-container -p 8080:8080 llm_chat This will start the evaluation function and expose it on port 8080 and it will be open to be curl: curl --location 'http://localhost:8080/2015-03-31/functions/function/invocations' --header 'Content-Type: application/json' --data '{\"message\":\"hi\",\"params\":{\"conversation_id\":\"12345Test\",\"conversation_history\": [{\"type\":\"user\",\"content\":\"hi\"}]}}' Call Docker Container From Postman POST URL: http://localhost:8080/2015-03-31/functions/function/invocations Body: { \"message\":\"hi\", \"params\":{ \"conversation_id\":\"12345Test\", \"conversation_history\": [{\"type\":\"user\",\"content\":\"hi\"}] } } Body with optional Params: { \"message\":\"hi\", \"params\":{ \"conversation_id\":\"12345Test\", \"conversation_history\":[{\"type\":\"user\",\"content\":\"hi\"}], \"summary\":\" \", \"conversational_style\":\" \", \"question_response_details\": \"\", \"include_test_data\": true, \"agent_type\": {agent_name} } }","title":"Testing Functions Locally"},{"location":"advanced/chat_functions/local/#running-and-testing-agents-locally","text":"You can run the Python function for your agent itself by writing a main() function, or you can call the testbench_prompts.py script that runs a similar pipeline to the module.py . python src/agents/utils/testbench_prompts.py You can also use the test_prompts.py script to test the agents with example inputs from Lambda Feedback questions and synthetic conversations. python src/agents/utils/test_prompts.py","title":"Running and Testing Agents Locally"},{"location":"advanced/chat_functions/local/#testing-using-the-docker-image-material-docker","text":"You can also build and run the docker pipeline for the agents. The chatbot agents are deployed onto a AWS Lambda serverless cloud function using the docker image. Hence, for final testing of your chatbots, we recommend completing those steps.","title":"Testing using the Docker Image :material-docker:"},{"location":"advanced/chat_functions/local/#build-the-docker-image","text":"To build the Docker image, run the following command in the root folder of the project (where the Dockerfile is located): docker build -t llm_chat .","title":"Build the Docker Image"},{"location":"advanced/chat_functions/local/#running-the-docker-image","text":"To run the Docker image, use the following command:","title":"Running the Docker Image"},{"location":"advanced/chat_functions/local/#without-env-file","text":"docker run -e OPENAI_API_KEY={your key} -e OPENAI_MODEL={your LLM chosen model name} -p 8080:8080 llm_chat","title":"Without .env file:"},{"location":"advanced/chat_functions/local/#with-container-name-for-interaction-eg-copying-file-from-inside-the-docker-container","text":"docker run --env-file .env -it --name my-lambda-container -p 8080:8080 llm_chat This will start the evaluation function and expose it on port 8080 and it will be open to be curl: curl --location 'http://localhost:8080/2015-03-31/functions/function/invocations' --header 'Content-Type: application/json' --data '{\"message\":\"hi\",\"params\":{\"conversation_id\":\"12345Test\",\"conversation_history\": [{\"type\":\"user\",\"content\":\"hi\"}]}}'","title":"With container name (for interaction, e.g. copying file from inside the docker container):"},{"location":"advanced/chat_functions/local/#call-docker-container-from-postman","text":"POST URL: http://localhost:8080/2015-03-31/functions/function/invocations Body: { \"message\":\"hi\", \"params\":{ \"conversation_id\":\"12345Test\", \"conversation_history\": [{\"type\":\"user\",\"content\":\"hi\"}] } } Body with optional Params: { \"message\":\"hi\", \"params\":{ \"conversation_id\":\"12345Test\", \"conversation_history\":[{\"type\":\"user\",\"content\":\"hi\"}], \"summary\":\" \", \"conversational_style\":\" \", \"question_response_details\": \"\", \"include_test_data\": true, \"agent_type\": {agent_name} } }","title":"Call Docker Container From Postman"},{"location":"advanced/chat_functions/quickstart/","text":"Developing Chat Agents: Getting Started What is a Chat Agent? It's a function which calls Large Language Models (LLMs) to respond to the student's messages given contxtual data: question data user data such as past responses to the problem Chatbot Agents capture and automate the process of assisting students during their learning process when outside of classroom. Getting Setup for Development Get the code on your local machine (Using github desktop or the git cli) For new functions: clone the main repo for lambda-chat and create a new branch. Then go under scr/agents and copy the base_agent folder. For existing functions: please make your changes on a new separate branch If you are creating a new chatbot agent , you'll need to set it's name as the folder name in scr/agents and its corresponding files. You are now ready to start making changes and implementing features by editing each of the three main function-logic files: scr/agents/{base_agent}/{base}_agent.py : This file contains the main LLM pipeline using LangGraph and LangChain . the agent expects the following inputs when it being called: Body with necessary Params: JSON { \"message\":\"hi\", \"params\":{ \"conversation_id\":\"12345Test\", \"conversation_history\": [{\"type\":\"user\",\"content\":\"hi\"}] } } Body with optional Params: JSON { \"message\":\"hi\", \"params\":{ \"conversation_id\":\"12345Test\", \"conversation_history\":[{\"type\":\"user\",\"content\":\"hi\"}], \"summary\":\" \", \"conversational_style\":\" \", \"question_response_details\": \"\", \"include_test_data\": true, \"agent_type\": {agent_name} } } scr/agents/{base_agent}/{base}_prompts.py : This is where you can write the system prompts that describe how your AI Assistant should behave and respond to the user. Make sure to add your agent invoke() function to the module.py file. Please add a README.md file to describe the use and behaviour of your agent. Changes can be tested locally by running the pipeline tests using: bash pytest src/module_test.py Running and Testing Agents Locally { .md-button } Merge commits into any branch (except main) will trigger the dev.yml workflow, which will build the docker image, push it to a shared dev ECR repository to make the function available from the dev and localhost client app. In order to make your new chatbot available on the LambdaFeedback platform, you will have to get in contact with the ADMINS on the platform.","title":"Quickstart"},{"location":"advanced/chat_functions/quickstart/#developing-chat-agents-getting-started","text":"","title":"Developing Chat Agents: Getting Started"},{"location":"advanced/chat_functions/quickstart/#what-is-a-chat-agent","text":"It's a function which calls Large Language Models (LLMs) to respond to the student's messages given contxtual data: question data user data such as past responses to the problem Chatbot Agents capture and automate the process of assisting students during their learning process when outside of classroom.","title":"What is a Chat Agent?"},{"location":"advanced/chat_functions/quickstart/#getting-setup-for-development","text":"Get the code on your local machine (Using github desktop or the git cli) For new functions: clone the main repo for lambda-chat and create a new branch. Then go under scr/agents and copy the base_agent folder. For existing functions: please make your changes on a new separate branch If you are creating a new chatbot agent , you'll need to set it's name as the folder name in scr/agents and its corresponding files. You are now ready to start making changes and implementing features by editing each of the three main function-logic files: scr/agents/{base_agent}/{base}_agent.py : This file contains the main LLM pipeline using LangGraph and LangChain . the agent expects the following inputs when it being called: Body with necessary Params: JSON { \"message\":\"hi\", \"params\":{ \"conversation_id\":\"12345Test\", \"conversation_history\": [{\"type\":\"user\",\"content\":\"hi\"}] } } Body with optional Params: JSON { \"message\":\"hi\", \"params\":{ \"conversation_id\":\"12345Test\", \"conversation_history\":[{\"type\":\"user\",\"content\":\"hi\"}], \"summary\":\" \", \"conversational_style\":\" \", \"question_response_details\": \"\", \"include_test_data\": true, \"agent_type\": {agent_name} } } scr/agents/{base_agent}/{base}_prompts.py : This is where you can write the system prompts that describe how your AI Assistant should behave and respond to the user. Make sure to add your agent invoke() function to the module.py file. Please add a README.md file to describe the use and behaviour of your agent. Changes can be tested locally by running the pipeline tests using: bash pytest src/module_test.py Running and Testing Agents Locally { .md-button } Merge commits into any branch (except main) will trigger the dev.yml workflow, which will build the docker image, push it to a shared dev ECR repository to make the function available from the dev and localhost client app. In order to make your new chatbot available on the LambdaFeedback platform, you will have to get in contact with the ADMINS on the platform.","title":"Getting Setup for Development"},{"location":"advanced/evaluation_functions/","text":"Deployed Evaluation Functions Documentation for each of the functions registered to the LambdaFeedback platform are pulled in this section automatically. This is done using a custom MkDocs plugin EvalDocsLoader . If you can't see any documentation files as subsections here, please contact an admin.","title":"Deployed Evaluation Functions"},{"location":"advanced/evaluation_functions/#deployed-evaluation-functions","text":"Documentation for each of the functions registered to the LambdaFeedback platform are pulled in this section automatically. This is done using a custom MkDocs plugin EvalDocsLoader . If you can't see any documentation files as subsections here, please contact an admin.","title":"Deployed Evaluation Functions"},{"location":"advanced/evaluation_functions/alternate_languages/","text":"Alternate Evaluation Function Languages Lambda-Compatible Images Extending a pre-built Lambda image Available for: Node.js, Python, Java, .NET, Go, Ruby Docs Repo These base images are regularly updated, and the most widely used (more docs) They also come with pre-packaged runtime interface clients - a HTTP interface for runtimes to receive invocation events and respond Good for local development Creating custom base images Using the lambda/provided image This \"contains all the required components to run functions packaged as container images on Lambda\" Building a custom runtime from scratch Custom AWS Lambda runtimes Runtimes walkthrough tutorial Emulate execution locally? Lambda provides a runtime interface emulator (RIE) for you to test your function locally. The AWS base images for Lambda and base images for custom runtimes include the RIE. For other base images, you can download the Runtime interface emulator from the AWS GitHub repository. Misc Notes/Sources The Lambda Execution Environment Create Images from Alternative base images Development Philosophy Ultimately we want to call a function made by a user in any language. Two ways to do this: We write and provide runtime in all the different languages. This means that all the logic happens in that language. We write the code that actually receives the requests from lambda function events. In this case, the user function can be imported from those handlers. Writing handlers in each of those languages requires time and extensive knowledge (in order to write robust code) Handler code needs to: Have clean and reliable error catching We write a global runtime, which makes a call to their function via a sub-process. We call their script, which must recieve the payload as a commandline argument. User has to write more code For allowing cmdline arguments, and parsing of inputs Might be slower than in other languages. Since another script has to be executed.","title":"Alternate Function Languages"},{"location":"advanced/evaluation_functions/alternate_languages/#alternate-evaluation-function-languages","text":"","title":"Alternate Evaluation Function Languages"},{"location":"advanced/evaluation_functions/alternate_languages/#lambda-compatible-images","text":"","title":"Lambda-Compatible Images"},{"location":"advanced/evaluation_functions/alternate_languages/#extending-a-pre-built-lambda-image","text":"Available for: Node.js, Python, Java, .NET, Go, Ruby Docs Repo These base images are regularly updated, and the most widely used (more docs) They also come with pre-packaged runtime interface clients - a HTTP interface for runtimes to receive invocation events and respond Good for local development","title":"Extending a pre-built Lambda image"},{"location":"advanced/evaluation_functions/alternate_languages/#creating-custom-base-images","text":"Using the lambda/provided image This \"contains all the required components to run functions packaged as container images on Lambda\" Building a custom runtime from scratch Custom AWS Lambda runtimes Runtimes walkthrough tutorial Emulate execution locally? Lambda provides a runtime interface emulator (RIE) for you to test your function locally. The AWS base images for Lambda and base images for custom runtimes include the RIE. For other base images, you can download the Runtime interface emulator from the AWS GitHub repository.","title":"Creating custom base images"},{"location":"advanced/evaluation_functions/alternate_languages/#misc-notessources","text":"The Lambda Execution Environment Create Images from Alternative base images","title":"Misc Notes/Sources"},{"location":"advanced/evaluation_functions/alternate_languages/#development-philosophy","text":"Ultimately we want to call a function made by a user in any language. Two ways to do this: We write and provide runtime in all the different languages. This means that all the logic happens in that language. We write the code that actually receives the requests from lambda function events. In this case, the user function can be imported from those handlers. Writing handlers in each of those languages requires time and extensive knowledge (in order to write robust code) Handler code needs to: Have clean and reliable error catching We write a global runtime, which makes a call to their function via a sub-process. We call their script, which must recieve the payload as a commandline argument. User has to write more code For allowing cmdline arguments, and parsing of inputs Might be slower than in other languages. Since another script has to be executed.","title":"Development Philosophy"},{"location":"advanced/evaluation_functions/feedback/","text":"Base Layer Feedback Implementation Input structure: { \"response\": \"user input\", \"answer\": \"original answer\", \"params\": { \"cases\": [ { \"answer\": \"same shape as original answer\", \"feedback\": \"feedback string\", \"params\": {...} # Any parameters to set or override }, ... ] } } Execution Logic for the eval command First evaluation_function is called using the response, answer and params If evaluation threw an error, then return the error message If evaluation was successful, check for matching cases If \"params\" contains a non-empty list of \"cases\", determine the correct feedback, add it to the result and return the block (Logic for this is described in the next section) If \"params\" doesn't contain a list of cases, simply return the result Determining the correct feedback case Iterate through each case in the list of cases : Validate the case has an 'answer' and 'feedback' If the case contains 'params', then merge them with the original 'params', overwriting values if they already exist Call evaluation_function with the student \"response\", case \"answer\" and merged \"params\" If the function returns \"is_correct: true\", we have a match, store case and feedback returned from the evaluation function If the function returns an error, catch it and add it to a list of warnings If no matches were found, don't return any feedback If exactly one match was found, check if override_eval_feedback is in parameters If override_eval_feedback is set to true, return the case feedback If override_eval_feedback is not set or set to false, append the evaluation function feedback to the case feedback, separated by a linebreak and the return the result If more than one matches were found, return the first one (using the same procedure as if only one match was found) and add a warning explaining which cases matched, and why only the first was selected.","title":"Feedback"},{"location":"advanced/evaluation_functions/feedback/#base-layer-feedback-implementation","text":"Input structure: { \"response\": \"user input\", \"answer\": \"original answer\", \"params\": { \"cases\": [ { \"answer\": \"same shape as original answer\", \"feedback\": \"feedback string\", \"params\": {...} # Any parameters to set or override }, ... ] } }","title":"Base Layer Feedback Implementation"},{"location":"advanced/evaluation_functions/feedback/#execution-logic-for-the-eval-command","text":"First evaluation_function is called using the response, answer and params If evaluation threw an error, then return the error message If evaluation was successful, check for matching cases If \"params\" contains a non-empty list of \"cases\", determine the correct feedback, add it to the result and return the block (Logic for this is described in the next section) If \"params\" doesn't contain a list of cases, simply return the result","title":"Execution Logic for the eval command"},{"location":"advanced/evaluation_functions/feedback/#determining-the-correct-feedback-case","text":"Iterate through each case in the list of cases : Validate the case has an 'answer' and 'feedback' If the case contains 'params', then merge them with the original 'params', overwriting values if they already exist Call evaluation_function with the student \"response\", case \"answer\" and merged \"params\" If the function returns \"is_correct: true\", we have a match, store case and feedback returned from the evaluation function If the function returns an error, catch it and add it to a list of warnings If no matches were found, don't return any feedback If exactly one match was found, check if override_eval_feedback is in parameters If override_eval_feedback is set to true, return the case feedback If override_eval_feedback is not set or set to false, append the evaluation function feedback to the case feedback, separated by a linebreak and the return the result If more than one matches were found, return the first one (using the same procedure as if only one match was found) and add a warning explaining which cases matched, and why only the first was selected.","title":"Determining the correct feedback case"},{"location":"advanced/evaluation_functions/local/","text":"Running and Testing Functions Locally Simple Using Docker :material-docker: This method builds and runs evaluation functions in the same way they are deployed on AWS as Lambda functions. Extending a pre-built and AWS-maintained base python image , the container contains a HTTP client which can be used to locally simulate Lambda execution events. Note that this is different from the simple method proposed, in that it gives access to all the functionality provided by the base layer. This means that commands such as docs and healthcheck can be tested. Install Docker on your machine Navigate to the root directory of your function Build the image. This will pull our base image from Dockerhub, extend it with files specific to your evaluation function and name it eval-tmp . bash docker image build -t eval-tmp app Spin up a container using the image built in the previous step. bash docker run --rm -d --name eval-function -p 9000:8080 eval-tmp You can now simulate requests to the function using any request client (like Insomnia or Postman ). By default, the url you can hit is: url http://localhost:9000/2015-03-31/functions/function/invocations ???+ warning When deployed, our Lambda functions are triggered by calls made through an AWS API Gateway . This means that when testing locally, events sent should follow the structure of events triggered by that resource. That is, if you want to simulate what it would be like to make web requests to the deployed function. Specifically, this means structuring requests in the following way: ```json { \"headers\": { \"command\": \"eval\" }, \"body\": { \"response\": \"a\", \"answer\": \"a\", \"params\": { \"garlic\": \"moreish\" } } } ``` The main difference is that `headers` and `body` are sent as keys in the main body of the local request. When hitting the deployed function through the API Gateway, the `command` field would instead be passed in the actual HTTP headers of the request - and the actual request body would only contain the `response`, `answer` and `params` fields. (Optional) The run command specifies the -d flag, which spins up the container in detached mode. If you want to inspect the logs of the function, you can run: bash docker container logs -f eval-function ??? note \"Tip\" You will very rarely need this, but you can peek into the running container by opening a shell within it using: ```bash docker exec -it eval-function bash ``` Useful Links","title":"Testing Functions Locally"},{"location":"advanced/evaluation_functions/local/#running-and-testing-functions-locally","text":"","title":"Running and Testing Functions Locally"},{"location":"advanced/evaluation_functions/local/#simple","text":"","title":"Simple"},{"location":"advanced/evaluation_functions/local/#using-docker-material-docker","text":"This method builds and runs evaluation functions in the same way they are deployed on AWS as Lambda functions. Extending a pre-built and AWS-maintained base python image , the container contains a HTTP client which can be used to locally simulate Lambda execution events. Note that this is different from the simple method proposed, in that it gives access to all the functionality provided by the base layer. This means that commands such as docs and healthcheck can be tested. Install Docker on your machine Navigate to the root directory of your function Build the image. This will pull our base image from Dockerhub, extend it with files specific to your evaluation function and name it eval-tmp . bash docker image build -t eval-tmp app Spin up a container using the image built in the previous step. bash docker run --rm -d --name eval-function -p 9000:8080 eval-tmp You can now simulate requests to the function using any request client (like Insomnia or Postman ). By default, the url you can hit is: url http://localhost:9000/2015-03-31/functions/function/invocations ???+ warning When deployed, our Lambda functions are triggered by calls made through an AWS API Gateway . This means that when testing locally, events sent should follow the structure of events triggered by that resource. That is, if you want to simulate what it would be like to make web requests to the deployed function. Specifically, this means structuring requests in the following way: ```json { \"headers\": { \"command\": \"eval\" }, \"body\": { \"response\": \"a\", \"answer\": \"a\", \"params\": { \"garlic\": \"moreish\" } } } ``` The main difference is that `headers` and `body` are sent as keys in the main body of the local request. When hitting the deployed function through the API Gateway, the `command` field would instead be passed in the actual HTTP headers of the request - and the actual request body would only contain the `response`, `answer` and `params` fields. (Optional) The run command specifies the -d flag, which spins up the container in detached mode. If you want to inspect the logs of the function, you can run: bash docker container logs -f eval-function ??? note \"Tip\" You will very rarely need this, but you can peek into the running container by opening a shell within it using: ```bash docker exec -it eval-function bash ```","title":"Using Docker :material-docker:"},{"location":"advanced/evaluation_functions/local/#useful-links","text":"","title":"Useful Links"},{"location":"advanced/evaluation_functions/module/","text":"evaluation-function-utils Package Error Reporting Schema validation Local testing Errors Submodule containing custom error and exception classes, which can be properly caught by the base evaluation layer, and return more detailed and appropriate errors. class EvaluationException This class extends the usual python Exception , with additional functionality. It can be used to package additional fields and values to errors thrown and returned by evaluation functions. !!! example If at some point in the execution of the evaluation_function , an error is thrown: ```python from evaluation_function_utils.errors import EvaluationException if isinstance(input, str): raise EvaluationException( \"The input must not be a string\", valid_types=[\"int\", \"float\", \"array\"], ) ``` Then the output generated by the lambda function will look like: ```python { \"command\": \"eval\", \"error\": { \"message\": \"The input must not be a string\", \"valid_types\": [ \"int\", \"float\", \"array\" ] } } ``` This class contains an error_dict property, which packages the additional arguments given to the Exception instance into a JSON-serializable object. It does so in an error-safe way, also reporting serialization errors if they occur. Client This submodule contains a custom EvaluationFunctionClient , which can be used to call other deployed evaluation functions. class EvaluationFunctionClient Client wrapped around the botocore.client.Lambda, for invoking deployed evaluation functions. On initialisation, it fetches credentials from environment variables \"INVOKER_KEY\", \"INVOKER_ID\" and \"INVOKER_REGION\", or from an optional environment file prescrived by env_path . !!! example ```python from evaluation_function_utils.client import EvaluationFunctionClient client = EvaluationFunctionClient() def evaluation_function(response, answer, params): return client.invoke('isExactEqual', response, answer, params) ``` In this example, the evaluation_function completely offloads grading to the deployed 'isExactEqual' function. Note: The EvaluationFunctionClient.invoke method was designed to behave exactly as if the evaluation_function function defined in the targeted deployed function was called directly. This means that if errors are encountered an EvaluationException is raised.","title":"Evaluation Function Utils"},{"location":"advanced/evaluation_functions/module/#evaluation-function-utils-package","text":"Error Reporting Schema validation Local testing","title":"evaluation-function-utils Package"},{"location":"advanced/evaluation_functions/module/#errors","text":"Submodule containing custom error and exception classes, which can be properly caught by the base evaluation layer, and return more detailed and appropriate errors.","title":"Errors"},{"location":"advanced/evaluation_functions/module/#class-evaluationexception","text":"This class extends the usual python Exception , with additional functionality. It can be used to package additional fields and values to errors thrown and returned by evaluation functions. !!! example If at some point in the execution of the evaluation_function , an error is thrown: ```python from evaluation_function_utils.errors import EvaluationException if isinstance(input, str): raise EvaluationException( \"The input must not be a string\", valid_types=[\"int\", \"float\", \"array\"], ) ``` Then the output generated by the lambda function will look like: ```python { \"command\": \"eval\", \"error\": { \"message\": \"The input must not be a string\", \"valid_types\": [ \"int\", \"float\", \"array\" ] } } ``` This class contains an error_dict property, which packages the additional arguments given to the Exception instance into a JSON-serializable object. It does so in an error-safe way, also reporting serialization errors if they occur.","title":"class EvaluationException"},{"location":"advanced/evaluation_functions/module/#client","text":"This submodule contains a custom EvaluationFunctionClient , which can be used to call other deployed evaluation functions.","title":"Client"},{"location":"advanced/evaluation_functions/module/#class-evaluationfunctionclient","text":"Client wrapped around the botocore.client.Lambda, for invoking deployed evaluation functions. On initialisation, it fetches credentials from environment variables \"INVOKER_KEY\", \"INVOKER_ID\" and \"INVOKER_REGION\", or from an optional environment file prescrived by env_path . !!! example ```python from evaluation_function_utils.client import EvaluationFunctionClient client = EvaluationFunctionClient() def evaluation_function(response, answer, params): return client.invoke('isExactEqual', response, answer, params) ``` In this example, the evaluation_function completely offloads grading to the deployed 'isExactEqual' function. Note: The EvaluationFunctionClient.invoke method was designed to behave exactly as if the evaluation_function function defined in the targeted deployed function was called directly. This means that if errors are encountered an EvaluationException is raised.","title":"class EvaluationFunctionClient"},{"location":"advanced/evaluation_functions/quickstart/","text":"Developing Evaluation Functions: Getting Started What is an Evaluation Function? It's a cloud function which performs some computation given some user input (the response ), a problem-specific source of truth (the answer ), and some optional parameters ( params ). Evaluation functions capture and automate the role of a teacher who has to keep marking the same question countless times. The simplest example for this would be one which checks for exact equivalence - where the function signals a response is correct only if it is identical to the answer . However, more complex and exotic ones such as symbolic expression equivalence and parsing of physical units can be imagined. Getting Setup for Development Get the code on your local machine (Using github desktop or the git cli) For new functions: create and clone a new repository using the boilerplate template . Make sure the new repository is set to public (it needs access to organisation secrets) . For existing functions: please make your changes on a new separate branch If you are creating a new function , you'll need to set it's name (as it will be deployed) in the config.json file, available in the root directory. The name must be unique. To view existing grading functions, go to: Staging API Gateway Integrations Production API Gateway Integrations You are now ready to start making changes and implementing features by editing each of the three main function-logic files: app/evaluation.py : This file contains the main evaluation_function function, which ultimately gets called to compare a response to an answer . evaluation.py Specification { .md-button } app/evaluation_tests.py : This is where you can test the logic in evaluation.py , following the standard unittest format. evaluation_tests.py Specification { .md-button } Documentation files: app/docs/dev.md : This file should be edited to reflect any changes/features implemented, following a developer perspective. It is baked into the function's image to be pulled by this documentation website under the deployed functions section. app/docs/user.md : This file documents how the function can be used by a teacher user, from the perspective of editing content on the LambdaFeedback platform. This time, files are collated and displayed in the Teacher section. Changes can be tested locally by running the tests you've written using: python -m unittest app/evaluation_tests.py Running and Testing Functions Locally { .md-button } Merge commits into the default branch will trigger the test-and-deploy.yml workflow, which will build the docker image, push it to a shared ECR repository, then call the backend grading-function/ensure route to build the necessary infrastructure to make the function available from the client app. You can now test the deployed evaluation function using your prefered request client (such as Insomnia or Postman or simply curl from a terminal). Functions are made available at: url https://c1o0u8se7b.execute-api.eu-west-2.amazonaws.com/default/<function name as defined in config.json> !!! example \"Example Request to SymbolicEqual\" curl --request GET \\ --url https://c1o0u8se7b.execute-api.eu-west-2.amazonaws.com/default/symbolicEqual \\ --header 'Content-Type: application/json' \\ --header 'command: eval' \\ --data '{\"response\": \"x + x\", \"answer\": \"2*x\"}' In order to make your new function available on the LambdaFeedback platform, you have to register it via the Admin Panel . This is done by supplying its name, url (the same as the one above) and supported response types. More Info General Function Specification and Behaviour Function philosophy including deployment strategy Request/Response schemas and communication spec Base layer logic, properties and behaviour EvaluationFunctionUtils (python package) Error Reporting Schema validation Local testing","title":"Quickstart Guide"},{"location":"advanced/evaluation_functions/quickstart/#developing-evaluation-functions-getting-started","text":"","title":"Developing Evaluation Functions: Getting Started"},{"location":"advanced/evaluation_functions/quickstart/#what-is-an-evaluation-function","text":"It's a cloud function which performs some computation given some user input (the response ), a problem-specific source of truth (the answer ), and some optional parameters ( params ). Evaluation functions capture and automate the role of a teacher who has to keep marking the same question countless times. The simplest example for this would be one which checks for exact equivalence - where the function signals a response is correct only if it is identical to the answer . However, more complex and exotic ones such as symbolic expression equivalence and parsing of physical units can be imagined.","title":"What is an Evaluation Function?"},{"location":"advanced/evaluation_functions/quickstart/#getting-setup-for-development","text":"Get the code on your local machine (Using github desktop or the git cli) For new functions: create and clone a new repository using the boilerplate template . Make sure the new repository is set to public (it needs access to organisation secrets) . For existing functions: please make your changes on a new separate branch If you are creating a new function , you'll need to set it's name (as it will be deployed) in the config.json file, available in the root directory. The name must be unique. To view existing grading functions, go to: Staging API Gateway Integrations Production API Gateway Integrations You are now ready to start making changes and implementing features by editing each of the three main function-logic files: app/evaluation.py : This file contains the main evaluation_function function, which ultimately gets called to compare a response to an answer . evaluation.py Specification { .md-button } app/evaluation_tests.py : This is where you can test the logic in evaluation.py , following the standard unittest format. evaluation_tests.py Specification { .md-button } Documentation files: app/docs/dev.md : This file should be edited to reflect any changes/features implemented, following a developer perspective. It is baked into the function's image to be pulled by this documentation website under the deployed functions section. app/docs/user.md : This file documents how the function can be used by a teacher user, from the perspective of editing content on the LambdaFeedback platform. This time, files are collated and displayed in the Teacher section. Changes can be tested locally by running the tests you've written using: python -m unittest app/evaluation_tests.py Running and Testing Functions Locally { .md-button } Merge commits into the default branch will trigger the test-and-deploy.yml workflow, which will build the docker image, push it to a shared ECR repository, then call the backend grading-function/ensure route to build the necessary infrastructure to make the function available from the client app. You can now test the deployed evaluation function using your prefered request client (such as Insomnia or Postman or simply curl from a terminal). Functions are made available at: url https://c1o0u8se7b.execute-api.eu-west-2.amazonaws.com/default/<function name as defined in config.json> !!! example \"Example Request to SymbolicEqual\" curl --request GET \\ --url https://c1o0u8se7b.execute-api.eu-west-2.amazonaws.com/default/symbolicEqual \\ --header 'Content-Type: application/json' \\ --header 'command: eval' \\ --data '{\"response\": \"x + x\", \"answer\": \"2*x\"}' In order to make your new function available on the LambdaFeedback platform, you have to register it via the Admin Panel . This is done by supplying its name, url (the same as the one above) and supported response types.","title":"Getting Setup for Development"},{"location":"advanced/evaluation_functions/quickstart/#more-info","text":"General Function Specification and Behaviour Function philosophy including deployment strategy Request/Response schemas and communication spec Base layer logic, properties and behaviour EvaluationFunctionUtils (python package) Error Reporting Schema validation Local testing","title":"More Info"},{"location":"advanced/evaluation_functions/specification/","text":"Evaluation Function Specification Introduction and Philosophy Functionality for each evaluation function is split up as follows: !!! note \"\" Universal function behaviour applicable to every function, such as the ability to run tests, return documentation and execute the evaluation is handled by the Base Layer . This is the docker image which is extended by every developed evaluation function. !!! abstract \"\" Functionality that may be required in more than one function (but not necessarily all), such as the ability to call already deployed functions and error reporting is handled by the evaluation_function_utils python package. This package comes pre-installed in the base layer, and can optionally be imported and called from the evaluation_function . !!! info \"\" Finally, specific comparison logic and handling of bespoke evaluation parameters is done in the custom evaluation_function , unique to each deployed instance. This is the logic that differenciates each function (comparing numbers, matrices, images, equations, graphs, text, tables, etc ...). Commands Commands are handled by the base layer . They define a unified interface for interacting with all deployed evaluation functions on the web. Practically, these are specified in the \"command\" request header. !!! example To execute the docs-user command for a function, the following header would be specified alonside the http request made to the endpoint on which the function is made available: ```bash curl --request GET \\ --url https://c1o0u8se7b.execute-api.eu-west-2.amazonaws.com/default/isExactEqual \\ --header 'command: docs-user' ``` eval This is the default command, used to compare a student's response and correct answer , given certain params . Outputs for this command depend on the success of the execution of the user-defined evaluation_function . If an error was thrown during execution, it is caught by the main handler and an error block is returned - otherwise, successful execution outputs are supplied under a result field. !!! success \"Output Structure: Successful evaluation\" ``` { .python .annotate } { \"command\": \"eval\", \"result\": { \"is_correct\": \"<bool>\", # Optional fields added by feedback generation (1) \"feedback\": \"<string>\", \"warnings\": \"<array>\" # This output can also contain any number of fields given by `evaluation_function` } } ``` 1. See the [Feedback Page](feedback.md) for more information !!! fail \"Output Structure: Error thrown during Execution\" ``` { .python .annotate } { \"command\": \"eval\", \"error\": { \"message\": \"<string>\", # Always present # This object can contain other number of additional fields # passed through by the EvaluationException (1) for debugging e.g.: \"serialization_errors\": [], \"culprit\": \"user\", \"detail\": \"...\" } } ``` 1. This is a custom error class from the [evaluation-function-utils](module.md) package, which developers are encouraged to use in order to output richer errors. See the [Error handling](#error-handling) section for more information. preview This command is similar to eval , except it doesn't return whether an answer is correct or provide feedback. Instead, preview provides a way for students view their response after some pre-processing, e.g. as rendered LaTeX when using Sympy for symbolic algebra. This should be faster to compute than eval , allowing students to get live preview of their response. healthcheck This command runs and returns a summary three testing suites: requests, responses and evaluation. Request and response tests check that inputs and outputs to the function work correctly, and follow the correct syntax. Evaluation tests are unique to each evaluation function and test the actual comparison logic. docs-user Command returns the docs/user.md file (base64 encoded) docs-dev Command returns the docs/dev.md file (base64 encoded) Base Layer File Structure A standard evaluation function repository based on the provided boilerplate will have the following file structure: app/ __init__.py evaluation.py # Script containing the main evaluation_function evaluation_tests.py # Unittests for the main evaluation_function requirements.txt # list of packages needed for algorithm.py Dockerfile # for building whole image to deploy to AWS docs/ # Documentation pages for this function (required) dev.md # Developer-oriented documentation user.md # LambdaFeedback content author documentation .github/ workflows/ test-and-deploy.yml # Testing and deployment pipeline config.json # Specify the name of the evaluation function in this file README.md .gitignore !!! warning If you want to split up function logic into different files, these must be added to the `Dockerfile`. This is so they are packaged with the built image when deployed. For example, if `evaluation.py` imports functionality from an `app/utils.py` file, then the following line must be added: ```dockerfile linenums=\"9\" hl_lines=\"7 8\" RUN pip3 install -r requirements.txt # Copy the evaluation and testing scripts COPY evaluation.py ./app/ COPY evaluation_tests.py ./app/ # Copy additional files COPY utils.py ./app/ # Copy Documentation COPY docs/dev.md ./app/docs/dev.md ``` evaluation.py The entire framework, validation and testing developed around evaluation functions is ultimately used to get to this file, or the evaluation_function function within it, to be more precise. The evaluation_function Inputs All evaluation functions are passed three arguments: response : Data input by the user answer : Data to compare user input to (could be from a DB of answers, or pre-generated by other functions) params : Parameters which affect the comparison process (replacements, tolerances, feedbacks, ...) For evaluation functions that use Sympy or LaTeX for mathematical expressions, it's not always possible for a student to type the correct symbols. Instead we need to use simpler symbols. For example, $\\overline{U_{ij}}$ cannot be written using standard sympy syntax, and therefore has to be substituted for something else, such as \"u\" or \"U\" . Therefore, evaluation functions using mathematical expressions should be able to handle multiple symbols to represent the same variable. To achieve this, every evaluation function is passed a symbols entry in params , to allow functions to convert a student's response: { \"response\": \"user input\", \"answer\": \"model response to compare against\", \"params\": { \"symbols\": {...}, ... # params set by the teacher } } symbols is a dictionary, where each key represents the main Sympy symbol (known as the code ), and has two entries: latex : the string used for rendering the symbol in LaTeX aliases : a list of alternative Sympy symbols that can be used by the student to represent the code . For the example above with $\\overline{U_{ij}}$, symbols would have the form: { ... \"params\": { \"symbols\": { \"u\": { \"latex\": \"\\\\overline{U_{ij}}\", \"aliases\": [\"U\"] } } } } Note that in JSON, special characters need to be escaped, so the latex symbol above will have a double-backslash instead. Currently, the backend only supports one LaTeX symbol for multiple Sympy symbols. In future, this will be a many-to-many relationship. Context When a student submits a response to a response area the number of previously submitted responses submitted to the same response area byt the same student will be sent to the evaluation function. The following format is used: { \"submission_context\": { \"submissions_per_student_per_response_area\": # non-negative integer that represent the nubmer of previously processed responses } } Outputs The function should output a single JSON-encodable dictionary. Although a large amount of freedom is given to what this dict contains, when utilising the function alongside the lambdafeedback web app, a few values are expected/able to be consumed: is_correct: <bool> : Boolean parameter indicate whether the comparison between response and answer was deemed correct under the parameters. This field is then used by the web app to provide the most simple feedback to the user (green/red). !!! info More standardised function outputs that the frontend can consume are to come Error Handling Error reporting should follow a specific approach for all evaluation functions. If the evaluation_function you've written doesn't throw any errors, then it's output is returned under the result field - and assumed to have worked properly . This means that if you catch an error in your code manually, and simply return it - the frontend will assume everything went fine. Instead, errors can be handled in two ways: Letting evaluation_function fail : On the request handler in the Base Layer , the call to evaluation_function is wrapped in a try/except which catches any exception. This causes the evaluation to stop completely, returning a standard message, and a repr of the exception thrown in the error.detail field. Custom errors : If you want to report more detailed errors from your function, use the EvaluationException class provided in the evaluation-function-utils package. These are caught before all other standard exceptions, and are dealt with in a different way. These provide a way for your function to throw errors and stop executing safely, while supplying more accurate feedback to the front-end. !!! Example It is discouraged to do the following in the evaluation code: python if something.bad.happened(): return { \"error\": { \"message\": \"Some important message\", \"other\": \"details\", } } As this causes the actual function output (by the AWS lambda function) to be: ```json { \"command\": \"eval\", \"result\": { \"error\": { \"message\": \"Some important message\", \"other\": \"details\" } } } ``` Instead, use custom exceptions from the [evaluation-function-utils](module.md#errors) package. ```python if something.bad.happened(): raise EvaluationException(message=\"Some important message\", other='details') ``` As the actual function output will look like: ```json { \"command\": \"eval\", \"error\": { \"message\": \"Some important message\", \"other\": \"details\" } } ``` This immediately indicates to the frontend client that something has gone wrong, allowing for proper feedback to be displayed. evaluation_tests.py This file is intended to contain unit tests for the evaluation_function . Python's built-in unittest framework is used. These tests are run by Github Actions whenever changes are pushed to the main branch, and the evaluation function is not deployed unless all the tests pass. !!! Example A minimal example of a test: import unittest from .evaluation import evaluation_function # Tests are functions beginning with \"test_\" in # a class that inherits from unittest.TestCase class TestEvaluationFunction(unittest.TestCase): def test_trivial(self): result = evaluation_function(\"a + b\", \"a + b\", {}) self.assertTrue(result[\"is_correct\"]) Tests can be run locally using $ python -m unittest app.evaluation_tests Autotests For writing simple tests, it may be easier to write the tests in a config file and have them run on the evaluation function automatically. This can be achieved using the autotests library, which can easily be integrated into an existing project by adding a decorator to the test class. See the autotests README for more information. Another benefit of this approach is that the tool that collects evaluation function documentation ( EvalDocsLoader ) can read this file and auto-generate examples of correct and incorrect responses. This can help new users understand the capabilities of your evaluation function. For an example of how this looks, see the user docs for compareBoolean . Documentation Evaluation function documentation is stored in two files, which contain documentation for developers and users respectively. These files are fetched by EvalDocsLoader , which integrates them into this documentation site. In order for EvalDocsLoader to find your docs, your evaluation function must: be deployed to the production site; belong to the lambda-feedback organisation on Github; have a topic called evaluation-function . Once these requirements are met, the docs you write should appear on the documentation site. docs/dev.md This should contain documentation that would be useful for new developers working on your function. docs/user.md This should contain information for non-technical users, such as an overview of capabilities, examples, and a description of parameters.","title":"General Specification"},{"location":"advanced/evaluation_functions/specification/#evaluation-function-specification","text":"","title":"Evaluation Function Specification"},{"location":"advanced/evaluation_functions/specification/#introduction-and-philosophy","text":"Functionality for each evaluation function is split up as follows: !!! note \"\" Universal function behaviour applicable to every function, such as the ability to run tests, return documentation and execute the evaluation is handled by the Base Layer . This is the docker image which is extended by every developed evaluation function. !!! abstract \"\" Functionality that may be required in more than one function (but not necessarily all), such as the ability to call already deployed functions and error reporting is handled by the evaluation_function_utils python package. This package comes pre-installed in the base layer, and can optionally be imported and called from the evaluation_function . !!! info \"\" Finally, specific comparison logic and handling of bespoke evaluation parameters is done in the custom evaluation_function , unique to each deployed instance. This is the logic that differenciates each function (comparing numbers, matrices, images, equations, graphs, text, tables, etc ...).","title":"Introduction and Philosophy"},{"location":"advanced/evaluation_functions/specification/#commands","text":"Commands are handled by the base layer . They define a unified interface for interacting with all deployed evaluation functions on the web. Practically, these are specified in the \"command\" request header. !!! example To execute the docs-user command for a function, the following header would be specified alonside the http request made to the endpoint on which the function is made available: ```bash curl --request GET \\ --url https://c1o0u8se7b.execute-api.eu-west-2.amazonaws.com/default/isExactEqual \\ --header 'command: docs-user' ```","title":"Commands"},{"location":"advanced/evaluation_functions/specification/#eval","text":"This is the default command, used to compare a student's response and correct answer , given certain params . Outputs for this command depend on the success of the execution of the user-defined evaluation_function . If an error was thrown during execution, it is caught by the main handler and an error block is returned - otherwise, successful execution outputs are supplied under a result field. !!! success \"Output Structure: Successful evaluation\" ``` { .python .annotate } { \"command\": \"eval\", \"result\": { \"is_correct\": \"<bool>\", # Optional fields added by feedback generation (1) \"feedback\": \"<string>\", \"warnings\": \"<array>\" # This output can also contain any number of fields given by `evaluation_function` } } ``` 1. See the [Feedback Page](feedback.md) for more information !!! fail \"Output Structure: Error thrown during Execution\" ``` { .python .annotate } { \"command\": \"eval\", \"error\": { \"message\": \"<string>\", # Always present # This object can contain other number of additional fields # passed through by the EvaluationException (1) for debugging e.g.: \"serialization_errors\": [], \"culprit\": \"user\", \"detail\": \"...\" } } ``` 1. This is a custom error class from the [evaluation-function-utils](module.md) package, which developers are encouraged to use in order to output richer errors. See the [Error handling](#error-handling) section for more information.","title":"eval"},{"location":"advanced/evaluation_functions/specification/#preview","text":"This command is similar to eval , except it doesn't return whether an answer is correct or provide feedback. Instead, preview provides a way for students view their response after some pre-processing, e.g. as rendered LaTeX when using Sympy for symbolic algebra. This should be faster to compute than eval , allowing students to get live preview of their response.","title":"preview"},{"location":"advanced/evaluation_functions/specification/#healthcheck","text":"This command runs and returns a summary three testing suites: requests, responses and evaluation. Request and response tests check that inputs and outputs to the function work correctly, and follow the correct syntax. Evaluation tests are unique to each evaluation function and test the actual comparison logic.","title":"healthcheck"},{"location":"advanced/evaluation_functions/specification/#docs-user","text":"Command returns the docs/user.md file (base64 encoded)","title":"docs-user"},{"location":"advanced/evaluation_functions/specification/#docs-dev","text":"Command returns the docs/dev.md file (base64 encoded)","title":"docs-dev"},{"location":"advanced/evaluation_functions/specification/#base-layer","text":"","title":"Base Layer"},{"location":"advanced/evaluation_functions/specification/#file-structure","text":"A standard evaluation function repository based on the provided boilerplate will have the following file structure: app/ __init__.py evaluation.py # Script containing the main evaluation_function evaluation_tests.py # Unittests for the main evaluation_function requirements.txt # list of packages needed for algorithm.py Dockerfile # for building whole image to deploy to AWS docs/ # Documentation pages for this function (required) dev.md # Developer-oriented documentation user.md # LambdaFeedback content author documentation .github/ workflows/ test-and-deploy.yml # Testing and deployment pipeline config.json # Specify the name of the evaluation function in this file README.md .gitignore !!! warning If you want to split up function logic into different files, these must be added to the `Dockerfile`. This is so they are packaged with the built image when deployed. For example, if `evaluation.py` imports functionality from an `app/utils.py` file, then the following line must be added: ```dockerfile linenums=\"9\" hl_lines=\"7 8\" RUN pip3 install -r requirements.txt # Copy the evaluation and testing scripts COPY evaluation.py ./app/ COPY evaluation_tests.py ./app/ # Copy additional files COPY utils.py ./app/ # Copy Documentation COPY docs/dev.md ./app/docs/dev.md ```","title":"File Structure"},{"location":"advanced/evaluation_functions/specification/#evaluationpy","text":"The entire framework, validation and testing developed around evaluation functions is ultimately used to get to this file, or the evaluation_function function within it, to be more precise.","title":"evaluation.py"},{"location":"advanced/evaluation_functions/specification/#the-evaluation_function","text":"","title":"The evaluation_function"},{"location":"advanced/evaluation_functions/specification/#inputs","text":"All evaluation functions are passed three arguments: response : Data input by the user answer : Data to compare user input to (could be from a DB of answers, or pre-generated by other functions) params : Parameters which affect the comparison process (replacements, tolerances, feedbacks, ...) For evaluation functions that use Sympy or LaTeX for mathematical expressions, it's not always possible for a student to type the correct symbols. Instead we need to use simpler symbols. For example, $\\overline{U_{ij}}$ cannot be written using standard sympy syntax, and therefore has to be substituted for something else, such as \"u\" or \"U\" . Therefore, evaluation functions using mathematical expressions should be able to handle multiple symbols to represent the same variable. To achieve this, every evaluation function is passed a symbols entry in params , to allow functions to convert a student's response: { \"response\": \"user input\", \"answer\": \"model response to compare against\", \"params\": { \"symbols\": {...}, ... # params set by the teacher } } symbols is a dictionary, where each key represents the main Sympy symbol (known as the code ), and has two entries: latex : the string used for rendering the symbol in LaTeX aliases : a list of alternative Sympy symbols that can be used by the student to represent the code . For the example above with $\\overline{U_{ij}}$, symbols would have the form: { ... \"params\": { \"symbols\": { \"u\": { \"latex\": \"\\\\overline{U_{ij}}\", \"aliases\": [\"U\"] } } } } Note that in JSON, special characters need to be escaped, so the latex symbol above will have a double-backslash instead. Currently, the backend only supports one LaTeX symbol for multiple Sympy symbols. In future, this will be a many-to-many relationship.","title":"Inputs"},{"location":"advanced/evaluation_functions/specification/#context","text":"When a student submits a response to a response area the number of previously submitted responses submitted to the same response area byt the same student will be sent to the evaluation function. The following format is used: { \"submission_context\": { \"submissions_per_student_per_response_area\": # non-negative integer that represent the nubmer of previously processed responses } }","title":"Context"},{"location":"advanced/evaluation_functions/specification/#outputs","text":"The function should output a single JSON-encodable dictionary. Although a large amount of freedom is given to what this dict contains, when utilising the function alongside the lambdafeedback web app, a few values are expected/able to be consumed: is_correct: <bool> : Boolean parameter indicate whether the comparison between response and answer was deemed correct under the parameters. This field is then used by the web app to provide the most simple feedback to the user (green/red). !!! info More standardised function outputs that the frontend can consume are to come","title":"Outputs"},{"location":"advanced/evaluation_functions/specification/#error-handling","text":"Error reporting should follow a specific approach for all evaluation functions. If the evaluation_function you've written doesn't throw any errors, then it's output is returned under the result field - and assumed to have worked properly . This means that if you catch an error in your code manually, and simply return it - the frontend will assume everything went fine. Instead, errors can be handled in two ways: Letting evaluation_function fail : On the request handler in the Base Layer , the call to evaluation_function is wrapped in a try/except which catches any exception. This causes the evaluation to stop completely, returning a standard message, and a repr of the exception thrown in the error.detail field. Custom errors : If you want to report more detailed errors from your function, use the EvaluationException class provided in the evaluation-function-utils package. These are caught before all other standard exceptions, and are dealt with in a different way. These provide a way for your function to throw errors and stop executing safely, while supplying more accurate feedback to the front-end. !!! Example It is discouraged to do the following in the evaluation code: python if something.bad.happened(): return { \"error\": { \"message\": \"Some important message\", \"other\": \"details\", } } As this causes the actual function output (by the AWS lambda function) to be: ```json { \"command\": \"eval\", \"result\": { \"error\": { \"message\": \"Some important message\", \"other\": \"details\" } } } ``` Instead, use custom exceptions from the [evaluation-function-utils](module.md#errors) package. ```python if something.bad.happened(): raise EvaluationException(message=\"Some important message\", other='details') ``` As the actual function output will look like: ```json { \"command\": \"eval\", \"error\": { \"message\": \"Some important message\", \"other\": \"details\" } } ``` This immediately indicates to the frontend client that something has gone wrong, allowing for proper feedback to be displayed.","title":"Error Handling"},{"location":"advanced/evaluation_functions/specification/#evaluation_testspy","text":"This file is intended to contain unit tests for the evaluation_function . Python's built-in unittest framework is used. These tests are run by Github Actions whenever changes are pushed to the main branch, and the evaluation function is not deployed unless all the tests pass. !!! Example A minimal example of a test: import unittest from .evaluation import evaluation_function # Tests are functions beginning with \"test_\" in # a class that inherits from unittest.TestCase class TestEvaluationFunction(unittest.TestCase): def test_trivial(self): result = evaluation_function(\"a + b\", \"a + b\", {}) self.assertTrue(result[\"is_correct\"]) Tests can be run locally using $ python -m unittest app.evaluation_tests","title":"evaluation_tests.py"},{"location":"advanced/evaluation_functions/specification/#autotests","text":"For writing simple tests, it may be easier to write the tests in a config file and have them run on the evaluation function automatically. This can be achieved using the autotests library, which can easily be integrated into an existing project by adding a decorator to the test class. See the autotests README for more information. Another benefit of this approach is that the tool that collects evaluation function documentation ( EvalDocsLoader ) can read this file and auto-generate examples of correct and incorrect responses. This can help new users understand the capabilities of your evaluation function. For an example of how this looks, see the user docs for compareBoolean .","title":"Autotests"},{"location":"advanced/evaluation_functions/specification/#documentation","text":"Evaluation function documentation is stored in two files, which contain documentation for developers and users respectively. These files are fetched by EvalDocsLoader , which integrates them into this documentation site. In order for EvalDocsLoader to find your docs, your evaluation function must: be deployed to the production site; belong to the lambda-feedback organisation on Github; have a topic called evaluation-function . Once these requirements are met, the docs you write should appear on the documentation site.","title":"Documentation"},{"location":"advanced/evaluation_functions/specification/#docsdevmd","text":"This should contain documentation that would be useful for new developers working on your function.","title":"docs/dev.md"},{"location":"advanced/evaluation_functions/specification/#docsusermd","text":"This should contain information for non-technical users, such as an overview of capabilities, examples, and a description of parameters.","title":"docs/user.md"},{"location":"advanced/response_areas/overview/","text":"Overview of response areas List of response areas The list of response areas is maintained in the Teacher section here . In the Developer area (here), the behaviour of the response areas is documented. Data types when submitting empty responses (default behaviour) If a user submits a response without inputing a value, the response areas convert the responses as follows before passing them to the evaluation functions: Input Value Type Default Value Comment number undefined [Behaviour needs updating] string undefined [Behaviour needs updating] MATRIX \" \" empty string in all cells TABLE \" \" empty string in all cells MULTIPLE CHOICE False all choices set to false","title":"Overview"},{"location":"advanced/response_areas/overview/#overview-of-response-areas","text":"","title":"Overview of response areas"},{"location":"advanced/response_areas/overview/#list-of-response-areas","text":"The list of response areas is maintained in the Teacher section here . In the Developer area (here), the behaviour of the response areas is documented.","title":"List of response areas"},{"location":"advanced/response_areas/overview/#data-types-when-submitting-empty-responses-default-behaviour","text":"If a user submits a response without inputing a value, the response areas convert the responses as follows before passing them to the evaluation functions: Input Value Type Default Value Comment number undefined [Behaviour needs updating] string undefined [Behaviour needs updating] MATRIX \" \" empty string in all cells TABLE \" \" empty string in all cells MULTIPLE CHOICE False all choices set to false","title":"Data types when submitting empty responses (default behaviour)"},{"location":"releases/detailed_releases/","text":"Release 2025/07/08 b504-canvas-pen-to-be-small-by-default - Changed the pen to have options s,m,l and made the option s the default one. b611-expression-ra-updates - Improved the expression response area preview. b727-improve-the-graph-library-dynamic-scale - Improved the dynamic scale of the graph library. b739-audio-recorder - Improved the Lexdown to allow to record audios directly. b757-chat-errors-response-time - Improved the error handling of the chat-function. b745-backup-stopped-in-prod - Improved the db backup. Release 2025/07/03 b696-personal-tutor-students-filters-teacher \u2013 Added a new advanced user filter to admin pages (listing admins and teachers) and to teacher pages (listing students). b713-teacher-students-page-add-filter-to-see-closed-modules \u2013 Filtered module instances to display only current ones by default on the Modules page in TEACHER mode, and added an \"Include closed module instances\" switch. b720-allow-teachers-to-be-linked-to-global-tags-as-students \u2013 Teachers and admins can now be linked to global tags not only as teachers but also as students. b735-students-import-change-to-optional-columns \u2013 When importing students, the teacher email field is now optional, and tag name is mandatory. The teacher name was removed entirely. b742-allow-to-a-module-teacher-or-tutor-access-to-the-the-content-tab-unrestricted \u2013 Removed the \"Modify content\" restriction from the Content tab in TEACHER mode. Release 2025/06/18 b720-allow-teachers-to-be-linked-to-global-tags-as-students \u2013 Display both global tags (student and teacher) for admin and teacher users. Use only student global tags for student users. b723-set-edit-icon-buttons \u2013 Display the set visibility icons as buttons . Release 2025/06/12 b706-default-end-date-on-module-instances - Made the module instance end date a required field. b719-access-denied-redirect - Improved module instance permission checks to account for both teacher and tutor roles. b726-synchronise-stats-db-queries - Synchronized the start and end dates used in module, student, and student-module access statistics. Now includes all students, regardless of their user roles. Release 2025/06/11 b710-navigate-to-explore-student-from-students-module-in-teacher-view \u2013 Enabled navigation to the student explore page from the teacher's students page. b712-alignment-on-student-home-page \u2013 UI alignment adjustments on the student home page. b715-admin-teachers-display-which-modules-the-teacher-is-assigned-to \u2013 Added a new admin page showing all modules to which a teacher is assigned, either as a teacher or tutor. b718-feed-displays-different-content-when-scrolling-through-modules \u2013 Fixed feed pagination on the teacher home page. b724-personal-tutor-imports-qa-requests \u2013 Improved student import process. Release 2025/06/05 b588-student-current-active-session-timings - Improved accuracy of question statistics graphs. Release 2025/06/04 b714-teacher-students-page-and-panel-ui-adjustments - UI alignment of the Students and Modules tables on the Teachers home page. Release 2025/06/02 b668-lexdown-updates - A set of improvements to the lexical editor implementation. b705-personal-tutor-imports - Introduction of student import, including personal tutor and global tag assignment. /687-admin-teachers-add-global-tags - Added global tags to the admin teachers page. b711-overlapping-elements - Fixed a styling issue in the guidance widget. b716-lexdown-styling-tweaks - A set of improvements to the styling of the lexical editor. b717-lexdown-raw-markdown-improvements - Improvements to raw markdown handling. Release 2025/05/16 b703-personal-tutor-tweaks - A set of improvements to the personal tutor functionality. Release 2025/05/07 b684-access-modules-as-personal-tutor \u2013 Added links to the modules listed in the Students panel on the teacher landing page, allowing personal tutors to access the modules. b686-special-teacher-role-for-personal-tutor \u2013 Introduced a special teacher role, \"personal tutor\", to configure access permissions for personal tutors. b702-filter-by-global-tag-admin \u2013 Created a new filter component to filter users by email and/or cohort. Currently added only to the admin students page for testing. b707-paging-on-admin-modules-page-does-not-work \u2013 Fixed a bug that caused pagination to not work correctly in several tables. Release 2025/04/28 b683-personal-tutor-introduction - The teacher home page now includes a Students panel for personal tutors to view their tutor group's students and their their progress. b689-allow-teacher-to-see-user-role-permissions - Teachers can now view the permissions assigned to each teacher role. b691-admin-dashboard-unique-user-logs - Improved metric on the admin dashboard to count unique users. Release 2025/04/25 b674-breadcrumbs-tweaks - Updated breadcrumbs to maintain consistency across the application. b682-teacher-role-type - Admins can now view the teacher role type, and they can change the description for the \"owner\" role. b688-allow-multiple-teachers-per-global-tag - Global tags can now have more than one teacher assigned. b695-display-an-error-if-a-content-cannot-be-displayed - Teachers to see error if a content could not be parsed (by the Lexdown parser). Release 2025/04/14 b616-teacher-sets-list-redesign - New look of the student list in the teacher view. Release 2025/04/10 b699-pdf-generator-inline-images - Fixed an error that occurred when a question contained no images. This is a temporary fix, which causes non-captioned images to be left-aligned. Release 2025/04/04 b599-teacher-set-timings-statistics - set timing statistics introduced b647-fix-tab-numbers - correct number of activities and errors on the tabs b664-milkup-vertical-spacing - ui improvements b/681-teacher-landing-page teacher landing page introduced Release 2025/04/02 b690-lexdown-legacy-content - updated Lexdown to ensure all legacy content is correctly displayed b676-user-permissions-tweaks-and-bugs - added access restrictions to the question Stats tab, specifically limiting access to Explore and Configure functionality Release 2025/03/27 b647-fix-tab-numbers - corrected tab to display the correct number of activities b561-comments-buttons - simplified button arrangement for posting comments b680-lexdown-insert-image-triggers-submit-event - updated Lexical text editor implementation to prevent incorrect triggering of submit events b650-reactions-scroll-under-tabs-in-teacher-edit-mode - improved UI so that reaction and flag icons scroll under the top panel instead of over it b599-teacher-set-timings-statistics - added a graph to show statistics on how students access and work on sets Release 2025/03/24 b531-teacher-modules-page-table-filtering-and-sorting - improved sorting of the module list in the teacher view b642-update-manually-hidden-in-sets-page-immediately-after-updating-in-settings - fixed the issue with the \"manually hidden\" switch not updating immediately b649-chatbot-message-reactions - introduced reactions and flagging features to allow students to comment on chatbot responses b657-breadcrumbs-should-show-module-name - added module name to the breadcrumbs b671-admin-chat-flags-page - added a new admin page to view student flags on chatbot responses b660-global-tag-attributes - added teacher email address as an attribute to the global tag to link the global tag with the corresponding teacher Release 2025/03/14 b655-small-chat-improvements - Minor chat enhancements, primarily focused on providing suggestions. b663-milkup-editor-improvements-ii - Text editor tweaks. b659-style-of-chats-to-match-the-lexical-text-editor - Updated chat styling. Release 2025/03/11 b658-milkup-editor-improvements-i - Text editor upgrades, including handling tables, centering images in PDFs, handling modals, and improving step-by-step display in worked solutions and tutorials. Release 2025/03/05 b652-introducing-milkup-editor - Implemented a new Milkup editor (a Lexical-based editor with extensions developed by a student group) to replace the existing Milkdown editor. b627-add-a-switch-for-text-editors - Introduced switch to activate either Mildown editor or Milkup editor. Release 2025/02/25 b373-show-number-of-unresolved-activities-on-tab-header - numbers added to tabs in TEACHER mode. b645-fix-question-version-duplicate-statistics - Fixed statistics to avoid duplicate counting. b634-teacher-modules-progress-bar-tooltip-fix - Removed module IDs from the progress bar tooltip. b601-stats-switch-to-edit - New switch in TEACHER mode from response area stats to edit. b635-chat-improvements-more-question-info - Additional question data provided to chatbots. b630-stats-not-refreshed-after-enrolling-or-deleting-a-student - stats refreshed immediatley when a student is added/removed to/from the module. Release 2025/02/19 631-chat-welcome-message-for-new-conversations - Added a welcome message for students using the chatbot feature for the first time. Release 2025/02/13 b574-teacher-roles - Introduced teacher roles to manage permissions and access levels. b583-student-view-should-be-the-same-for-teacher-and-admin - Admin users now have the same view in student mode as teachers. b624-teacher-modules-stats-performances - Improved performance when retrieving data for statistics and graphs in teacher modules. b637-chat-functions-upsert-service - Standardised chatbot function deployment to use the same mechanism as evaluation functions. Release 2025/02/07 b600-teacher-set-ra-statistics - Set statistics for teachers b555-firefox-expression-writing-and-scanning-misaligned - Upgraded canvas library to make sure canvas is working with Firefox b568-header-no-drop-down-if-only-one-instance - The module instance to be displayed as a text (instead of dropdown) in the header if there is only one module instance Release 2025/02/05 b559-instances-in-order - corrected order of module instances in the header for both, teacher and student view, to be in descending chronological order b598-query-for-admin-dashboard-evaluation-functions-needs-optimisation - optiised query for evaluation function statistics in admin dashboard b604-teacher-modules-stats - Show set's activity and progress statistics on teacher's modules list page b607-duplicate-notifications - preventing email notifications to be sent twice Release 2025/01/29 b602-teacher-sets-overview-stats - Show set's activity and progress statistics on teacher's module overview page b603-teacher-sets-list-stats - Show set's activity and progress statistics on teacher's module content page b615-adjust-workspace-size-on-open - Ensure workspace width always stays in given boundaries b589-teacher-set-statistics-improvements - various improvements to the question statistics chart Release 2025/01/29 b591-workspace-split-panes-improvements - Reworked the workspace split panes Release 2025/01/23 b543-lost-canvas-snapshot - improve robustness of canvas saving b522-latex-edit-box-over-displayed-latex - milkdown UI fixes Release 2025/01/21 b65-enhanced-stats - chart added in the question STATS tab b590-chat-canvas-documentation - chatbot documentation added b598-query-for-admin-dashboard-evaluation-functions-needs-optimisation - part 1 - evaluation function statistics disabled. Query will be optimised. Release 2025/01/15 b524-modular-chatbot-workspace - new chatbot functionality b540-chatbot-switches - chatbot toggles b548-chat-mcqs-information-conversion - parse MCQ respones into a user-readable format for chatbots b552-pulumi-chat-infra-dev-staging-prod - infrastructure for chatbots b578-inconsistent-lambda-function-number-of-errors - resolved inconsistencies in eval function error statistics Release 2025/01/10 b584-PDF-tables - ensure tables compile in PDFs Release 2025/01/09 b75-add-labels-to-users-to-allow-filtering-in-analytics-examples-of-useful-labels-guest-msc-group2-personaltutor-etc-user-type - added 'none' option to student filter Release 2025/01/08 b75-add-labels-to-users-to-allow-filtering-in-analytics-examples-of-useful-labels-guest-msc-group2-personaltutor-etc-user-type - student admin categories and student module tags b562-single-multiple-choice-toggle-not-clear - tidied up multiple choice toggle in the response area configuration panel Release 2024/12/12 b563-misc-frontend-changes - client-side setup improvements Release 2024/12/06 b556-Solutions-PDF---Lambda-step-error - PDF generator in backend - fix inline LaTeX (only in structured tutorial/final answer/worked solutions) Release 2024/12/09 b440-notifications-in-ui - add notifications feed for teachers Release 2024/12/06 b556-Solutions-PDF---Lambda-step-error - fix to PDF generator Lambda to handle steps (e.g. in worked solutions) Release 2024/12/02 b533-teacher-header-eager-auth - Prevent header/wrapper requests to module without a user fix-week-bounds - Fix weekly recap bounds including Sunday Release 2024/11/29 b460-ui-tweaks-iii - additional tweaks to the user interface b541-module-cloning-should-copy-over-support-material-settings - module cloning carries over settings for visibility of structured tutorials, final answers, and worked solutions. Release 2024/11/25 b533-firebase-auth-idtoken-is-required - no change to UX. Fixed issue \"Error: idToken is required\" caused by a premature query before the token was available b537-a-gap-between-title-and-list-of-modules - fix: remove unintended gap between the page title and content when the canvas feature was opened Release 2024/11/23 b544-eval-function-schema-403 - evaluation functions base layer: schema included to avoid 403 errors when retrieving Release 2024/11/20 b526-studentgetmodules-query-is-slow - optimized data retrieval, sorting, and filtering for the student modules page Release 2024/11/15 b463-save-button-for-all-response-types - save button to save work before submission. Configurable per response type at ADMIN level, and per response area at TEACHER. b468-email-updates-settings - introduced an admin feature allowing changes to the recap schedule setting for each teacher b503-the-list-of-errors-and-flags-in-teacher-view-to-contain-info-about-the-part - enhanced the teacher view by including details about which part each flag and error was created against b527-numericunits-displays-answers-incorrectly-in-the-configure-panel - resolved an issue with numeric units that previously displayed incorrectly when spaces were present b528-upgrade-next-from-1423-to-1424 - updated Next.js library b529-update-branches-info-in-readmemd - updated the README.md to provide developers with the latest information about the ticket board and testing processes Release 2024/11/13 b506-add-authentication-with-google - replaced MSAL (Microsoft Authentication Library) with Firebase Authentication to allow sign-in using both Microsoft and Google accounts Release 2024/10/31 b465-do-not-remove-whitespace-from-input-symbols - fix: remove spaces from input symbols only at the beginning and end, preserving spaces in the middle b477-set-json-generation-returns-403-if-a-media-is-not-accessible - improvement: PDF generation now returns a clearer error message when media fails to download b507-module-options-edit-does-not-work-correctly - fix: refresh module options in the teacher view after they are updated b511-publish-whole-set-questions-missing-from-list - fix: ensure the list of unchanged questions in information messages displays all relevant questions b512-add-eslint-rules-for-imports - improvement: adjusted import order in code for better readability and logical structure b513-open-link-choices-for-tab-columns-with-links - enhancement: added \u201copen link\u201d options to table columns containing hyperlinks, improving navigation across tables b514-pdf-generation-pandoc-exited-with-code-43-fontconfig-error-no-writable-cache-directories - adjustment: modified PDF generation to redirect Fontconfig logs to writable directories within the Lambda function Release 2024/10/28 473-middle-click-cmdclick-on-links-in-mui-tables - added \u201copen link\u201d options to table columns with hyperlinks 488-links-on-module-home-page - enhanced cards on the teacher module home page to allow clicks that navigate to relevant tabs 499-switching-to-canvas-resets-to-part-a - prevented reset to part A when opening or closing the canvas Release 2024/10/23 b498-feedback-does-not-handle-double-dollars - feedback string display offers basic support for double-dollars. (REVERTED) b505-enable-weekly-recap-by-default-for-new-users - email notifications tweaks for new users Release 2024/10/18 b493-one-student-progress-csv-format-change - adjustment to the CSV format of an individual student\u2019s progress b495-augment-feedback-colour - updated augment feedback functionality b481-cannot-switch-page-in-the-error-panel-in-the-admin-dashboard - fix: allowing multiple tables on one page with paging functionality Release 2024/10/17 b497-milkdown-response-area - milkdown response area type added Release 2024/10/16 b482-question-scrolls-up-when-clicking-check-or-mark-as-done-on-mobile-and-tablet - fix: resolved issue where marking student submissions as done caused the page to scroll to the top on mobiles and tablets. b483-feedback-area-does-not-support-latex-rendering-again - adjustment to the feedback to support latex b490-dashboard-high-no-of-students - improved the dashboard\u2019s calculation of the current number of students. b494-augment-feedback-if-the-augment-is-true-and-the-returned-feedback-is-empty - updated the augment feedback functionality to handle cases where the augment flag is true, but the returned feedback is empty. b496-feedback-to-handle-html-and-latex - adjustment to the feedback to support html alongside latex Release 2024/10/15 b461-bulk-rollover-follow-up-ii - updates to bulk rollover feature b479-scan-in-mobile-tablet-doesnt-activate-camera-or-file-selector - fix: camera did not activate in mobile or tablet when using scan option Release 2024/10/09 b486-cloning-parts-in-wrong-order - corrected the part order in cloned module instances and updated code to ensure future clones maintain correct part order. Release 2024/10/07 b220-download-one-student-progress - download an individual student\u2019s progress in CSV format. b471-admin-teacher-enrolment-should-accept-comma-separated-lists - admin enrolment of teachers accepts comma-separated lists, allowing multiple teachers to be added at once. b478-question-not-visible-in-tablet-mode-when-canvas-closed - fix: question was not visible in tablet mode when the canvas was closed. b480-draw-mode-proceed-button-almost-invisible-update-to-match-the-design-on-scan-mode - EXPRESSION response area: added the \u201cProceed\u201d button in draw mode to match the design on scan mode. Release 2024/10/04 b218-teacher-view-modules-students-explore-do-not-limit-next - teacher view of student progress: \u201cNext\u201d button progresses to all students, not just those listed on the current table page. b448-question-jumps-to-top-on-mark-as-done - UI fix: resolved issue where marking student submissions as done caused the page to jump to the top. b466-limit-number-of-student-submissions - eval functions receive the number of student submissions per response area, and can optionally limit submissions e.g. to external services. b467-correct-separatefeedbacks-to-separatefeedback - schema correction: separatefeedbacks to separatefeedback (relates to the 'Augment feedback based on correctness' functionality.) b475-set-all-augment-booleans-to-false-in-a-specific-module - Set all \"Augment feedback based on correctness\" booleans to false for a selected math module.","title":"Detailed Releases"},{"location":"releases/detailed_releases/#release-20250708","text":"b504-canvas-pen-to-be-small-by-default - Changed the pen to have options s,m,l and made the option s the default one. b611-expression-ra-updates - Improved the expression response area preview. b727-improve-the-graph-library-dynamic-scale - Improved the dynamic scale of the graph library. b739-audio-recorder - Improved the Lexdown to allow to record audios directly. b757-chat-errors-response-time - Improved the error handling of the chat-function. b745-backup-stopped-in-prod - Improved the db backup.","title":"Release 2025/07/08"},{"location":"releases/detailed_releases/#release-20250703","text":"b696-personal-tutor-students-filters-teacher \u2013 Added a new advanced user filter to admin pages (listing admins and teachers) and to teacher pages (listing students). b713-teacher-students-page-add-filter-to-see-closed-modules \u2013 Filtered module instances to display only current ones by default on the Modules page in TEACHER mode, and added an \"Include closed module instances\" switch. b720-allow-teachers-to-be-linked-to-global-tags-as-students \u2013 Teachers and admins can now be linked to global tags not only as teachers but also as students. b735-students-import-change-to-optional-columns \u2013 When importing students, the teacher email field is now optional, and tag name is mandatory. The teacher name was removed entirely. b742-allow-to-a-module-teacher-or-tutor-access-to-the-the-content-tab-unrestricted \u2013 Removed the \"Modify content\" restriction from the Content tab in TEACHER mode.","title":"Release 2025/07/03"},{"location":"releases/detailed_releases/#release-20250618","text":"b720-allow-teachers-to-be-linked-to-global-tags-as-students \u2013 Display both global tags (student and teacher) for admin and teacher users. Use only student global tags for student users. b723-set-edit-icon-buttons \u2013 Display the set visibility icons as buttons .","title":"Release 2025/06/18"},{"location":"releases/detailed_releases/#release-20250612","text":"b706-default-end-date-on-module-instances - Made the module instance end date a required field. b719-access-denied-redirect - Improved module instance permission checks to account for both teacher and tutor roles. b726-synchronise-stats-db-queries - Synchronized the start and end dates used in module, student, and student-module access statistics. Now includes all students, regardless of their user roles.","title":"Release 2025/06/12"},{"location":"releases/detailed_releases/#release-20250611","text":"b710-navigate-to-explore-student-from-students-module-in-teacher-view \u2013 Enabled navigation to the student explore page from the teacher's students page. b712-alignment-on-student-home-page \u2013 UI alignment adjustments on the student home page. b715-admin-teachers-display-which-modules-the-teacher-is-assigned-to \u2013 Added a new admin page showing all modules to which a teacher is assigned, either as a teacher or tutor. b718-feed-displays-different-content-when-scrolling-through-modules \u2013 Fixed feed pagination on the teacher home page. b724-personal-tutor-imports-qa-requests \u2013 Improved student import process.","title":"Release 2025/06/11"},{"location":"releases/detailed_releases/#release-20250605","text":"b588-student-current-active-session-timings - Improved accuracy of question statistics graphs.","title":"Release 2025/06/05"},{"location":"releases/detailed_releases/#release-20250604","text":"b714-teacher-students-page-and-panel-ui-adjustments - UI alignment of the Students and Modules tables on the Teachers home page.","title":"Release 2025/06/04"},{"location":"releases/detailed_releases/#release-20250602","text":"b668-lexdown-updates - A set of improvements to the lexical editor implementation. b705-personal-tutor-imports - Introduction of student import, including personal tutor and global tag assignment. /687-admin-teachers-add-global-tags - Added global tags to the admin teachers page. b711-overlapping-elements - Fixed a styling issue in the guidance widget. b716-lexdown-styling-tweaks - A set of improvements to the styling of the lexical editor. b717-lexdown-raw-markdown-improvements - Improvements to raw markdown handling.","title":"Release 2025/06/02"},{"location":"releases/detailed_releases/#release-20250516","text":"b703-personal-tutor-tweaks - A set of improvements to the personal tutor functionality.","title":"Release 2025/05/16"},{"location":"releases/detailed_releases/#release-20250507","text":"b684-access-modules-as-personal-tutor \u2013 Added links to the modules listed in the Students panel on the teacher landing page, allowing personal tutors to access the modules. b686-special-teacher-role-for-personal-tutor \u2013 Introduced a special teacher role, \"personal tutor\", to configure access permissions for personal tutors. b702-filter-by-global-tag-admin \u2013 Created a new filter component to filter users by email and/or cohort. Currently added only to the admin students page for testing. b707-paging-on-admin-modules-page-does-not-work \u2013 Fixed a bug that caused pagination to not work correctly in several tables.","title":"Release 2025/05/07"},{"location":"releases/detailed_releases/#release-20250428","text":"b683-personal-tutor-introduction - The teacher home page now includes a Students panel for personal tutors to view their tutor group's students and their their progress. b689-allow-teacher-to-see-user-role-permissions - Teachers can now view the permissions assigned to each teacher role. b691-admin-dashboard-unique-user-logs - Improved metric on the admin dashboard to count unique users.","title":"Release 2025/04/28"},{"location":"releases/detailed_releases/#release-20250425","text":"b674-breadcrumbs-tweaks - Updated breadcrumbs to maintain consistency across the application. b682-teacher-role-type - Admins can now view the teacher role type, and they can change the description for the \"owner\" role. b688-allow-multiple-teachers-per-global-tag - Global tags can now have more than one teacher assigned. b695-display-an-error-if-a-content-cannot-be-displayed - Teachers to see error if a content could not be parsed (by the Lexdown parser).","title":"Release 2025/04/25"},{"location":"releases/detailed_releases/#release-20250414","text":"b616-teacher-sets-list-redesign - New look of the student list in the teacher view.","title":"Release 2025/04/14"},{"location":"releases/detailed_releases/#release-20250410","text":"b699-pdf-generator-inline-images - Fixed an error that occurred when a question contained no images. This is a temporary fix, which causes non-captioned images to be left-aligned.","title":"Release 2025/04/10"},{"location":"releases/detailed_releases/#release-20250404","text":"b599-teacher-set-timings-statistics - set timing statistics introduced b647-fix-tab-numbers - correct number of activities and errors on the tabs b664-milkup-vertical-spacing - ui improvements b/681-teacher-landing-page teacher landing page introduced","title":"Release 2025/04/04"},{"location":"releases/detailed_releases/#release-20250402","text":"b690-lexdown-legacy-content - updated Lexdown to ensure all legacy content is correctly displayed b676-user-permissions-tweaks-and-bugs - added access restrictions to the question Stats tab, specifically limiting access to Explore and Configure functionality","title":"Release 2025/04/02"},{"location":"releases/detailed_releases/#release-20250327","text":"b647-fix-tab-numbers - corrected tab to display the correct number of activities b561-comments-buttons - simplified button arrangement for posting comments b680-lexdown-insert-image-triggers-submit-event - updated Lexical text editor implementation to prevent incorrect triggering of submit events b650-reactions-scroll-under-tabs-in-teacher-edit-mode - improved UI so that reaction and flag icons scroll under the top panel instead of over it b599-teacher-set-timings-statistics - added a graph to show statistics on how students access and work on sets","title":"Release 2025/03/27"},{"location":"releases/detailed_releases/#release-20250324","text":"b531-teacher-modules-page-table-filtering-and-sorting - improved sorting of the module list in the teacher view b642-update-manually-hidden-in-sets-page-immediately-after-updating-in-settings - fixed the issue with the \"manually hidden\" switch not updating immediately b649-chatbot-message-reactions - introduced reactions and flagging features to allow students to comment on chatbot responses b657-breadcrumbs-should-show-module-name - added module name to the breadcrumbs b671-admin-chat-flags-page - added a new admin page to view student flags on chatbot responses b660-global-tag-attributes - added teacher email address as an attribute to the global tag to link the global tag with the corresponding teacher","title":"Release 2025/03/24"},{"location":"releases/detailed_releases/#release-20250314","text":"b655-small-chat-improvements - Minor chat enhancements, primarily focused on providing suggestions. b663-milkup-editor-improvements-ii - Text editor tweaks. b659-style-of-chats-to-match-the-lexical-text-editor - Updated chat styling.","title":"Release 2025/03/14"},{"location":"releases/detailed_releases/#release-20250311","text":"b658-milkup-editor-improvements-i - Text editor upgrades, including handling tables, centering images in PDFs, handling modals, and improving step-by-step display in worked solutions and tutorials.","title":"Release 2025/03/11"},{"location":"releases/detailed_releases/#release-20250305","text":"b652-introducing-milkup-editor - Implemented a new Milkup editor (a Lexical-based editor with extensions developed by a student group) to replace the existing Milkdown editor. b627-add-a-switch-for-text-editors - Introduced switch to activate either Mildown editor or Milkup editor.","title":"Release 2025/03/05"},{"location":"releases/detailed_releases/#release-20250225","text":"b373-show-number-of-unresolved-activities-on-tab-header - numbers added to tabs in TEACHER mode. b645-fix-question-version-duplicate-statistics - Fixed statistics to avoid duplicate counting. b634-teacher-modules-progress-bar-tooltip-fix - Removed module IDs from the progress bar tooltip. b601-stats-switch-to-edit - New switch in TEACHER mode from response area stats to edit. b635-chat-improvements-more-question-info - Additional question data provided to chatbots. b630-stats-not-refreshed-after-enrolling-or-deleting-a-student - stats refreshed immediatley when a student is added/removed to/from the module.","title":"Release 2025/02/25"},{"location":"releases/detailed_releases/#release-20250219","text":"631-chat-welcome-message-for-new-conversations - Added a welcome message for students using the chatbot feature for the first time.","title":"Release 2025/02/19"},{"location":"releases/detailed_releases/#release-20250213","text":"b574-teacher-roles - Introduced teacher roles to manage permissions and access levels. b583-student-view-should-be-the-same-for-teacher-and-admin - Admin users now have the same view in student mode as teachers. b624-teacher-modules-stats-performances - Improved performance when retrieving data for statistics and graphs in teacher modules. b637-chat-functions-upsert-service - Standardised chatbot function deployment to use the same mechanism as evaluation functions.","title":"Release 2025/02/13"},{"location":"releases/detailed_releases/#release-20250207","text":"b600-teacher-set-ra-statistics - Set statistics for teachers b555-firefox-expression-writing-and-scanning-misaligned - Upgraded canvas library to make sure canvas is working with Firefox b568-header-no-drop-down-if-only-one-instance - The module instance to be displayed as a text (instead of dropdown) in the header if there is only one module instance","title":"Release 2025/02/07"},{"location":"releases/detailed_releases/#release-20250205","text":"b559-instances-in-order - corrected order of module instances in the header for both, teacher and student view, to be in descending chronological order b598-query-for-admin-dashboard-evaluation-functions-needs-optimisation - optiised query for evaluation function statistics in admin dashboard b604-teacher-modules-stats - Show set's activity and progress statistics on teacher's modules list page b607-duplicate-notifications - preventing email notifications to be sent twice","title":"Release 2025/02/05"},{"location":"releases/detailed_releases/#release-20250129","text":"b602-teacher-sets-overview-stats - Show set's activity and progress statistics on teacher's module overview page b603-teacher-sets-list-stats - Show set's activity and progress statistics on teacher's module content page b615-adjust-workspace-size-on-open - Ensure workspace width always stays in given boundaries b589-teacher-set-statistics-improvements - various improvements to the question statistics chart","title":"Release 2025/01/29"},{"location":"releases/detailed_releases/#release-20250129_1","text":"b591-workspace-split-panes-improvements - Reworked the workspace split panes","title":"Release 2025/01/29"},{"location":"releases/detailed_releases/#release-20250123","text":"b543-lost-canvas-snapshot - improve robustness of canvas saving b522-latex-edit-box-over-displayed-latex - milkdown UI fixes","title":"Release 2025/01/23"},{"location":"releases/detailed_releases/#release-20250121","text":"b65-enhanced-stats - chart added in the question STATS tab b590-chat-canvas-documentation - chatbot documentation added b598-query-for-admin-dashboard-evaluation-functions-needs-optimisation - part 1 - evaluation function statistics disabled. Query will be optimised.","title":"Release 2025/01/21"},{"location":"releases/detailed_releases/#release-20250115","text":"b524-modular-chatbot-workspace - new chatbot functionality b540-chatbot-switches - chatbot toggles b548-chat-mcqs-information-conversion - parse MCQ respones into a user-readable format for chatbots b552-pulumi-chat-infra-dev-staging-prod - infrastructure for chatbots b578-inconsistent-lambda-function-number-of-errors - resolved inconsistencies in eval function error statistics","title":"Release 2025/01/15"},{"location":"releases/detailed_releases/#release-20250110","text":"b584-PDF-tables - ensure tables compile in PDFs","title":"Release 2025/01/10"},{"location":"releases/detailed_releases/#release-20250109","text":"b75-add-labels-to-users-to-allow-filtering-in-analytics-examples-of-useful-labels-guest-msc-group2-personaltutor-etc-user-type - added 'none' option to student filter","title":"Release 2025/01/09"},{"location":"releases/detailed_releases/#release-20250108","text":"b75-add-labels-to-users-to-allow-filtering-in-analytics-examples-of-useful-labels-guest-msc-group2-personaltutor-etc-user-type - student admin categories and student module tags b562-single-multiple-choice-toggle-not-clear - tidied up multiple choice toggle in the response area configuration panel","title":"Release 2025/01/08"},{"location":"releases/detailed_releases/#release-20241212","text":"b563-misc-frontend-changes - client-side setup improvements","title":"Release 2024/12/12"},{"location":"releases/detailed_releases/#release-20241206","text":"b556-Solutions-PDF---Lambda-step-error - PDF generator in backend - fix inline LaTeX (only in structured tutorial/final answer/worked solutions)","title":"Release 2024/12/06"},{"location":"releases/detailed_releases/#release-20241209","text":"b440-notifications-in-ui - add notifications feed for teachers","title":"Release 2024/12/09"},{"location":"releases/detailed_releases/#release-20241206_1","text":"b556-Solutions-PDF---Lambda-step-error - fix to PDF generator Lambda to handle steps (e.g. in worked solutions)","title":"Release 2024/12/06"},{"location":"releases/detailed_releases/#release-20241202","text":"b533-teacher-header-eager-auth - Prevent header/wrapper requests to module without a user fix-week-bounds - Fix weekly recap bounds including Sunday","title":"Release 2024/12/02"},{"location":"releases/detailed_releases/#release-20241129","text":"b460-ui-tweaks-iii - additional tweaks to the user interface b541-module-cloning-should-copy-over-support-material-settings - module cloning carries over settings for visibility of structured tutorials, final answers, and worked solutions.","title":"Release 2024/11/29"},{"location":"releases/detailed_releases/#release-20241125","text":"b533-firebase-auth-idtoken-is-required - no change to UX. Fixed issue \"Error: idToken is required\" caused by a premature query before the token was available b537-a-gap-between-title-and-list-of-modules - fix: remove unintended gap between the page title and content when the canvas feature was opened","title":"Release 2024/11/25"},{"location":"releases/detailed_releases/#release-20241123","text":"b544-eval-function-schema-403 - evaluation functions base layer: schema included to avoid 403 errors when retrieving","title":"Release 2024/11/23"},{"location":"releases/detailed_releases/#release-20241120","text":"b526-studentgetmodules-query-is-slow - optimized data retrieval, sorting, and filtering for the student modules page","title":"Release 2024/11/20"},{"location":"releases/detailed_releases/#release-20241115","text":"b463-save-button-for-all-response-types - save button to save work before submission. Configurable per response type at ADMIN level, and per response area at TEACHER. b468-email-updates-settings - introduced an admin feature allowing changes to the recap schedule setting for each teacher b503-the-list-of-errors-and-flags-in-teacher-view-to-contain-info-about-the-part - enhanced the teacher view by including details about which part each flag and error was created against b527-numericunits-displays-answers-incorrectly-in-the-configure-panel - resolved an issue with numeric units that previously displayed incorrectly when spaces were present b528-upgrade-next-from-1423-to-1424 - updated Next.js library b529-update-branches-info-in-readmemd - updated the README.md to provide developers with the latest information about the ticket board and testing processes","title":"Release 2024/11/15"},{"location":"releases/detailed_releases/#release-20241113","text":"b506-add-authentication-with-google - replaced MSAL (Microsoft Authentication Library) with Firebase Authentication to allow sign-in using both Microsoft and Google accounts","title":"Release 2024/11/13"},{"location":"releases/detailed_releases/#release-20241031","text":"b465-do-not-remove-whitespace-from-input-symbols - fix: remove spaces from input symbols only at the beginning and end, preserving spaces in the middle b477-set-json-generation-returns-403-if-a-media-is-not-accessible - improvement: PDF generation now returns a clearer error message when media fails to download b507-module-options-edit-does-not-work-correctly - fix: refresh module options in the teacher view after they are updated b511-publish-whole-set-questions-missing-from-list - fix: ensure the list of unchanged questions in information messages displays all relevant questions b512-add-eslint-rules-for-imports - improvement: adjusted import order in code for better readability and logical structure b513-open-link-choices-for-tab-columns-with-links - enhancement: added \u201copen link\u201d options to table columns containing hyperlinks, improving navigation across tables b514-pdf-generation-pandoc-exited-with-code-43-fontconfig-error-no-writable-cache-directories - adjustment: modified PDF generation to redirect Fontconfig logs to writable directories within the Lambda function","title":"Release 2024/10/31"},{"location":"releases/detailed_releases/#release-20241028","text":"473-middle-click-cmdclick-on-links-in-mui-tables - added \u201copen link\u201d options to table columns with hyperlinks 488-links-on-module-home-page - enhanced cards on the teacher module home page to allow clicks that navigate to relevant tabs 499-switching-to-canvas-resets-to-part-a - prevented reset to part A when opening or closing the canvas","title":"Release 2024/10/28"},{"location":"releases/detailed_releases/#release-20241023","text":"b498-feedback-does-not-handle-double-dollars - feedback string display offers basic support for double-dollars. (REVERTED) b505-enable-weekly-recap-by-default-for-new-users - email notifications tweaks for new users","title":"Release 2024/10/23"},{"location":"releases/detailed_releases/#release-20241018","text":"b493-one-student-progress-csv-format-change - adjustment to the CSV format of an individual student\u2019s progress b495-augment-feedback-colour - updated augment feedback functionality b481-cannot-switch-page-in-the-error-panel-in-the-admin-dashboard - fix: allowing multiple tables on one page with paging functionality","title":"Release 2024/10/18"},{"location":"releases/detailed_releases/#release-20241017","text":"b497-milkdown-response-area - milkdown response area type added","title":"Release 2024/10/17"},{"location":"releases/detailed_releases/#release-20241016","text":"b482-question-scrolls-up-when-clicking-check-or-mark-as-done-on-mobile-and-tablet - fix: resolved issue where marking student submissions as done caused the page to scroll to the top on mobiles and tablets. b483-feedback-area-does-not-support-latex-rendering-again - adjustment to the feedback to support latex b490-dashboard-high-no-of-students - improved the dashboard\u2019s calculation of the current number of students. b494-augment-feedback-if-the-augment-is-true-and-the-returned-feedback-is-empty - updated the augment feedback functionality to handle cases where the augment flag is true, but the returned feedback is empty. b496-feedback-to-handle-html-and-latex - adjustment to the feedback to support html alongside latex","title":"Release 2024/10/16"},{"location":"releases/detailed_releases/#release-20241015","text":"b461-bulk-rollover-follow-up-ii - updates to bulk rollover feature b479-scan-in-mobile-tablet-doesnt-activate-camera-or-file-selector - fix: camera did not activate in mobile or tablet when using scan option","title":"Release 2024/10/15"},{"location":"releases/detailed_releases/#release-20241009","text":"b486-cloning-parts-in-wrong-order - corrected the part order in cloned module instances and updated code to ensure future clones maintain correct part order.","title":"Release 2024/10/09"},{"location":"releases/detailed_releases/#release-20241007","text":"b220-download-one-student-progress - download an individual student\u2019s progress in CSV format. b471-admin-teacher-enrolment-should-accept-comma-separated-lists - admin enrolment of teachers accepts comma-separated lists, allowing multiple teachers to be added at once. b478-question-not-visible-in-tablet-mode-when-canvas-closed - fix: question was not visible in tablet mode when the canvas was closed. b480-draw-mode-proceed-button-almost-invisible-update-to-match-the-design-on-scan-mode - EXPRESSION response area: added the \u201cProceed\u201d button in draw mode to match the design on scan mode.","title":"Release 2024/10/07"},{"location":"releases/detailed_releases/#release-20241004","text":"b218-teacher-view-modules-students-explore-do-not-limit-next - teacher view of student progress: \u201cNext\u201d button progresses to all students, not just those listed on the current table page. b448-question-jumps-to-top-on-mark-as-done - UI fix: resolved issue where marking student submissions as done caused the page to jump to the top. b466-limit-number-of-student-submissions - eval functions receive the number of student submissions per response area, and can optionally limit submissions e.g. to external services. b467-correct-separatefeedbacks-to-separatefeedback - schema correction: separatefeedbacks to separatefeedback (relates to the 'Augment feedback based on correctness' functionality.) b475-set-all-augment-booleans-to-false-in-a-specific-module - Set all \"Augment feedback based on correctness\" booleans to false for a selected math module.","title":"Release 2024/10/04"},{"location":"releases/major_releases/","text":"Major releases This page contains summaries; see also detailed releases . 2025 Q2 new features User roles Access control: different Teacher roles have access to combinations of privileges, including content editing, user enrollment, viewing cohort data, and viewing student data. The screenshot below is an example, and more combinations can be created by admins: An example of the roles in action: Personal tutor role: This special role gives a specific teacher access to view data of a limited group of students. Access is by 'Global tags' associating a student to a teacher (across all modules). Teacher home page shows overview stats for personal tutees (see below). Stats can be expanded and explored in more detail. Data is symemtrically available to both students and tutors. Teachers - with relevant privilages - can now enrol other teachers, and change their roles. 2025 Q1 new features Data analytics Enriched data for teachers, including: Completion statistics per response area (in the 'STATS' tab within a question) Completion statistics per question (in the 'STATS' tab within a question) Completion and activity statistics per Set (in the 'CONTENT' tab within a module) Completion and activity statistics per Set (on the 'OVERVIEW' tab within a module) Completion and activity statistics per Module (on the home page) Chat bots The workspace has a 'chat' pane where users chat with a bot that has access to the question and the user's work on the question. 'Chat functions' will operate like evaluation functions --- they can be developed externally and plugged in. New content editor 'Lexdown', a markdown-first version of Meta's lexical . As well as a more robust general component, this upgrade allows users to: Resize images Edit raw markdown Preview latex including when it doesn't compile (with errors in red) Improved table capabilities User tags Tag users within a module ('module tag'), to allow grouping and filtering Tag users across modules ('global tag'), to allow user-orientated analytics (e.g. for pastoral care)","title":"Major releases"},{"location":"releases/major_releases/#major-releases","text":"This page contains summaries; see also detailed releases .","title":"Major releases"},{"location":"releases/major_releases/#2025-q2-new-features","text":"","title":"2025 Q2 new features"},{"location":"releases/major_releases/#user-roles","text":"Access control: different Teacher roles have access to combinations of privileges, including content editing, user enrollment, viewing cohort data, and viewing student data. The screenshot below is an example, and more combinations can be created by admins: An example of the roles in action: Personal tutor role: This special role gives a specific teacher access to view data of a limited group of students. Access is by 'Global tags' associating a student to a teacher (across all modules). Teacher home page shows overview stats for personal tutees (see below). Stats can be expanded and explored in more detail. Data is symemtrically available to both students and tutors. Teachers - with relevant privilages - can now enrol other teachers, and change their roles.","title":"User roles"},{"location":"releases/major_releases/#2025-q1-new-features","text":"","title":"2025 Q1 new features"},{"location":"releases/major_releases/#data-analytics","text":"Enriched data for teachers, including: Completion statistics per response area (in the 'STATS' tab within a question) Completion statistics per question (in the 'STATS' tab within a question) Completion and activity statistics per Set (in the 'CONTENT' tab within a module) Completion and activity statistics per Set (on the 'OVERVIEW' tab within a module) Completion and activity statistics per Module (on the home page)","title":"Data analytics"},{"location":"releases/major_releases/#chat-bots","text":"The workspace has a 'chat' pane where users chat with a bot that has access to the question and the user's work on the question. 'Chat functions' will operate like evaluation functions --- they can be developed externally and plugged in.","title":"Chat bots"},{"location":"releases/major_releases/#new-content-editor","text":"'Lexdown', a markdown-first version of Meta's lexical . As well as a more robust general component, this upgrade allows users to: Resize images Edit raw markdown Preview latex including when it doesn't compile (with errors in red) Improved table capabilities","title":"New content editor"},{"location":"releases/major_releases/#user-tags","text":"Tag users within a module ('module tag'), to allow grouping and filtering Tag users across modules ('global tag'), to allow user-orientated analytics (e.g. for pastoral care)","title":"User tags"},{"location":"releases/relases_2023_24/","text":"Release 2024/09/27 b457-option-to-omit-iscorrect-feedback - added the option for teachers to customise the feedback prefix and colour b459-image-on-the-same-line-as-preceding-text - corrected PDF generation to prevent images from appearing on the same line as the preceding text Release 2024/09/23 b449-improve-mobile-navigation - improve mobile UI b462-final-summer-tweaks - ui improvements and fixes b146-follow-up - email notifications tweaks and fixes Release 2024/09/18 b444-bulk-rollover-follow-up - updates to bulk rollover feature b452-ui-tweaks-ii - additional ui enhacements b453-config-panel-disabled-feedback-tab-is-still-accessible-by-next-and-previous-buttons - fixed an issue where disabled tabs in the response area configuration panel could still be accessed using navigation buttons Release 2024/09/14 b134-ipados-ios-safari-like-flag-problem-help-off-the-page - fixed scrolling of problem sets when using iPadOS or iOS Safari b439-disable-download-when-no-pdf-available - improved behavior of the \u201cDownload set\u201d drop-down button b407-all-questions-published-when-publishing-one - corrected version history page to display accurate data when viewing past question versions b434-ui-redesign-tweaks - additional tweaks to the user interface b442-bring-back-sets-download-options - restored \u201cSet Download\u201d drop-down button that was removed during the UI redesign b447-aws-db-backups-stopped - fixed the database backup issue b451-display-modules-even-if-sets-are-hidden - updated the system so students can view their modules, even if no sets are available b146-email-recap - add weekly email recap Release 2024/09/10 b413-authentication-failures - code cleanup for updated authentication to avoid logging out (see b413 in 2024/08/23 ) b438-enable-canvas-for-all-users - enabled canvas for all users (see b343 in 2024/06/28 ) b441-custom-milkdown-theme-bug - adjusted the new Milkdown theme to improve compatibility with math mode Release 2024/09/04 b441-revert-to-nord-theme - undo milkdown theme switch until math block is fixed Release 2024/09/03 b386-provide-drop-down-list-for-ra-default-lambda-function Release 2024/09/02 b398-upgrade-student-module-list - add new card view to module list student page b430-fix-redesign-bugs - add proper error handling to teacher pages when not a teacher b435-remove-env-from-git - remove .env file from git as it shouldn't be checked into vcs Release 2024/08/28 b383-check-for-existing-module-name - Check if module name already exists when creating new module b383_do_not_query_without_module_id - do not run query from header without module id b393-canvas-stored - Store canvas in database b425-studentmodule-and-studentmodules-api-retrieve-hidden-sets - do not retrieve hidden sets for students b427_display_pdf_errors_after_set_publish - Display PDF error message when publishing whole set b428-bulk-rollover-qa-comments - updates to bulk rollover feature b431-add-sentry - Add Sentry error monitoring b433-not-possible-to-enrol-students - fix to student enrollment b436-fix-instance-swapper - fix instance swapper Release 2024/08/23 - 2 b380-fix-tables - Table paging fix b379-disappearing-r-at-beginning-of-line-milkdown - fix disappearing 'R' at beginning of line milkdown b413-force-renew - authentication update to avoid logging out b429_deleting_cases_and_tests_qa - ensure feedback case order is maintained Release 2024/08/23 b413-grounded - updates to the authentication flow Release 2024/08/22 - 2 b402-create-table-view - table view added to the teacher module view b406-prepare-ui-update - changes in the user interface Release 2024/08/22 b356-delete-all-questions-in-set-not-handled-gracefully - create blank question when all others are deleted b409-module-bulk-rollover - bulk creation of new module instances (for admins) b417-set-part-to-a-when-switching-question - in teacher mode, when switching a question, always display part (a) b419-deleting-case-is-causing-feedbacks-to-shift-incorrectly - display correct remaining cases after deleting one b423-pdf-generation-displays-different-error-first-time - first PDF generation message consistent with follow up messages Release 2024/08/07 b375-correct-tex-and-pdf-for-solutions - PDF generation improvements b412-export-import-wrong-order-of-parts - ensure correct part and response-area order when importing b413-authentication-failures - part 2 - prevent application logouts b416-download-set-as-json-downloads-wrong-set - ensure correct set when exporting JSON Release 2024/08/02 b391-milkdown-fault-if-latex-on-last-line - fixed milkdown bug - if text ends with latex, it rendered raw but now renders properly. b415-guidance-time-suggestion-feature-by-colin - guidance time suggestion (using Machine Learning based on our database of content) Release 2024/07/26 b369-guidance-text-on-enrollment - add a guidance text when adding students or teachers b381-not-possible-to-add-multiple-teachers - allow to add multiple teachers b410-open-doc-links-in-new-tab - open external links in a new tab b413-authentication-failures - fixed problems with application logouts Release 2024/07/24 b378-admin-module-instance-breadcrumbs-incorrect - corrected the application header (for Admin module instance page) Release 2024/07/23 b132 - security update for milkdown b366-non-imperial-users-to-be-able-to-log-in - non-Imperial logins enabled b374-admin-analytics-evaluation-functions - analytics for evaluation function errors b387-import-question-does-not-import-worked-solutions - corrected question export with solutions b388-tutorials-and-solutions-steps-messed-up - corrected sorting of solution branches Release 2024/07/18 b392-essay-code-ras - add two new response area types: code and essay b396-better-feedback-box - improve the feedback box UI and accessibility Release 2024/07/16 b395-vertical-text-align - remove excess margin from top part of question Release 2024/06/28 b258-performance-analyse-db - faster response from DB queries b343-canvas - student canvas in beta mode (hidden by default) b351-teacher-module-page-ui-upgrades - Teacher module home page UI upgrades (tabs added) b357-upgrade-aws-sdk-v2-to-v3 - software library updates b359-generate-tex-file - upload/download whole Sets as LaTeX files Release 2024/06/14 b305-export-whole-set - import/export whole sets b334-upgrade-node-next-nest - library updates Release 2024/05/29 b352-support-to-eval-function-20-get-all-routes-by-getroutes - evaluation function deployment (check existing routes) b353-question-import-filter-out-unicode-characters - remove character (U-2006) on json import b354-double-confirm-on-confirmation-pop-ups - fix confirm button on modals in teacher mode Release 2024/05/24 b97-remove-all-references-to-mongodb - remove code linking to legacy databases b243-add-question-id-to-the-url - add question identifier to the url b285-move-module-instance-drop-down-to-left-to-replace-the-instance-label - more user-friendly module instance selection b304-milkdown-element-in-admin-that-will-display-on-home-page - add an administrator page to configure a home page banner b330-modal-update - question version switch: allow teacher either to save or discard existing draft b349-support-to-eval-function-20-ensure-deployments - evaluation functions: production and non-production versions Release 2024/05/15 b250-expression-ra-scan-mode-copy-and-paste - allow copy and paste and other improvements in the scan mode functionality b314-remove-experimental-from-ra-panel - \"experimental\" from the photo upload and handwritting labels removed b338-create-a-new-set-when-creating-a-module - a default set automatically creating when a new module is created b342-do-not-generate-pdf-when-creating-new-question - prevent PDF generation when a new question is added b345-after-pdf-generation-extraction-cleanup - a technical improvements into the PDF generation Release 2024/04/26 b230-pdf-generation-in-a-separate-lambda-function - PDF generation is faster, more secure, and frees up bandwidth on the main server. b328-improve-expression-ui-in-tests - fix expression response area preview in tests tab b331-work-solutions-empty-content-not-handled-as-no-work-solutions - work solutions and structured tutorials buttons not to be displayed if the content is empty b339-accessible-response-area-feedback - displaying error returned by evaluation functions in a user-friendly format b340-remove-input-type-changed-warning-on-new-ra - do not display warning about response area type change for new response areas Release 2024/04/19 337-individual-tests-always-fail - fix individual reponse area test runs 327-consolidate-response-area-components - improvements for better response area consistency Release 2024/03/21 b332-table-smart-resizing - resize table width based on the screen size Release 2024/03/19 b286-ra-analytics-when-config-is-changed - Fix aggregates in stats b311-expression-area-layout-issues - Improve expression RA layout b325-populate-new-tests-with-the-answer - Populate new tests with the answer b322-enable-live-preview-in-teacher-mode - Attempt to enable live preview in teacher mode b35/b329-simplify-response-components - Simplificaton of Response Type components code Release 2024/03/13 b84-legacy-content-db-tables - DB updates. No change to UX b315-include-answer-when-importing-case - ensure the answer value is included when importing a case from stats b320-response-type-allowlist - improves modular response areas b325-populate-new-tests-with-the-answer - prepopulate the answer by the correct answer when creating a new test b326-question-alignments - imroves alignments on the edit question page Release 2024/03/08 b283-table-with-1-column-layout - improves table layout b324-show-required-error-on-number-input-wizard - improves number input validations Release 2024/03/05 b301-redesign-part-response-areas-and-text-between-them - teachers can drag response areas while surrounding text stays in place, and merges where necessary. b35/b310-modular-response-areas-phase-6-cleanup - completes modular response areas. Code improvements and removing legacy tables. b323-delete-empty-answer-in-ra-panel - ensure delete works in answer box in response area panel Release 2024/03/04 b319-survey-promotion-banner-on-home-page - add a banner onto the landing page advertising a survey with a link Release 2024/03/01 b287-limit-access-to-sets-published-outside-of-current-date - ensure access to Sets follows release rules, including via URL b303-redirect-help-to-userdocs - redirect lambdafeedback.com/help to user documentation and lambdafeedback.com/[module slug] to the module page b318-url-for-survey - redirect lambdafeedback.com/survey Release 2024/02/29 b35/b308-modular-response-areas-phase-4-custom-response-types - allow admin to dynamically create and manage new response types b35/b309-modular-response-areas-phase-5-migration - migrate all existing response types to the new modular type b313-always-display-post-ra-text-in-pdf-but-not-in-stats-mode - include all text in PDF (including after first response area) Release 2024/02/26 b35-number-input-nan - fix handling of non-number input in the number answer wizard b317-no-header-refetch-on-mount - avoid unwanted refetch when resizing browser window on a set page b35/b307-modular-response-areas-phase-3-all-writes - start writting new and edited Response Area's Response to the new modular table b274-when-deleting-a-question-display-loading-message - display \"loading\" message when deleting a question Release 2024/02/20 b290-the-final-answer-button-is-displayed-even-if-there-is-no-final-answer - fix: only display 'final answer' button when there is content to show b297-give-error-if-creating-module-with-same-name-as-deleted-module - improved formatting of error messages b299-legacy-content-db-tables-ra-contents - DB updates. No change to UX. b302-modal-warning-before-disabling-branching - warning modal when disabling branching in worked solutions and structured tutorials b35/b306-modular-response-areas-phase-2-new-modular-type - backend updates for modular response areas. Release 2024/02/15 b35/b295-modular-response-areas-phase-1-switchless-frontend - a technical improvement to the response area building blocks in the code, so that it is easier, more intuitive and more straight forward to add new response areas Release 2024/02/13 b271-unify-modals - unified modals to use same style b294-check-imports-from-material-ui - prevent importing whole library when importing an icon b300-delete-ra-add-warning-into-the-modal-that-the-text-below-the-ra-will-be-deleted-as-well - when deleting a response area (RA), warning modal that text below RA will also be deleted Release 2024/01/25 b240-structured-tutorial-component-upgrade - converted structured tutorial to use the same structure and logic as worked solutions Release 2024/01/24 b273-limit-access-to-unpublished-sets - ensure no student access to hidden sets via a url b277-milkdown-first-non-markdown-update-is-ignored - milkdown fix to for edge cases that were not saved (single character; deleting selection). b279-table-with-1-column - wider columns for table response areas with one column b280-change-response-colour-to-white - specifically for 'riskAssessment' evaluation function: display feedback for incorrect answer in white colour b281-tweaks-to-ra-analytics - tweaks to response area analytics Release 2024/01/16 b272-legacy-db-tables-tutorial-sections - refactoring the database. No change to UX. Release 2024/01/10 b264-untangle-changes - a technical improvement to make the milkdown wrapper code clearer. b247-re-generate-pdf-after-deleting-a-question - an improvement so that the PDF is automatically re-generated when a published question is deleted b158-change-prod-bucket-to-prod-not-staging - a technical change so that imported images and generated PDF files are saved in the correct AWS bucket dependently on the environment (production, staging or development) b232-ra-analytics-visual-alignment - a change to display response area analytics correctly aligned with labels b77-published-question-change-of-input-type - an improvement to allow changing of the input type on the response area that was already published. b262-legacy-content-db-tables-part-contents - refactoring the database. No change to UX. b245-question-numbering-is-sometimes-wrong-on-the-student-module-home-page - a correction so that question numbers are reconciled after a question is deleted b141-update-link-in-modal - a correction of the link from the modal (which appears when deleting a response area) to the user documentation b211-response-area-preview-remove-border - a change in the question preview in the teacher mode so that it is displayed in the same way as in the student mode b103-milkdown-slow-rendering - a technical change to speed up testing in local development environments Release 2023/12/15 b103-milkdown-slow-rendering - developers can set a flag in local environment to speed up rendering pages with milkdown b235-content-with-hash-copied-across - prevent milkdown copying content with hash from one question to another b244-fix-notes-saving-in-the-student-mode - ensure student notes are visible including when switching from teacher to student mode b248-remove-unwanted-content-from-pdf - removed legacy response area pre-text and post-text from PDFs b251-post-a-reply-in-one-click - post a reply to a comment with one click b256-include-frequency-data-when-downloading-csv - correction to csv file generation for question stats, to include question numbers and frequency b260-number-and-unit-ra-do-not-align-with-pre-text-in-student-mode - align pre-text in the response area with number and units in student mode b261-master-content-sometimes-not-saved - ensure master content entered by the user is saved after publishing a question (not copied from the published version) Release 2023/12/08 b246-rendering-of-list-of-sets-in-teacher-mode-takes-long-time - an improvement to render list of sets in teacher mode quicker b255-recover-lost-marked-parts - further corrections to DB. Some question parts were not marked correctly as DONE for questions imported from JSON between 13/10/23 and 5/12/24. Release 2023/12/05 b242-mark-as-done-copied-across-questions - correction to DB submissions for questions imported from JSON between 13/10/23 and 5/12/24, which were linked together incorrectly. Release 2023/12/04 b224-add-guidance-to-help - guidance on a question, already visible to users in a widget on top-right, is now also visible with the support material below the question b228-legacy-content-db-tables-master-content - refactoring the database. No change to UX. b109-expression-input-tweaks - tweaks to the few improvements in the expression response area (555 in 2023/05/26 ): icons, placeholder, upload size limit. b249-selected-question-index-lost - editor UX, improve the robustness of: when a question is added or published, ensure that question remains in focus to the user. b241-link-from-feed-needs-updating - corrected a URL linking from the teacher feed to a question. Release 2023/11/13 b227-correct-set-estimates - time format improvement for displaying time estimate for each set in the list of set b233-publish-set-pdf-generation - an adjustment to the Publish whole set functionality to generate PDF after the confirmation button is clicked Release 2023/11/09 b186-add-time-estimates-for-each-set-in-teacher-mode - added set estimates which is calculated as summary of estimates of all questions b204-input-symbols-empty-row-should-not-be-validated - an improvement to prevent validation of input symbols when a new row to enter input symbols is added b206-input-symbols-with-spaces - an improvement to remove potential spaces entered into the input symbol alternatives (the values must be seaparated by comma without spaces to make sure they work correctly) b226-update-question-split-prisma-transaction - extended Prisma timeout when a question is being saved or publish b225-bug-in-timed-release-for-pm-times - a change to display hours in 24 hour format when displaying time Release 2023/11/03 b214-admin-dashboard-carry-on - admin dashboard improvements: A drop down list to select the time period for the user access events graph The last part of the graph lines are dotted to make clear that last values are subject to change Release 2023/11/01 b207-pressing-enter-in-the-flag-textbox - an improvement so that when a user is using an expression response area and he attempts to submit a comment (or flag a problem) at the same time by clicking the enter, then only the comment (or the problem message) is submitted (and not the answer in the response area) b213-question-export-import-to-handle-mp3 - an improvement to allow to export and import questions containing an audio (or more audios) b217-remove-header-text-on-module-page-for-students - removed the header on the student module page as it is not needed b215-do-not-update-or-delete-notes-in-teacher-preview - an improvement to prevent submitting student solutions in the teacher preview mode b208-unposted-comments - an imrovement to handle the scenario when a user enters a comment and then, withouth submitting it, selects different question (the comment was copied to the newly selected question which is not a desired feature) b209-zero-comments-invite-comments - an improvement to open comments when there are no comments to invite users to comment Release 2023/10/20 b202-ensure-eval-function-defaults-for-new-response-areas - an improvement so that evaluation function parameters are set to default values when creating a new response area b71-analytics-tweaks-teacher-view - the students list, view and contact pages were merged into a single page: - Filters by email and/or by access are available to filter the single list of students - A click on a student email opens a view which displays the same analytics the student can see b162-analytics-tweaks-stats-modal - improvements in the analytics view: - Colour is indicating the answer's case colour, if any, or the correct/incorrect default colour - Checkmark is indicating that the answer was correct - More options added to allow the user to agregate student answers b67-simplify-stats-interaction - few changes to response area statistics in the teacher mode: The case is imported straight into the relevant response area The response area menu has a new button EXPLORE so that the teacher can see the statistics per response area { width=\"400\" } b192-reaction-count-one-hour-challenge - users can see the individual count of each type of reaction { width=\"300\" } b183-activity-feed-make-clear-there-are-more-flags-than-5 - make clear to the user how many flags and comments there are in total as there might be more than 5 displayed on the teacher dashboard { width=\"400\" } b110-import-multiple-jsons-from-a-single-zip - allows to import more questions from one zip file. This includes questions with attached pictures. Import of questions with attached audio files is yet to come. b205-admin-analytics-initial-work - first version of the admin dashboard is now provided. It includes information about number of current users, questions and user access events Release 2023/10/12 b180-prod-freezing-and-restarting - increasing allocated memory to accommodate multiple users triggering heavy processes (PDF compilation) b193-implement-auto-scaling-on-infrastructure - Infrastructure upgrades for larger scale usage. b124-question-export-with-pictures-fails-sometimes-on-cors-error - forcing Chrome to refresh media retriaval from S3 bucket to make sure correct headers are attached to the response b199-migration-script-for-physics-expression-ra - DB migration for legacy content. b194-create-set-and-first-question-improvement - new set automatically has a blank question ready. b197-not-possible-to-delete-a-question - increase timeout when deleting a question b143-more-info-in-modal-when-publish-whole-set - displaying list of questions that will be published in a modal before publishing whole set. b144-modal-to-check-before-removing-branches - a warning message is displayed before a branch from worked solutions is deleted Release 2023/10/05 b136-change-to-breadcrumbs - an improvement to remove module instances from teachers and students breadcrumbs as they do not link to any pages b188-add-information-when-rendering-a-new-question - adding information that a question is being created when adding a new question b189-failed-fetching-your-problem-set-message-appearing-when-it-should-not - a warning message 'Failed fetching your problem set' is to be displayed only if there is an error Release 2023/10/03 b191-expression-response-area-defaults - an improvement so that when creating a new response area of type EXPRESSION, the default values are set to: TRUE for Live preview FALSE for Display input symbols FALSE for Include in PDF TRUE for Enable handwriting input TRUE for Enable photo upload b187-support-materials-access-enhancements - enhancements to the support materals student access configuration: A new button event was added to record whether students proceeded or cancelled after a warning message appeared when a student tried to open a support material Labels were renamed to make their meaning clearer (e.g. 'Open' was changed to 'Available' and 'Hidden' to 'Unavailable') When a question part is marked as done, then no warning is displayed to a student when opening a support material (even if marked as Open with warnings) Release 2023/09/29 b148-problem-adding-new-question-after-changing-name-of-current-question - an improvement so that a user cannot start changing newly added question (e.g. changing name) until all processes are finished and therefore preventing these changes to be wiped out. b161-renaming-question-straight-after-making-it - this is the same problem as b148 b151-quote-marks-can-break-flags - an improvement so that double-quote marks, if used in a text, are displayed correctly in the generated csv file b164-grade-param-type-changed-reverts-to-string-when-value-is-empty - an improvment to identify a number as a number in the grade parameters, so that the type is displayed number and not as string b166-no-template-questions-in-the-list - an improvement to display all existing template questions in the list (when adding a new question from a template) b190-draw-area-width-keeps-changing - an improvement to stop the drawing area changing its width when a warning message is displayed that the writting cannot be interpreted Release 2023/09/27 b157-new-eval-function-reset-parameters - improvement in the response area panel, when the evaluation function is changed, then the default evaluation function parameters are re-set. b167-teachers-are-sent-to-the-most-recent-instance-on-the-module-homepage-even-when-they-dont-have-access-they-should-be-sent-to-the-most-recent-one-that-they-have-access-to b163-failed-fetching-your-problem-set-displayed-on-every-page-load - an improvement so that the warning message only appears when the fetch returns an error. b149-restrict-access-to-worked-solutions - restrict student access to support materials on set level and on question level. b165-preview-not-the-same-as-student-view - an improvement to displaye pre-text, value and post-text aligned horizontally in the response area student view Release 2023/09/08 128-feedback-area-does-not-support-latex-rendering - Feedbacks returned by the evaluation function are displayed using latex editor. Release 2023/09/07 b155-aws-ending-support-for-nodejs-14-in-aws-lambda - A clear-up of an outdated library. b153-pressing-enter-in-a-number-response-adds-new-line-to-the-response - Handle Enter in the response area as a submission of the answer. b139-archive-feature-enhancements - Enancements of module as module instance archiving. b68-cleaning-up-the-editor - many ui enhancements in the question editing page b115-case-color-under-feedback-tab-for-response-area-is-not-functional - The custom colour for feedbacks is now displayed correctly. Release 2023/08/30 b33-audio-clips - in the content editor, drag-and-drop an audio file, and it will add a sound (e.g. narration) to the content. b145-xetex-pdf - PDFs are now compiled with xelatex, not PDFlatex. b150-extracting-code-from-listener-into-callback-fn - stats for typed expressions now record full submissions only (not keystrokes) Release 2023/08/22 b147-time-guidance-is-currently-very-small - An adjustment after upgrading one of the libraries which caused the time guidance to shrink. b142-module-clone-enhancements - An enhancemnt to include links to already generated PDF files for all sets in the cloned module instance. b138-503-error - An enhancement to navigate to the teacher module / module instance after clicking Cancel button in the Set Metadata page. Release 2023/08/18 b114-matrix-input-centering-in-teacher-mode-but-not-in-student-mode - The Check button for matrix questions in the response area panel is now vertically centred in the student view. b140-response-area-pre-text-doubled - The legacy response area pre-text was removed from the student view. Release 2023/08/16 b127-cloned-instances-are-missing-tutorials-and-worked-solutions - An enhancement of the module cloning functionality to include worked solutions and tutorials. b125-when-publishing-question-update-the-student-view - An enhacement so that when a teacher publishes a question then, this question is visible in the student view without having to refresh the browser or log out and back in again. b83-revisit-set-archiving - This is a technical improvement of the existing functionality to archive sets so that it is done in the same way as archiving of other entities. It has no visible any impacts to a user. b111-archive-module-instance-option - A new feature to allow to archive a module instance. This feature is only available to an administrator. b126-archive-module-option - A new feature to allow to archive a module. This feature is only available to an administrator. b108-error-when-clicking-add-question-button-while-inside-part-content-box - Technical improvement. Upgrade of some libraries (Material UI) to prevent errors caused by issues in the older library version. Release 2023/07/21 b101-tests-run-from-the-configure-panel-have-the-islatex-parameter-set-to-true - A correction to the settings on the new Expression input (see 555 in 2023/05/26 ). When calling an evaluation function, the is_latex parameter dependends on the type of input (type/draw/scan). b120-PDF-skill-time-info - PDFs now include information on skill level, time estimates, and guidance below the question title and above the question content. b122-multi-year-carry-on - extended UI features referring to module instances (see b82 below). Release 2023/07/19 b82-multi-year-duplicate-module-instance-and-link-entities - new feature to clone module instances b118-multi-year-tidy-up - multi module feature enhancements such as sorting and filtering module instances on the admin Module page Release 2023/07/14 b72-multi-year-module-instances-introduction - All Modules now exist as an 'Instance' of a Module, in preparation for allowing multiple Instances. The UI navigation is updated to handle Module Instances. b81-show-preview-of-ra-in-input-type-select - Selecting an Input Type for a Response Area: a searchable preview of Input Types improves the UX: users see the preview while selecting. b91-prevent-multiple-blank-questions - When a question is added, the 'add quesiton' button is temporarily disabled while the application updates. b112-bug-the-tab-navigation-bar-at-the-top-disappears - Editor tabs are pesistent including during keyboard navigation b116-pdf-display-between-ras - PDF generation: for multiple Response Areas in a Part, the order is now always correct Release 2023/06/22 b39-new-editor-menus - question editor area menus have been converted into tabs. Other improvements have also been made to the editor layout inlcuding switching between teacher and student mode and staying on the same question. b62-add-tabs-to-reponse-area-panel - the Response Area panel is grouped into tabs that aid navigation and encourage a workflow that matches the way teachers think. Other layout improvements were also made within the tabs. b79-input-type-on-published-ra-should-not-be-editable - input type cannot be changed after publishing (see 598 here 2023/06/05 ). b85-incorrect-required-error-message - enhanced validation for number 0 in numeric response area. 588-question-import-export-handle-images - import export includes images; a zip file is used to combine the JSON and the images. 601-parameter-defaults-for-an-eval-function-cpq - improved the appearance of boolean evaluation function parameters. 603-user-docs-updates - user documentation repo renamed from \"documentation\" to \"user_documentation\". 608-link-word-sign-in-to-sign-in-on-homepage - on the home page 'sign in' text is now a link to sign in. 619-mcq-check-button-should-be-vertically-central - the Check button for multi-choice questions in the response area panel is now vertically centred. Release 2023/06/05 598-published-questions-change-of-approach - questions are now fully editable after publishing. All data from student responses persists through these changes. One exception is that the input type of a response area cannot be changed after publication, because this would change the format of the data that is recorded (you can, however, delete the response area and create a new one instead). Other new features: duplicate a Response Area; reorder Response Areas using drag and drop (in a similar way as reordering Parts). 613-enable-publish-whole-set - see 606 below ( 2023/05/26 ). The 'Publish Whole Set' button is now enabled. 614-error-with-stats-on-dev - ensures statistics still work with the new handwriting input (see 555 below). Release 2023/05/26 555-handwriting-response-area-upgrades - A new version of the Expression input type is in use. Input by handwriting onscreen or with scanned images is an option for teachers to make available to students (default: off). Also, regardless of the input mode (type/draw/scan) the live preview now gives 'pre-submission' feedback on whether the response can be interpreted, and the Check button is only available if interpretation is successful. 606-publish-whole-set-causing-stats-to-disappear - The 'Publish Whole Set' button in Teacher Edit mode has been disabled because it was causing data to become unlikned in the DB, giving the effect of data like number of completed parts 'disappearing'. Existing data has now been relinked and is all visible to users. The feature that caused the problem has been disabled while we prepare a replacement to be pushed shortly. 612-whole-part-marked-as-done-with-more-response-areas - Student functionality. If a question part has multiple Response Areas, the logic is now that only if all Response Areas are correctly answered will the 'Mark as done' feature be automatically checked. Previously only one correct answer was required to trigger this effect. 585-question-simple-import-and-export - Teacher functionality. The import/export functionality has been enhanced so that it Response Area parameters, cases, and tests are now all included. Release 2023/03/21 571-simple-teacher-comment-feed - Teacher functionality. New 'Activity feed' (formerly 'Flagged Questions') contains flagged questions and comments. The teacher can filter the table to see e.g. only flags or only comments. The teacher can also sort the table e.g. to see the new activities first. 569-numeric-input-strips-out-strings-that-may-have-meaning - Technical dept. For the Response Area input type 'Number', additional validation added; if the input contains a non-numeric value then a relevant error message is displayed to the user (this is linked to the 573-response-area-validation-specific-errors below). 573-response-area-validation-specific-errors - Teacher and student functionality. More specific error messages are displayed when the user inserts a value in an incorrect format (e.g. a non-numeric value into the input that expects a number). 582-empty-structured-tutorial-shouldnt-display - Technical debt. When a tutorial is deleted, it is not displayed at all to students (as opposed to being blank). 585-question-simple-import-and-export - Teacher functionality. Export a question to a file in JSON format. Import a question from a file in JSON format. Images are not imported/exported - these need to be handled manually until a new feature is ready. This feature opens the door to file imports if content can be converted into the correct format. 586-question-import-add-schema-validation - Teacher functionality. When importing a question from a file, the data structure and format is validated. If the validation fails then relevant error messages displayed to the user. Release 2023/03/06 566-pdf-error-identification - Teacher functionality. When a PDF fails to compile, the location of the error source is given in more detail, e.g. 'Q2(c)'. 576-orderedsetids-throws-error-in-main - Technical. When loading sets in a module on the teacher side, an error no longer appears in the console. 522-adding-teacher-when-creating-module-inadequate-error-message - Admin functionality. When adding a new module, a teacher can be added simultaneously. If the proposed teacher is not already registered as a teacher, then they are now automatically created as a teacher and a confirmation message is displayed. 524-remove-teacher-from-list - Admin functionality. Remove a teacher from the list of teachers. If the teacher is still a teacher on a module, then display a modal confirming which modules the teacher will be removed from. If the user confirms, the teacher is removed from all the modules and then they are deleted from the list of teachers. 572-comment-upvote-tweeks - Teacher and Student functionality. Right margin on the comments tweaked so that the sorting feature and 'post' button are not too far away from each other. 483-show-all-button - Teacher functionality. The Show All feature is now enabled in the question preview mode. 520-default-to-an-eval-function-after-selecting-the-response-area - Teacher functionality. In the Response area edit panel, automatically select a default eval function as follows (it can be edited by the teacher if necessary). The default selections are: Response area Default evaluation function MCQ arrayEqual NUMERIC isSimilar Expression and Text symbolicEqual Table and Matrix arraySymbolicEqual NUMERIC_UNITS comparePhysicalQuantities Release 2023/02/10 560-comment-feature-tweaks - UI improvements to the comments feature. 550-comment-upvotes - users can upvote comments by clicking on the heart. Sorting by upvotes is default 546-always-test-a-response-area-when-saving - [For teachers only] this is an invisible feature that automatically tests a response area, when closing the editing panel, to check that the correct answer is accepted as correct. A failure to pass this test will show an error and not save the response area until fixed. The reason for this feature is to catch things like empty cells in the teacher answer which, e.g. for a matrix, would make marking student answers impossible. If such errors were allowed to pass, then students would experience errors when using the response area - hence it cannot be allowed. The auto-test feature is not enabled for all response areas as some are not compatible - the option can be enabled/disabled for each response area by admins. 568-numeric-input-expects-string - upgrade to the numeric input type when dealing with string inputs.","title":"2023-24"},{"location":"releases/relases_2023_24/#release-20240927","text":"b457-option-to-omit-iscorrect-feedback - added the option for teachers to customise the feedback prefix and colour b459-image-on-the-same-line-as-preceding-text - corrected PDF generation to prevent images from appearing on the same line as the preceding text","title":"Release 2024/09/27"},{"location":"releases/relases_2023_24/#release-20240923","text":"b449-improve-mobile-navigation - improve mobile UI b462-final-summer-tweaks - ui improvements and fixes b146-follow-up - email notifications tweaks and fixes","title":"Release 2024/09/23"},{"location":"releases/relases_2023_24/#release-20240918","text":"b444-bulk-rollover-follow-up - updates to bulk rollover feature b452-ui-tweaks-ii - additional ui enhacements b453-config-panel-disabled-feedback-tab-is-still-accessible-by-next-and-previous-buttons - fixed an issue where disabled tabs in the response area configuration panel could still be accessed using navigation buttons","title":"Release 2024/09/18"},{"location":"releases/relases_2023_24/#release-20240914","text":"b134-ipados-ios-safari-like-flag-problem-help-off-the-page - fixed scrolling of problem sets when using iPadOS or iOS Safari b439-disable-download-when-no-pdf-available - improved behavior of the \u201cDownload set\u201d drop-down button b407-all-questions-published-when-publishing-one - corrected version history page to display accurate data when viewing past question versions b434-ui-redesign-tweaks - additional tweaks to the user interface b442-bring-back-sets-download-options - restored \u201cSet Download\u201d drop-down button that was removed during the UI redesign b447-aws-db-backups-stopped - fixed the database backup issue b451-display-modules-even-if-sets-are-hidden - updated the system so students can view their modules, even if no sets are available b146-email-recap - add weekly email recap","title":"Release 2024/09/14"},{"location":"releases/relases_2023_24/#release-20240910","text":"b413-authentication-failures - code cleanup for updated authentication to avoid logging out (see b413 in 2024/08/23 ) b438-enable-canvas-for-all-users - enabled canvas for all users (see b343 in 2024/06/28 ) b441-custom-milkdown-theme-bug - adjusted the new Milkdown theme to improve compatibility with math mode","title":"Release 2024/09/10"},{"location":"releases/relases_2023_24/#release-20240904","text":"b441-revert-to-nord-theme - undo milkdown theme switch until math block is fixed","title":"Release 2024/09/04"},{"location":"releases/relases_2023_24/#release-20240903","text":"b386-provide-drop-down-list-for-ra-default-lambda-function","title":"Release 2024/09/03"},{"location":"releases/relases_2023_24/#release-20240902","text":"b398-upgrade-student-module-list - add new card view to module list student page b430-fix-redesign-bugs - add proper error handling to teacher pages when not a teacher b435-remove-env-from-git - remove .env file from git as it shouldn't be checked into vcs","title":"Release 2024/09/02"},{"location":"releases/relases_2023_24/#release-20240828","text":"b383-check-for-existing-module-name - Check if module name already exists when creating new module b383_do_not_query_without_module_id - do not run query from header without module id b393-canvas-stored - Store canvas in database b425-studentmodule-and-studentmodules-api-retrieve-hidden-sets - do not retrieve hidden sets for students b427_display_pdf_errors_after_set_publish - Display PDF error message when publishing whole set b428-bulk-rollover-qa-comments - updates to bulk rollover feature b431-add-sentry - Add Sentry error monitoring b433-not-possible-to-enrol-students - fix to student enrollment b436-fix-instance-swapper - fix instance swapper","title":"Release 2024/08/28"},{"location":"releases/relases_2023_24/#release-20240823-2","text":"b380-fix-tables - Table paging fix b379-disappearing-r-at-beginning-of-line-milkdown - fix disappearing 'R' at beginning of line milkdown b413-force-renew - authentication update to avoid logging out b429_deleting_cases_and_tests_qa - ensure feedback case order is maintained","title":"Release 2024/08/23 - 2"},{"location":"releases/relases_2023_24/#release-20240823","text":"b413-grounded - updates to the authentication flow","title":"Release 2024/08/23"},{"location":"releases/relases_2023_24/#release-20240822-2","text":"b402-create-table-view - table view added to the teacher module view b406-prepare-ui-update - changes in the user interface","title":"Release 2024/08/22 - 2"},{"location":"releases/relases_2023_24/#release-20240822","text":"b356-delete-all-questions-in-set-not-handled-gracefully - create blank question when all others are deleted b409-module-bulk-rollover - bulk creation of new module instances (for admins) b417-set-part-to-a-when-switching-question - in teacher mode, when switching a question, always display part (a) b419-deleting-case-is-causing-feedbacks-to-shift-incorrectly - display correct remaining cases after deleting one b423-pdf-generation-displays-different-error-first-time - first PDF generation message consistent with follow up messages","title":"Release 2024/08/22"},{"location":"releases/relases_2023_24/#release-20240807","text":"b375-correct-tex-and-pdf-for-solutions - PDF generation improvements b412-export-import-wrong-order-of-parts - ensure correct part and response-area order when importing b413-authentication-failures - part 2 - prevent application logouts b416-download-set-as-json-downloads-wrong-set - ensure correct set when exporting JSON","title":"Release 2024/08/07"},{"location":"releases/relases_2023_24/#release-20240802","text":"b391-milkdown-fault-if-latex-on-last-line - fixed milkdown bug - if text ends with latex, it rendered raw but now renders properly. b415-guidance-time-suggestion-feature-by-colin - guidance time suggestion (using Machine Learning based on our database of content)","title":"Release 2024/08/02"},{"location":"releases/relases_2023_24/#release-20240726","text":"b369-guidance-text-on-enrollment - add a guidance text when adding students or teachers b381-not-possible-to-add-multiple-teachers - allow to add multiple teachers b410-open-doc-links-in-new-tab - open external links in a new tab b413-authentication-failures - fixed problems with application logouts","title":"Release 2024/07/26"},{"location":"releases/relases_2023_24/#release-20240724","text":"b378-admin-module-instance-breadcrumbs-incorrect - corrected the application header (for Admin module instance page)","title":"Release 2024/07/24"},{"location":"releases/relases_2023_24/#release-20240723","text":"b132 - security update for milkdown b366-non-imperial-users-to-be-able-to-log-in - non-Imperial logins enabled b374-admin-analytics-evaluation-functions - analytics for evaluation function errors b387-import-question-does-not-import-worked-solutions - corrected question export with solutions b388-tutorials-and-solutions-steps-messed-up - corrected sorting of solution branches","title":"Release 2024/07/23"},{"location":"releases/relases_2023_24/#release-20240718","text":"b392-essay-code-ras - add two new response area types: code and essay b396-better-feedback-box - improve the feedback box UI and accessibility","title":"Release 2024/07/18"},{"location":"releases/relases_2023_24/#release-20240716","text":"b395-vertical-text-align - remove excess margin from top part of question","title":"Release 2024/07/16"},{"location":"releases/relases_2023_24/#release-20240628","text":"b258-performance-analyse-db - faster response from DB queries b343-canvas - student canvas in beta mode (hidden by default) b351-teacher-module-page-ui-upgrades - Teacher module home page UI upgrades (tabs added) b357-upgrade-aws-sdk-v2-to-v3 - software library updates b359-generate-tex-file - upload/download whole Sets as LaTeX files","title":"Release 2024/06/28"},{"location":"releases/relases_2023_24/#release-20240614","text":"b305-export-whole-set - import/export whole sets b334-upgrade-node-next-nest - library updates","title":"Release 2024/06/14"},{"location":"releases/relases_2023_24/#release-20240529","text":"b352-support-to-eval-function-20-get-all-routes-by-getroutes - evaluation function deployment (check existing routes) b353-question-import-filter-out-unicode-characters - remove character (U-2006) on json import b354-double-confirm-on-confirmation-pop-ups - fix confirm button on modals in teacher mode","title":"Release 2024/05/29"},{"location":"releases/relases_2023_24/#release-20240524","text":"b97-remove-all-references-to-mongodb - remove code linking to legacy databases b243-add-question-id-to-the-url - add question identifier to the url b285-move-module-instance-drop-down-to-left-to-replace-the-instance-label - more user-friendly module instance selection b304-milkdown-element-in-admin-that-will-display-on-home-page - add an administrator page to configure a home page banner b330-modal-update - question version switch: allow teacher either to save or discard existing draft b349-support-to-eval-function-20-ensure-deployments - evaluation functions: production and non-production versions","title":"Release 2024/05/24"},{"location":"releases/relases_2023_24/#release-20240515","text":"b250-expression-ra-scan-mode-copy-and-paste - allow copy and paste and other improvements in the scan mode functionality b314-remove-experimental-from-ra-panel - \"experimental\" from the photo upload and handwritting labels removed b338-create-a-new-set-when-creating-a-module - a default set automatically creating when a new module is created b342-do-not-generate-pdf-when-creating-new-question - prevent PDF generation when a new question is added b345-after-pdf-generation-extraction-cleanup - a technical improvements into the PDF generation","title":"Release 2024/05/15"},{"location":"releases/relases_2023_24/#release-20240426","text":"b230-pdf-generation-in-a-separate-lambda-function - PDF generation is faster, more secure, and frees up bandwidth on the main server. b328-improve-expression-ui-in-tests - fix expression response area preview in tests tab b331-work-solutions-empty-content-not-handled-as-no-work-solutions - work solutions and structured tutorials buttons not to be displayed if the content is empty b339-accessible-response-area-feedback - displaying error returned by evaluation functions in a user-friendly format b340-remove-input-type-changed-warning-on-new-ra - do not display warning about response area type change for new response areas","title":"Release 2024/04/26"},{"location":"releases/relases_2023_24/#release-20240419","text":"337-individual-tests-always-fail - fix individual reponse area test runs 327-consolidate-response-area-components - improvements for better response area consistency","title":"Release 2024/04/19"},{"location":"releases/relases_2023_24/#release-20240321","text":"b332-table-smart-resizing - resize table width based on the screen size","title":"Release 2024/03/21"},{"location":"releases/relases_2023_24/#release-20240319","text":"b286-ra-analytics-when-config-is-changed - Fix aggregates in stats b311-expression-area-layout-issues - Improve expression RA layout b325-populate-new-tests-with-the-answer - Populate new tests with the answer b322-enable-live-preview-in-teacher-mode - Attempt to enable live preview in teacher mode b35/b329-simplify-response-components - Simplificaton of Response Type components code","title":"Release 2024/03/19"},{"location":"releases/relases_2023_24/#release-20240313","text":"b84-legacy-content-db-tables - DB updates. No change to UX b315-include-answer-when-importing-case - ensure the answer value is included when importing a case from stats b320-response-type-allowlist - improves modular response areas b325-populate-new-tests-with-the-answer - prepopulate the answer by the correct answer when creating a new test b326-question-alignments - imroves alignments on the edit question page","title":"Release 2024/03/13"},{"location":"releases/relases_2023_24/#release-20240308","text":"b283-table-with-1-column-layout - improves table layout b324-show-required-error-on-number-input-wizard - improves number input validations","title":"Release 2024/03/08"},{"location":"releases/relases_2023_24/#release-20240305","text":"b301-redesign-part-response-areas-and-text-between-them - teachers can drag response areas while surrounding text stays in place, and merges where necessary. b35/b310-modular-response-areas-phase-6-cleanup - completes modular response areas. Code improvements and removing legacy tables. b323-delete-empty-answer-in-ra-panel - ensure delete works in answer box in response area panel","title":"Release 2024/03/05"},{"location":"releases/relases_2023_24/#release-20240304","text":"b319-survey-promotion-banner-on-home-page - add a banner onto the landing page advertising a survey with a link","title":"Release 2024/03/04"},{"location":"releases/relases_2023_24/#release-20240301","text":"b287-limit-access-to-sets-published-outside-of-current-date - ensure access to Sets follows release rules, including via URL b303-redirect-help-to-userdocs - redirect lambdafeedback.com/help to user documentation and lambdafeedback.com/[module slug] to the module page b318-url-for-survey - redirect lambdafeedback.com/survey","title":"Release 2024/03/01"},{"location":"releases/relases_2023_24/#release-20240229","text":"b35/b308-modular-response-areas-phase-4-custom-response-types - allow admin to dynamically create and manage new response types b35/b309-modular-response-areas-phase-5-migration - migrate all existing response types to the new modular type b313-always-display-post-ra-text-in-pdf-but-not-in-stats-mode - include all text in PDF (including after first response area)","title":"Release 2024/02/29"},{"location":"releases/relases_2023_24/#release-20240226","text":"b35-number-input-nan - fix handling of non-number input in the number answer wizard b317-no-header-refetch-on-mount - avoid unwanted refetch when resizing browser window on a set page b35/b307-modular-response-areas-phase-3-all-writes - start writting new and edited Response Area's Response to the new modular table b274-when-deleting-a-question-display-loading-message - display \"loading\" message when deleting a question","title":"Release 2024/02/26"},{"location":"releases/relases_2023_24/#release-20240220","text":"b290-the-final-answer-button-is-displayed-even-if-there-is-no-final-answer - fix: only display 'final answer' button when there is content to show b297-give-error-if-creating-module-with-same-name-as-deleted-module - improved formatting of error messages b299-legacy-content-db-tables-ra-contents - DB updates. No change to UX. b302-modal-warning-before-disabling-branching - warning modal when disabling branching in worked solutions and structured tutorials b35/b306-modular-response-areas-phase-2-new-modular-type - backend updates for modular response areas.","title":"Release 2024/02/20"},{"location":"releases/relases_2023_24/#release-20240215","text":"b35/b295-modular-response-areas-phase-1-switchless-frontend - a technical improvement to the response area building blocks in the code, so that it is easier, more intuitive and more straight forward to add new response areas","title":"Release 2024/02/15"},{"location":"releases/relases_2023_24/#release-20240213","text":"b271-unify-modals - unified modals to use same style b294-check-imports-from-material-ui - prevent importing whole library when importing an icon b300-delete-ra-add-warning-into-the-modal-that-the-text-below-the-ra-will-be-deleted-as-well - when deleting a response area (RA), warning modal that text below RA will also be deleted","title":"Release 2024/02/13"},{"location":"releases/relases_2023_24/#release-20240125","text":"b240-structured-tutorial-component-upgrade - converted structured tutorial to use the same structure and logic as worked solutions","title":"Release 2024/01/25"},{"location":"releases/relases_2023_24/#release-20240124","text":"b273-limit-access-to-unpublished-sets - ensure no student access to hidden sets via a url b277-milkdown-first-non-markdown-update-is-ignored - milkdown fix to for edge cases that were not saved (single character; deleting selection). b279-table-with-1-column - wider columns for table response areas with one column b280-change-response-colour-to-white - specifically for 'riskAssessment' evaluation function: display feedback for incorrect answer in white colour b281-tweaks-to-ra-analytics - tweaks to response area analytics","title":"Release 2024/01/24"},{"location":"releases/relases_2023_24/#release-20240116","text":"b272-legacy-db-tables-tutorial-sections - refactoring the database. No change to UX.","title":"Release 2024/01/16"},{"location":"releases/relases_2023_24/#release-20240110","text":"b264-untangle-changes - a technical improvement to make the milkdown wrapper code clearer. b247-re-generate-pdf-after-deleting-a-question - an improvement so that the PDF is automatically re-generated when a published question is deleted b158-change-prod-bucket-to-prod-not-staging - a technical change so that imported images and generated PDF files are saved in the correct AWS bucket dependently on the environment (production, staging or development) b232-ra-analytics-visual-alignment - a change to display response area analytics correctly aligned with labels b77-published-question-change-of-input-type - an improvement to allow changing of the input type on the response area that was already published. b262-legacy-content-db-tables-part-contents - refactoring the database. No change to UX. b245-question-numbering-is-sometimes-wrong-on-the-student-module-home-page - a correction so that question numbers are reconciled after a question is deleted b141-update-link-in-modal - a correction of the link from the modal (which appears when deleting a response area) to the user documentation b211-response-area-preview-remove-border - a change in the question preview in the teacher mode so that it is displayed in the same way as in the student mode b103-milkdown-slow-rendering - a technical change to speed up testing in local development environments","title":"Release 2024/01/10"},{"location":"releases/relases_2023_24/#release-20231215","text":"b103-milkdown-slow-rendering - developers can set a flag in local environment to speed up rendering pages with milkdown b235-content-with-hash-copied-across - prevent milkdown copying content with hash from one question to another b244-fix-notes-saving-in-the-student-mode - ensure student notes are visible including when switching from teacher to student mode b248-remove-unwanted-content-from-pdf - removed legacy response area pre-text and post-text from PDFs b251-post-a-reply-in-one-click - post a reply to a comment with one click b256-include-frequency-data-when-downloading-csv - correction to csv file generation for question stats, to include question numbers and frequency b260-number-and-unit-ra-do-not-align-with-pre-text-in-student-mode - align pre-text in the response area with number and units in student mode b261-master-content-sometimes-not-saved - ensure master content entered by the user is saved after publishing a question (not copied from the published version)","title":"Release 2023/12/15"},{"location":"releases/relases_2023_24/#release-20231208","text":"b246-rendering-of-list-of-sets-in-teacher-mode-takes-long-time - an improvement to render list of sets in teacher mode quicker b255-recover-lost-marked-parts - further corrections to DB. Some question parts were not marked correctly as DONE for questions imported from JSON between 13/10/23 and 5/12/24.","title":"Release 2023/12/08"},{"location":"releases/relases_2023_24/#release-20231205","text":"b242-mark-as-done-copied-across-questions - correction to DB submissions for questions imported from JSON between 13/10/23 and 5/12/24, which were linked together incorrectly.","title":"Release 2023/12/05"},{"location":"releases/relases_2023_24/#release-20231204","text":"b224-add-guidance-to-help - guidance on a question, already visible to users in a widget on top-right, is now also visible with the support material below the question b228-legacy-content-db-tables-master-content - refactoring the database. No change to UX. b109-expression-input-tweaks - tweaks to the few improvements in the expression response area (555 in 2023/05/26 ): icons, placeholder, upload size limit. b249-selected-question-index-lost - editor UX, improve the robustness of: when a question is added or published, ensure that question remains in focus to the user. b241-link-from-feed-needs-updating - corrected a URL linking from the teacher feed to a question.","title":"Release 2023/12/04"},{"location":"releases/relases_2023_24/#release-20231113","text":"b227-correct-set-estimates - time format improvement for displaying time estimate for each set in the list of set b233-publish-set-pdf-generation - an adjustment to the Publish whole set functionality to generate PDF after the confirmation button is clicked","title":"Release 2023/11/13"},{"location":"releases/relases_2023_24/#release-20231109","text":"b186-add-time-estimates-for-each-set-in-teacher-mode - added set estimates which is calculated as summary of estimates of all questions b204-input-symbols-empty-row-should-not-be-validated - an improvement to prevent validation of input symbols when a new row to enter input symbols is added b206-input-symbols-with-spaces - an improvement to remove potential spaces entered into the input symbol alternatives (the values must be seaparated by comma without spaces to make sure they work correctly) b226-update-question-split-prisma-transaction - extended Prisma timeout when a question is being saved or publish b225-bug-in-timed-release-for-pm-times - a change to display hours in 24 hour format when displaying time","title":"Release 2023/11/09"},{"location":"releases/relases_2023_24/#release-20231103","text":"b214-admin-dashboard-carry-on - admin dashboard improvements: A drop down list to select the time period for the user access events graph The last part of the graph lines are dotted to make clear that last values are subject to change","title":"Release 2023/11/03"},{"location":"releases/relases_2023_24/#release-20231101","text":"b207-pressing-enter-in-the-flag-textbox - an improvement so that when a user is using an expression response area and he attempts to submit a comment (or flag a problem) at the same time by clicking the enter, then only the comment (or the problem message) is submitted (and not the answer in the response area) b213-question-export-import-to-handle-mp3 - an improvement to allow to export and import questions containing an audio (or more audios) b217-remove-header-text-on-module-page-for-students - removed the header on the student module page as it is not needed b215-do-not-update-or-delete-notes-in-teacher-preview - an improvement to prevent submitting student solutions in the teacher preview mode b208-unposted-comments - an imrovement to handle the scenario when a user enters a comment and then, withouth submitting it, selects different question (the comment was copied to the newly selected question which is not a desired feature) b209-zero-comments-invite-comments - an improvement to open comments when there are no comments to invite users to comment","title":"Release 2023/11/01"},{"location":"releases/relases_2023_24/#release-20231020","text":"b202-ensure-eval-function-defaults-for-new-response-areas - an improvement so that evaluation function parameters are set to default values when creating a new response area b71-analytics-tweaks-teacher-view - the students list, view and contact pages were merged into a single page: - Filters by email and/or by access are available to filter the single list of students - A click on a student email opens a view which displays the same analytics the student can see b162-analytics-tweaks-stats-modal - improvements in the analytics view: - Colour is indicating the answer's case colour, if any, or the correct/incorrect default colour - Checkmark is indicating that the answer was correct - More options added to allow the user to agregate student answers b67-simplify-stats-interaction - few changes to response area statistics in the teacher mode: The case is imported straight into the relevant response area The response area menu has a new button EXPLORE so that the teacher can see the statistics per response area { width=\"400\" } b192-reaction-count-one-hour-challenge - users can see the individual count of each type of reaction { width=\"300\" } b183-activity-feed-make-clear-there-are-more-flags-than-5 - make clear to the user how many flags and comments there are in total as there might be more than 5 displayed on the teacher dashboard { width=\"400\" } b110-import-multiple-jsons-from-a-single-zip - allows to import more questions from one zip file. This includes questions with attached pictures. Import of questions with attached audio files is yet to come. b205-admin-analytics-initial-work - first version of the admin dashboard is now provided. It includes information about number of current users, questions and user access events","title":"Release 2023/10/20"},{"location":"releases/relases_2023_24/#release-20231012","text":"b180-prod-freezing-and-restarting - increasing allocated memory to accommodate multiple users triggering heavy processes (PDF compilation) b193-implement-auto-scaling-on-infrastructure - Infrastructure upgrades for larger scale usage. b124-question-export-with-pictures-fails-sometimes-on-cors-error - forcing Chrome to refresh media retriaval from S3 bucket to make sure correct headers are attached to the response b199-migration-script-for-physics-expression-ra - DB migration for legacy content. b194-create-set-and-first-question-improvement - new set automatically has a blank question ready. b197-not-possible-to-delete-a-question - increase timeout when deleting a question b143-more-info-in-modal-when-publish-whole-set - displaying list of questions that will be published in a modal before publishing whole set. b144-modal-to-check-before-removing-branches - a warning message is displayed before a branch from worked solutions is deleted","title":"Release 2023/10/12"},{"location":"releases/relases_2023_24/#release-20231005","text":"b136-change-to-breadcrumbs - an improvement to remove module instances from teachers and students breadcrumbs as they do not link to any pages b188-add-information-when-rendering-a-new-question - adding information that a question is being created when adding a new question b189-failed-fetching-your-problem-set-message-appearing-when-it-should-not - a warning message 'Failed fetching your problem set' is to be displayed only if there is an error","title":"Release 2023/10/05"},{"location":"releases/relases_2023_24/#release-20231003","text":"b191-expression-response-area-defaults - an improvement so that when creating a new response area of type EXPRESSION, the default values are set to: TRUE for Live preview FALSE for Display input symbols FALSE for Include in PDF TRUE for Enable handwriting input TRUE for Enable photo upload b187-support-materials-access-enhancements - enhancements to the support materals student access configuration: A new button event was added to record whether students proceeded or cancelled after a warning message appeared when a student tried to open a support material Labels were renamed to make their meaning clearer (e.g. 'Open' was changed to 'Available' and 'Hidden' to 'Unavailable') When a question part is marked as done, then no warning is displayed to a student when opening a support material (even if marked as Open with warnings)","title":"Release 2023/10/03"},{"location":"releases/relases_2023_24/#release-20230929","text":"b148-problem-adding-new-question-after-changing-name-of-current-question - an improvement so that a user cannot start changing newly added question (e.g. changing name) until all processes are finished and therefore preventing these changes to be wiped out. b161-renaming-question-straight-after-making-it - this is the same problem as b148 b151-quote-marks-can-break-flags - an improvement so that double-quote marks, if used in a text, are displayed correctly in the generated csv file b164-grade-param-type-changed-reverts-to-string-when-value-is-empty - an improvment to identify a number as a number in the grade parameters, so that the type is displayed number and not as string b166-no-template-questions-in-the-list - an improvement to display all existing template questions in the list (when adding a new question from a template) b190-draw-area-width-keeps-changing - an improvement to stop the drawing area changing its width when a warning message is displayed that the writting cannot be interpreted","title":"Release 2023/09/29"},{"location":"releases/relases_2023_24/#release-20230927","text":"b157-new-eval-function-reset-parameters - improvement in the response area panel, when the evaluation function is changed, then the default evaluation function parameters are re-set. b167-teachers-are-sent-to-the-most-recent-instance-on-the-module-homepage-even-when-they-dont-have-access-they-should-be-sent-to-the-most-recent-one-that-they-have-access-to b163-failed-fetching-your-problem-set-displayed-on-every-page-load - an improvement so that the warning message only appears when the fetch returns an error. b149-restrict-access-to-worked-solutions - restrict student access to support materials on set level and on question level. b165-preview-not-the-same-as-student-view - an improvement to displaye pre-text, value and post-text aligned horizontally in the response area student view","title":"Release 2023/09/27"},{"location":"releases/relases_2023_24/#release-20230908","text":"128-feedback-area-does-not-support-latex-rendering - Feedbacks returned by the evaluation function are displayed using latex editor.","title":"Release 2023/09/08"},{"location":"releases/relases_2023_24/#release-20230907","text":"b155-aws-ending-support-for-nodejs-14-in-aws-lambda - A clear-up of an outdated library. b153-pressing-enter-in-a-number-response-adds-new-line-to-the-response - Handle Enter in the response area as a submission of the answer. b139-archive-feature-enhancements - Enancements of module as module instance archiving. b68-cleaning-up-the-editor - many ui enhancements in the question editing page b115-case-color-under-feedback-tab-for-response-area-is-not-functional - The custom colour for feedbacks is now displayed correctly.","title":"Release 2023/09/07"},{"location":"releases/relases_2023_24/#release-20230830","text":"b33-audio-clips - in the content editor, drag-and-drop an audio file, and it will add a sound (e.g. narration) to the content. b145-xetex-pdf - PDFs are now compiled with xelatex, not PDFlatex. b150-extracting-code-from-listener-into-callback-fn - stats for typed expressions now record full submissions only (not keystrokes)","title":"Release 2023/08/30"},{"location":"releases/relases_2023_24/#release-20230822","text":"b147-time-guidance-is-currently-very-small - An adjustment after upgrading one of the libraries which caused the time guidance to shrink. b142-module-clone-enhancements - An enhancemnt to include links to already generated PDF files for all sets in the cloned module instance. b138-503-error - An enhancement to navigate to the teacher module / module instance after clicking Cancel button in the Set Metadata page.","title":"Release 2023/08/22"},{"location":"releases/relases_2023_24/#release-20230818","text":"b114-matrix-input-centering-in-teacher-mode-but-not-in-student-mode - The Check button for matrix questions in the response area panel is now vertically centred in the student view. b140-response-area-pre-text-doubled - The legacy response area pre-text was removed from the student view.","title":"Release 2023/08/18"},{"location":"releases/relases_2023_24/#release-20230816","text":"b127-cloned-instances-are-missing-tutorials-and-worked-solutions - An enhancement of the module cloning functionality to include worked solutions and tutorials. b125-when-publishing-question-update-the-student-view - An enhacement so that when a teacher publishes a question then, this question is visible in the student view without having to refresh the browser or log out and back in again. b83-revisit-set-archiving - This is a technical improvement of the existing functionality to archive sets so that it is done in the same way as archiving of other entities. It has no visible any impacts to a user. b111-archive-module-instance-option - A new feature to allow to archive a module instance. This feature is only available to an administrator. b126-archive-module-option - A new feature to allow to archive a module. This feature is only available to an administrator. b108-error-when-clicking-add-question-button-while-inside-part-content-box - Technical improvement. Upgrade of some libraries (Material UI) to prevent errors caused by issues in the older library version.","title":"Release 2023/08/16"},{"location":"releases/relases_2023_24/#release-20230721","text":"b101-tests-run-from-the-configure-panel-have-the-islatex-parameter-set-to-true - A correction to the settings on the new Expression input (see 555 in 2023/05/26 ). When calling an evaluation function, the is_latex parameter dependends on the type of input (type/draw/scan). b120-PDF-skill-time-info - PDFs now include information on skill level, time estimates, and guidance below the question title and above the question content. b122-multi-year-carry-on - extended UI features referring to module instances (see b82 below).","title":"Release 2023/07/21"},{"location":"releases/relases_2023_24/#release-20230719","text":"b82-multi-year-duplicate-module-instance-and-link-entities - new feature to clone module instances b118-multi-year-tidy-up - multi module feature enhancements such as sorting and filtering module instances on the admin Module page","title":"Release 2023/07/19"},{"location":"releases/relases_2023_24/#release-20230714","text":"b72-multi-year-module-instances-introduction - All Modules now exist as an 'Instance' of a Module, in preparation for allowing multiple Instances. The UI navigation is updated to handle Module Instances. b81-show-preview-of-ra-in-input-type-select - Selecting an Input Type for a Response Area: a searchable preview of Input Types improves the UX: users see the preview while selecting. b91-prevent-multiple-blank-questions - When a question is added, the 'add quesiton' button is temporarily disabled while the application updates. b112-bug-the-tab-navigation-bar-at-the-top-disappears - Editor tabs are pesistent including during keyboard navigation b116-pdf-display-between-ras - PDF generation: for multiple Response Areas in a Part, the order is now always correct","title":"Release 2023/07/14"},{"location":"releases/relases_2023_24/#release-20230622","text":"b39-new-editor-menus - question editor area menus have been converted into tabs. Other improvements have also been made to the editor layout inlcuding switching between teacher and student mode and staying on the same question. b62-add-tabs-to-reponse-area-panel - the Response Area panel is grouped into tabs that aid navigation and encourage a workflow that matches the way teachers think. Other layout improvements were also made within the tabs. b79-input-type-on-published-ra-should-not-be-editable - input type cannot be changed after publishing (see 598 here 2023/06/05 ). b85-incorrect-required-error-message - enhanced validation for number 0 in numeric response area. 588-question-import-export-handle-images - import export includes images; a zip file is used to combine the JSON and the images. 601-parameter-defaults-for-an-eval-function-cpq - improved the appearance of boolean evaluation function parameters. 603-user-docs-updates - user documentation repo renamed from \"documentation\" to \"user_documentation\". 608-link-word-sign-in-to-sign-in-on-homepage - on the home page 'sign in' text is now a link to sign in. 619-mcq-check-button-should-be-vertically-central - the Check button for multi-choice questions in the response area panel is now vertically centred.","title":"Release 2023/06/22"},{"location":"releases/relases_2023_24/#release-20230605","text":"598-published-questions-change-of-approach - questions are now fully editable after publishing. All data from student responses persists through these changes. One exception is that the input type of a response area cannot be changed after publication, because this would change the format of the data that is recorded (you can, however, delete the response area and create a new one instead). Other new features: duplicate a Response Area; reorder Response Areas using drag and drop (in a similar way as reordering Parts). 613-enable-publish-whole-set - see 606 below ( 2023/05/26 ). The 'Publish Whole Set' button is now enabled. 614-error-with-stats-on-dev - ensures statistics still work with the new handwriting input (see 555 below).","title":"Release 2023/06/05"},{"location":"releases/relases_2023_24/#release-20230526","text":"555-handwriting-response-area-upgrades - A new version of the Expression input type is in use. Input by handwriting onscreen or with scanned images is an option for teachers to make available to students (default: off). Also, regardless of the input mode (type/draw/scan) the live preview now gives 'pre-submission' feedback on whether the response can be interpreted, and the Check button is only available if interpretation is successful. 606-publish-whole-set-causing-stats-to-disappear - The 'Publish Whole Set' button in Teacher Edit mode has been disabled because it was causing data to become unlikned in the DB, giving the effect of data like number of completed parts 'disappearing'. Existing data has now been relinked and is all visible to users. The feature that caused the problem has been disabled while we prepare a replacement to be pushed shortly. 612-whole-part-marked-as-done-with-more-response-areas - Student functionality. If a question part has multiple Response Areas, the logic is now that only if all Response Areas are correctly answered will the 'Mark as done' feature be automatically checked. Previously only one correct answer was required to trigger this effect. 585-question-simple-import-and-export - Teacher functionality. The import/export functionality has been enhanced so that it Response Area parameters, cases, and tests are now all included.","title":"Release 2023/05/26"},{"location":"releases/relases_2023_24/#release-20230321","text":"571-simple-teacher-comment-feed - Teacher functionality. New 'Activity feed' (formerly 'Flagged Questions') contains flagged questions and comments. The teacher can filter the table to see e.g. only flags or only comments. The teacher can also sort the table e.g. to see the new activities first. 569-numeric-input-strips-out-strings-that-may-have-meaning - Technical dept. For the Response Area input type 'Number', additional validation added; if the input contains a non-numeric value then a relevant error message is displayed to the user (this is linked to the 573-response-area-validation-specific-errors below). 573-response-area-validation-specific-errors - Teacher and student functionality. More specific error messages are displayed when the user inserts a value in an incorrect format (e.g. a non-numeric value into the input that expects a number). 582-empty-structured-tutorial-shouldnt-display - Technical debt. When a tutorial is deleted, it is not displayed at all to students (as opposed to being blank). 585-question-simple-import-and-export - Teacher functionality. Export a question to a file in JSON format. Import a question from a file in JSON format. Images are not imported/exported - these need to be handled manually until a new feature is ready. This feature opens the door to file imports if content can be converted into the correct format. 586-question-import-add-schema-validation - Teacher functionality. When importing a question from a file, the data structure and format is validated. If the validation fails then relevant error messages displayed to the user.","title":"Release 2023/03/21"},{"location":"releases/relases_2023_24/#release-20230306","text":"566-pdf-error-identification - Teacher functionality. When a PDF fails to compile, the location of the error source is given in more detail, e.g. 'Q2(c)'. 576-orderedsetids-throws-error-in-main - Technical. When loading sets in a module on the teacher side, an error no longer appears in the console. 522-adding-teacher-when-creating-module-inadequate-error-message - Admin functionality. When adding a new module, a teacher can be added simultaneously. If the proposed teacher is not already registered as a teacher, then they are now automatically created as a teacher and a confirmation message is displayed. 524-remove-teacher-from-list - Admin functionality. Remove a teacher from the list of teachers. If the teacher is still a teacher on a module, then display a modal confirming which modules the teacher will be removed from. If the user confirms, the teacher is removed from all the modules and then they are deleted from the list of teachers. 572-comment-upvote-tweeks - Teacher and Student functionality. Right margin on the comments tweaked so that the sorting feature and 'post' button are not too far away from each other. 483-show-all-button - Teacher functionality. The Show All feature is now enabled in the question preview mode. 520-default-to-an-eval-function-after-selecting-the-response-area - Teacher functionality. In the Response area edit panel, automatically select a default eval function as follows (it can be edited by the teacher if necessary). The default selections are: Response area Default evaluation function MCQ arrayEqual NUMERIC isSimilar Expression and Text symbolicEqual Table and Matrix arraySymbolicEqual NUMERIC_UNITS comparePhysicalQuantities","title":"Release 2023/03/06"},{"location":"releases/relases_2023_24/#release-20230210","text":"560-comment-feature-tweaks - UI improvements to the comments feature. 550-comment-upvotes - users can upvote comments by clicking on the heart. Sorting by upvotes is default 546-always-test-a-response-area-when-saving - [For teachers only] this is an invisible feature that automatically tests a response area, when closing the editing panel, to check that the correct answer is accepted as correct. A failure to pass this test will show an error and not save the response area until fixed. The reason for this feature is to catch things like empty cells in the teacher answer which, e.g. for a matrix, would make marking student answers impossible. If such errors were allowed to pass, then students would experience errors when using the response area - hence it cannot be allowed. The auto-test feature is not enabled for all response areas as some are not compatible - the option can be enabled/disabled for each response area by admins. 568-numeric-input-expects-string - upgrade to the numeric input type when dealing with string inputs.","title":"Release 2023/02/10"},{"location":"releases/status/","text":"Lambda Feedback is a cloud-native application that is available with full service 24/7. This page contains information about any known incidents where service was interrupted. The page begain in November 2024 following a significant incident. The purpose is to be informative, transparent, and ensure lessons are always learned so that service improves over time. 2025 March 28th: access blocked within a particular organisation's WiFi The URL lambdafeedback.com is served by a content delivery network (CDN), that was blocked by a particular organisation's WiFi. During this period, users on that WiFi couldn't access the site. Timeline 2025/03/27 09:17 GMT We received a report that some users can't load the website at all. We announced this on the home page. 2025/03/27 10:37 GMT The issues were identified as isolated to Imperial WiFi. Update on home page including advice to use a different WiFi (e.g. hotspot, or other location), or a different DNS . Ticket with ICT and number shared with users. There was a response within minutes requesting more information, but no further response until the next morning. 2025/03/28 09:22 GMT Imperial ICT acknowledged that their security software had blocked the whole CDN. Lambda Feedback was specifically unblocked and full service was resumed. We have asked for a broader unblocking. 2025/03/28 09:32 GMT Authentication services were down (no logins) but resumed within a few minutes and service remained good. We'll investigate and report. 2025/03/28 13:47 GMT Imperial ICT confirmed a wider unblocking. 2025/03/28 14:45 GMT Incident closed. Lessons learned: Networks that provide internet access can block or incorrectly redirect users when trying to access Lambda Feedback. The block can be specific to one site or, as in this case, it can block a whole content delivery network (CDN) that serves many sites. Affected users will never reach the site, and we will have no way to know that they are failing to access. Recommended Actions Alert the ICT departments of key user groups to this problem, and ensure in advance that the relevent CDNs are not blocked. Create a backup plan for if the URL or the CDN are not correctly routed Monitor traffic to identify drops in usage that may indicate an issue (we already do this, but the drop was not significant enough in this case to be evident) Monitor the Lambda Feedback email address (this was effective in this case and we were in touch with users) Create a live chat with 'power users' for better communication during these incidents. A chat was started during this incident and will continue to be used Consider local WiFi/networks as a possible cause for blocking site access, and test for this cause when troubleshooting access issues Investigate the cause of the short unavailability of logins at 09:33 GMT on 28th March 2025. 2025 February 13th: Incident related to new teacher roles feature During this period teachers were not able to access teacher pages. Timeline 7:20am deployed a set of new features, including teacher roles 9:47am issue reported - users with the TEACHER role were unable to access teacher pages. 10:27am Issue reproduced on staging 10:39am Issue fixed on staging; release to production initiated 10:49am Confirmation that the fix worked in production Lessons learned: Features that behave differently for users with the TEACHER role (compared to users with the ADMIN role) must be tested by a user with the TEACHER role who is not a super-admin. This is because super-admins automatically revert from TEACHER back to ADMIN. The same applies to features that behave differently for users with the STUDENT role. 2024 mid-December to 2025 January 2nd: Imperial College security measures affected logins During this period the application was 100% available and operational. We were alerted on 2nd January that some users were not given permission by Imperial College London Microsoft 365 to login to third party applications. This was a a severe incident as it affected access to the application for some users. Timeline 11:19 GMT We discovered the issue, escalated to Imperial College ICT and put a notice on our home page. 16:51 GMT The application was approved by Imperial College ICT, which resolved the problem. Monitoring immediately after and the following morning showed that two known users who had issues no longer have issues. Other users continued to login before, during, and after the incident. No further reports of issues received. Case closed. Analysis Lambda Feedback has been using Imperial College Microsoft 365 logins (Entra / Azure Active directory) since July 2021 without issues until this incident. ICT reported on 2nd January: \"due to heightened security arrangements put in place in mid December, ICT prevented unauthorised App registrations as these can pose security threats through unwarranted access to user information and the access to other systems. We have now granted access for the Lambda feedback app.\" Although the app was 'registered' on Entra/AAD in July 2021 within the Imperial College tenant, the permissions required for authentication (read the profile of the user) were granted by the user the first time they logged on. The changes imposed by ICT withdrew the privilege from users to grant such permissions, hence the inability to login. Permissions can be bulk granted by admins in the tenant, but this had not been done. On 2nd January, those permissions were given by admin and the problem was resolved. Due to the holiday season, this problem only surfaced on 2nd January, despite the cause being in 'mid-December'. Lessons learned: When an organisation uses single sign-on (SSO), ensure that the Lambda Feedback application permissions are granted by the organisation admin, even if the service initially works without those permissions being granted by admins. This action will protect against possible future issues, especially like the incident reported here. 2024 November 4-8th: Incident related to new logins Deployment of a new authentication process caused service interruptions. Login was not possible at certain times, affecting all users. Effects were between Monday 4th and Friday 8th November, all related to release b506. Timeline Monday 4th November: 7:30am deployed new login system. Initially appeared OK but concerns over server loading. 8:15am began reverting to the old system to avoid any unnecessary risks. Revert took longer than rehearsed. 8:55am system live and operational in its reverted form. No issues hereafter. The issue was identified and fixed ready to push with the new login system early the next day. Tuesday 5th November 6:30am deployed new login system with update to avoid errors found on previous push. Systems fine. 9:27am first report of login issues with ipads. 9:37am issue with Safari and iOS identified. Message update on the app. 10:45am revert complete after efforts to implement a fix failed. The issue was related to blocked thrid-party cookies being on some browsers. A fix was developed to push the next day. Wednesday 6th November 7:08am deployed new login system with updated auth URLs. Testing on all device types OK. 12:00pm Two users reported issues via email. Investigations continued including emails with users. Thursday 7th November Throughout the day the problem was analysed and we found that 12 users had logged in during a brief configuration error, and as a result were not stored correctly in the new auth DB, and this caused problems. All users access was restored and they were contacted with information and an apology. Friday 8th November 10:31am The app became intermittent. This was traced to an updated in the logging. Resource was increased which partially solved the problem. A deployment was pushed to solve the problem. 11:00am (approx) the issues were fully solved. Lessons learned: When practicing a revert before a deployment, make sure the exact same revert process is used in production (e.g. don't go via CircleCI if rehearsals were via GitHub). Lesson from Monday morning following a delayed revert process. Test changes on all device types. Lesson from Tuesday following issues with Apple devices. If systems are used temporarily in production, check for adverse affects on any users who used both systems. Lesson from Wednesday/Thursday following issues for a small number of users. Ensure errors due to trivial issues, like changes to logs or failed schema in the DB, do not cause the whole app to go down. Lesson from Monday and Friday. Ensure adequate logging systems are in place (these have been improved already), and that a clear process is in place for users to contact the team (use lambdafeedback@imperial.ac.uk, or support@lambdafeedback.com which will redirect there) Ensure important messages to users can be seen, e.g. even if they can't log in. Keep teachers informed promptly and with transparent info. Generally this protocol was followed during this incident. Conclusion: The new login system offers significant benefits, including allowing logins with a range of systems such as Google or personally created accounts. The app is now available to essentially any users. The deployment involved errors which caused access issues for over an hour on more than one occasion in the same week. Most of the outages were preventable with improved testing The mitigation attempts were successful in reducing the severity of the incident Mitigation could have been better. New logs, lower risk tolerance, and better reversion are needed in future Overall the level of outage is not considered acceptable and in future should be avoided","title":"Status"},{"location":"releases/status/#2025-march-28th-access-blocked-within-a-particular-organisations-wifi","text":"The URL lambdafeedback.com is served by a content delivery network (CDN), that was blocked by a particular organisation's WiFi. During this period, users on that WiFi couldn't access the site.","title":"2025 March 28th: access blocked within a particular organisation's WiFi"},{"location":"releases/status/#timeline","text":"2025/03/27 09:17 GMT We received a report that some users can't load the website at all. We announced this on the home page. 2025/03/27 10:37 GMT The issues were identified as isolated to Imperial WiFi. Update on home page including advice to use a different WiFi (e.g. hotspot, or other location), or a different DNS . Ticket with ICT and number shared with users. There was a response within minutes requesting more information, but no further response until the next morning. 2025/03/28 09:22 GMT Imperial ICT acknowledged that their security software had blocked the whole CDN. Lambda Feedback was specifically unblocked and full service was resumed. We have asked for a broader unblocking. 2025/03/28 09:32 GMT Authentication services were down (no logins) but resumed within a few minutes and service remained good. We'll investigate and report. 2025/03/28 13:47 GMT Imperial ICT confirmed a wider unblocking. 2025/03/28 14:45 GMT Incident closed.","title":"Timeline"},{"location":"releases/status/#lessons-learned","text":"Networks that provide internet access can block or incorrectly redirect users when trying to access Lambda Feedback. The block can be specific to one site or, as in this case, it can block a whole content delivery network (CDN) that serves many sites. Affected users will never reach the site, and we will have no way to know that they are failing to access.","title":"Lessons learned:"},{"location":"releases/status/#recommended-actions","text":"Alert the ICT departments of key user groups to this problem, and ensure in advance that the relevent CDNs are not blocked. Create a backup plan for if the URL or the CDN are not correctly routed Monitor traffic to identify drops in usage that may indicate an issue (we already do this, but the drop was not significant enough in this case to be evident) Monitor the Lambda Feedback email address (this was effective in this case and we were in touch with users) Create a live chat with 'power users' for better communication during these incidents. A chat was started during this incident and will continue to be used Consider local WiFi/networks as a possible cause for blocking site access, and test for this cause when troubleshooting access issues Investigate the cause of the short unavailability of logins at 09:33 GMT on 28th March 2025.","title":"Recommended Actions"},{"location":"releases/status/#2025-february-13th-incident-related-to-new-teacher-roles-feature","text":"During this period teachers were not able to access teacher pages.","title":"2025 February 13th: Incident related to new teacher roles feature"},{"location":"releases/status/#timeline_1","text":"7:20am deployed a set of new features, including teacher roles 9:47am issue reported - users with the TEACHER role were unable to access teacher pages. 10:27am Issue reproduced on staging 10:39am Issue fixed on staging; release to production initiated 10:49am Confirmation that the fix worked in production","title":"Timeline"},{"location":"releases/status/#lessons-learned_1","text":"Features that behave differently for users with the TEACHER role (compared to users with the ADMIN role) must be tested by a user with the TEACHER role who is not a super-admin. This is because super-admins automatically revert from TEACHER back to ADMIN. The same applies to features that behave differently for users with the STUDENT role.","title":"Lessons learned:"},{"location":"releases/status/#2024-mid-december-to-2025-january-2nd-imperial-college-security-measures-affected-logins","text":"During this period the application was 100% available and operational. We were alerted on 2nd January that some users were not given permission by Imperial College London Microsoft 365 to login to third party applications. This was a a severe incident as it affected access to the application for some users.","title":"2024 mid-December to 2025 January 2nd: Imperial College security measures affected logins"},{"location":"releases/status/#timeline_2","text":"11:19 GMT We discovered the issue, escalated to Imperial College ICT and put a notice on our home page. 16:51 GMT The application was approved by Imperial College ICT, which resolved the problem. Monitoring immediately after and the following morning showed that two known users who had issues no longer have issues. Other users continued to login before, during, and after the incident. No further reports of issues received. Case closed.","title":"Timeline"},{"location":"releases/status/#analysis","text":"Lambda Feedback has been using Imperial College Microsoft 365 logins (Entra / Azure Active directory) since July 2021 without issues until this incident. ICT reported on 2nd January: \"due to heightened security arrangements put in place in mid December, ICT prevented unauthorised App registrations as these can pose security threats through unwarranted access to user information and the access to other systems. We have now granted access for the Lambda feedback app.\" Although the app was 'registered' on Entra/AAD in July 2021 within the Imperial College tenant, the permissions required for authentication (read the profile of the user) were granted by the user the first time they logged on. The changes imposed by ICT withdrew the privilege from users to grant such permissions, hence the inability to login. Permissions can be bulk granted by admins in the tenant, but this had not been done. On 2nd January, those permissions were given by admin and the problem was resolved. Due to the holiday season, this problem only surfaced on 2nd January, despite the cause being in 'mid-December'.","title":"Analysis"},{"location":"releases/status/#lessons-learned_2","text":"When an organisation uses single sign-on (SSO), ensure that the Lambda Feedback application permissions are granted by the organisation admin, even if the service initially works without those permissions being granted by admins. This action will protect against possible future issues, especially like the incident reported here.","title":"Lessons learned:"},{"location":"releases/status/#2024-november-4-8th-incident-related-to-new-logins","text":"Deployment of a new authentication process caused service interruptions. Login was not possible at certain times, affecting all users. Effects were between Monday 4th and Friday 8th November, all related to release b506.","title":"2024 November 4-8th: Incident related to new logins"},{"location":"releases/status/#timeline_3","text":"Monday 4th November: 7:30am deployed new login system. Initially appeared OK but concerns over server loading. 8:15am began reverting to the old system to avoid any unnecessary risks. Revert took longer than rehearsed. 8:55am system live and operational in its reverted form. No issues hereafter. The issue was identified and fixed ready to push with the new login system early the next day. Tuesday 5th November 6:30am deployed new login system with update to avoid errors found on previous push. Systems fine. 9:27am first report of login issues with ipads. 9:37am issue with Safari and iOS identified. Message update on the app. 10:45am revert complete after efforts to implement a fix failed. The issue was related to blocked thrid-party cookies being on some browsers. A fix was developed to push the next day. Wednesday 6th November 7:08am deployed new login system with updated auth URLs. Testing on all device types OK. 12:00pm Two users reported issues via email. Investigations continued including emails with users. Thursday 7th November Throughout the day the problem was analysed and we found that 12 users had logged in during a brief configuration error, and as a result were not stored correctly in the new auth DB, and this caused problems. All users access was restored and they were contacted with information and an apology. Friday 8th November 10:31am The app became intermittent. This was traced to an updated in the logging. Resource was increased which partially solved the problem. A deployment was pushed to solve the problem. 11:00am (approx) the issues were fully solved.","title":"Timeline"},{"location":"releases/status/#lessons-learned_3","text":"When practicing a revert before a deployment, make sure the exact same revert process is used in production (e.g. don't go via CircleCI if rehearsals were via GitHub). Lesson from Monday morning following a delayed revert process. Test changes on all device types. Lesson from Tuesday following issues with Apple devices. If systems are used temporarily in production, check for adverse affects on any users who used both systems. Lesson from Wednesday/Thursday following issues for a small number of users. Ensure errors due to trivial issues, like changes to logs or failed schema in the DB, do not cause the whole app to go down. Lesson from Monday and Friday. Ensure adequate logging systems are in place (these have been improved already), and that a clear process is in place for users to contact the team (use lambdafeedback@imperial.ac.uk, or support@lambdafeedback.com which will redirect there) Ensure important messages to users can be seen, e.g. even if they can't log in. Keep teachers informed promptly and with transparent info. Generally this protocol was followed during this incident. Conclusion: The new login system offers significant benefits, including allowing logins with a range of systems such as Google or personally created accounts. The app is now available to essentially any users. The deployment involved errors which caused access issues for over an hour on more than one occasion in the same week. Most of the outages were preventable with improved testing The mitigation attempts were successful in reducing the severity of the incident Mitigation could have been better. New logs, lower risk tolerance, and better reversion are needed in future Overall the level of outage is not considered acceptable and in future should be avoided","title":"Lessons learned:"},{"location":"student/","text":"Student/User Documentation Question structure {: style=\"width:600px\"} The image above shows an example question, with numbers to indicate: Breadcrumbs showing location Name of the Problem Set PDF version (link) Names of the questions in the Set, indicating which question is open Question number and name Guidance (expands on hover) Master content (always visible to student) Part selection (tabs) Part content (only visible when relevant part is open - (a),(b), etc.) Response area , where student responses are entered and feedback is given Feedback to the teacher (currently in flux regarding the design - 02/07/25) Access to content 'below the line' providing extra support. Workspace - Opens tab with canvas and ai chatbot Comments Below the line {: style=\"height:50px\"} Structured tutorial - teachers use this in different ways. It is generally a way to provide scaffolding if you're struggling. Final Answer - warning, don't ever look at the answer before you make your own genuine attempt at answering the question. Worked solutions - warning, don't ever look at the solutions before you make your own attempt. If necessary, look at the first line and reveal a step at a time.","title":"Student/User Documentation"},{"location":"student/#studentuser-documentation","text":"","title":"Student/User Documentation"},{"location":"student/#question-structure","text":"{: style=\"width:600px\"} The image above shows an example question, with numbers to indicate: Breadcrumbs showing location Name of the Problem Set PDF version (link) Names of the questions in the Set, indicating which question is open Question number and name Guidance (expands on hover) Master content (always visible to student) Part selection (tabs) Part content (only visible when relevant part is open - (a),(b), etc.) Response area , where student responses are entered and feedback is given Feedback to the teacher (currently in flux regarding the design - 02/07/25) Access to content 'below the line' providing extra support. Workspace - Opens tab with canvas and ai chatbot Comments","title":"Question structure"},{"location":"student/#below-the-line","text":"{: style=\"height:50px\"} Structured tutorial - teachers use this in different ways. It is generally a way to provide scaffolding if you're struggling. Final Answer - warning, don't ever look at the answer before you make your own genuine attempt at answering the question. Worked solutions - warning, don't ever look at the solutions before you make your own attempt. If necessary, look at the first line and reveal a step at a time.","title":"Below the line"},{"location":"student/answering_questions/","text":"Answering Questions Overview The main view of a question is divided into two parts. The top half contains content that is relevant to the whole question, and the bottom half contains content for each individual part. Additionally, the part content may include one or more response areas . When you think you have answered the question, enter your answer into the response area, if it exists, and press the \"Check\" button to check your work. If you are correct, the question will be marked as \"done\". If there is no response area (e.g. for a \"show that...\" question), you can manually mark the question as done using the box at the bottom right. Answers and Worked Solutions If you are stuck, you can view worked solutions using the \"Worked Solutions\" option on the bottom ribbon. The steps in the solution are revealed step-by-step, so you should avoid the temptation to look at the whole solution at once, and try to complete as much as possible independently. You can also view the answer to each question using the \"Final Answer\" option on the bottom ribbon. This contains the answer only, with no intermediate results or working. It is important that you always make your own genuine attempt to solve each problem before resorting to the final answers or the worked solutions. To help encourage this, a warning will appear if you try to access help before a question-specific time limit has elapsed.","title":"Answering Questions"},{"location":"student/answering_questions/#answering-questions","text":"","title":"Answering Questions"},{"location":"student/answering_questions/#overview","text":"The main view of a question is divided into two parts. The top half contains content that is relevant to the whole question, and the bottom half contains content for each individual part. Additionally, the part content may include one or more response areas . When you think you have answered the question, enter your answer into the response area, if it exists, and press the \"Check\" button to check your work. If you are correct, the question will be marked as \"done\". If there is no response area (e.g. for a \"show that...\" question), you can manually mark the question as done using the box at the bottom right.","title":"Overview"},{"location":"student/answering_questions/#answers-and-worked-solutions","text":"If you are stuck, you can view worked solutions using the \"Worked Solutions\" option on the bottom ribbon. The steps in the solution are revealed step-by-step, so you should avoid the temptation to look at the whole solution at once, and try to complete as much as possible independently. You can also view the answer to each question using the \"Final Answer\" option on the bottom ribbon. This contains the answer only, with no intermediate results or working. It is important that you always make your own genuine attempt to solve each problem before resorting to the final answers or the worked solutions. To help encourage this, a warning will appear if you try to access help before a question-specific time limit has elapsed.","title":"Answers and Worked Solutions"},{"location":"student/faq/","text":"Frequently Asked Questions Why can't I find the module I am looking for? Access to each module is provided by the teacher owning the module. If you cannot find the module you are looking for, please contact your teacher.","title":"FAQ"},{"location":"student/faq/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"student/faq/#why-cant-i-find-the-module-i-am-looking-for","text":"Access to each module is provided by the teacher owning the module. If you cannot find the module you are looking for, please contact your teacher.","title":"Why can't I find the module I am looking for?"},{"location":"student/getting_started_student/","text":"Get started as a student using Lambda Feedback Accessing content Log in Use your Imperial Microsoft account to sign in and access your modules. Once you sign in, you should see a list of the modules you are enrolled in: You can see the current progress of each module in this view. Select a module Click on the module name to select it. You should now see a list of available problem sets. If none are available, your teacher may not have assigned any yet. You can see the current progress of each problem set in this view. Select a problem set Select the problem set you wish to work on, and you should see a list of questions on the left-hand side, with the selected question on the right. If a question has sub-parts, you can select them on the right. Accessing the PDF version of a problem set If you prefer to work on a PDF version of the problem set, you can generate a PDF by clicking the 'pdf' button underneath the problem set title. Answering questions You can make progress on the problem by entering correct answers or clicking the 'Mark as done' button on the bottom right of each question page. This can be useful to track progress if working on the PDF version, or for questions which do not have a response box, e.g., show that questions. See the Answering Questions page for more help with answering questions. Using the Workspace The Workspace provides you with various functionalities to assist you during your learning process: 1. #### Canvas: A pane where you can write down your thought process and notes for the previewed question (handwriting, sticky notes & text). Chat: A chat interface connecting you with helpful AI Chatbots to discuss any questions you have on the current topic you are working on. Your edits and progress in the Workspace are saved per each Question you preview. So, you will be able to view your old edits for the Question you are currently on.","title":"Getting Started"},{"location":"student/getting_started_student/#get-started-as-a-student-using-lambda-feedback","text":"","title":"Get started as a student using Lambda Feedback"},{"location":"student/getting_started_student/#accessing-content","text":"","title":"Accessing content"},{"location":"student/getting_started_student/#log-in","text":"Use your Imperial Microsoft account to sign in and access your modules. Once you sign in, you should see a list of the modules you are enrolled in: You can see the current progress of each module in this view.","title":"Log in"},{"location":"student/getting_started_student/#select-a-module","text":"Click on the module name to select it. You should now see a list of available problem sets. If none are available, your teacher may not have assigned any yet. You can see the current progress of each problem set in this view.","title":"Select a module"},{"location":"student/getting_started_student/#select-a-problem-set","text":"Select the problem set you wish to work on, and you should see a list of questions on the left-hand side, with the selected question on the right. If a question has sub-parts, you can select them on the right.","title":"Select a problem set"},{"location":"student/getting_started_student/#accessing-the-pdf-version-of-a-problem-set","text":"If you prefer to work on a PDF version of the problem set, you can generate a PDF by clicking the 'pdf' button underneath the problem set title.","title":"Accessing the PDF version of a problem set"},{"location":"student/getting_started_student/#answering-questions","text":"You can make progress on the problem by entering correct answers or clicking the 'Mark as done' button on the bottom right of each question page. This can be useful to track progress if working on the PDF version, or for questions which do not have a response box, e.g., show that questions. See the Answering Questions page for more help with answering questions.","title":"Answering questions"},{"location":"student/getting_started_student/#using-the-workspace","text":"The Workspace provides you with various functionalities to assist you during your learning process: 1. #### Canvas: A pane where you can write down your thought process and notes for the previewed question (handwriting, sticky notes & text).","title":"Using the Workspace"},{"location":"student/getting_started_student/#chat","text":"A chat interface connecting you with helpful AI Chatbots to discuss any questions you have on the current topic you are working on. Your edits and progress in the Workspace are saved per each Question you preview. So, you will be able to view your old edits for the Question you are currently on.","title":"Chat:"},{"location":"student/lexdown_student/","text":"Text Editing The lexdown is widely used in Lambda Feedback wherever rich text input is required. On the student interface, it is used to add personal solution notes, and to write comments. It accepts: Standard Markdown $\\LaTeX$ Images (paste or drag and drop) Videos (paste a URL) LaTeX LaTeX is a typesetting system widely used in academia to produce well-formatted documents. It is mostly used in Lambda Feedback for its capability to render complex mathematical expressions clearly and accurately. As an example, the following LaTeX code: \\int_V \\nabla \\cdot \\vec{f} \\mathrm{d}V = \\oint_S \\vec{f} \\cdot \\hat{n} \\mathrm{d}S Produces the following output: [ \\int_V \\nabla \\cdot \\vec{f} \\mathrm{d}V = \\oint_S \\vec{f} \\cdot \\hat{n} \\mathrm{d}S ] In the Milkdown editor, anything surrounded by dollar signs (like $ x^2 $ ) will be interpreted as LaTeX. Only the subset supported by KaTeX , which includes most common LaTeX functions, can be used. LaTeX equations in 5 minutes Numbers and letters Numbers and Latin letters can be entered as you would expect: 1, 2, 3, 3.14159, -2.5, x, y, z [ 1, 2, 3, 3.14159, -2.5, x, y, z ] Subscripts can be written with _ and superscripts can be written with ^ , for example in x^2 ($x^2$) or x_2 ($x_2$). Only the first character or command after a _ or ^ will be taken. To subscript or superscript multiple characters, they can be grouped in curly braces, like this: V_{ab} ($V_{ab}$). Basic functions Functions in LaTeX start with a backslash \\ . Some common functions include Greek letters: \\pi ($\\pi$) \\delta ($\\delta$) \\Delta ($\\Delta$) etc. Equalities: \\approx ($\\approx$) \\ne ($\\ne$) \\gt ($\\gt$) etc. Symbols/operators: - \\int ($\\int$) - \\sum ($\\sum$) - \\sin ($\\sin$) - \\ln ($\\ln$) - etc. Functions with arguments Some functions take arguments. Arguments are given between curly braces {} . Some commonly functions with arguments are: \\sqrt{x} ($\\sqrt{x}$). This places a square root sign around the argument. \\frac{x}{y} ($\\frac{x}{y}$). This command takes two arguments, and produces a fraction with the first argument in the numerator and the second on the denominator. Diacritics: \\vec{x} ($\\vec{x}$). \\dot{x} ($\\dot{x}$). \\hat{x} ($\\hat{x}$). etc. \\mathrm{x} ($\\mathrm{x}$). This formats the argument as regular, upright text, rather than italics. Should be used for units and operators (e.g. $\\frac{\\mathrm{d}y}{\\mathrm{d}x}$). Nesting Functions can be nested arbitrarily. For example, a square root may contain a fraction, which may contain another square root: \\sqrt{ \\frac{-b \\pm \\sqrt{b^2 - 4ac }}{2a} } [\\sqrt{ \\frac{-b \\pm \\sqrt{b^2 - 4ac }}{2a} }] Going further If you are unsure of the correct function to use to produce the desired result, there is a list of all supported KaTeX functions here .","title":"Text Editing"},{"location":"student/lexdown_student/#text-editing","text":"The lexdown is widely used in Lambda Feedback wherever rich text input is required. On the student interface, it is used to add personal solution notes, and to write comments. It accepts: Standard Markdown $\\LaTeX$ Images (paste or drag and drop) Videos (paste a URL)","title":"Text Editing"},{"location":"student/lexdown_student/#latex","text":"LaTeX is a typesetting system widely used in academia to produce well-formatted documents. It is mostly used in Lambda Feedback for its capability to render complex mathematical expressions clearly and accurately. As an example, the following LaTeX code: \\int_V \\nabla \\cdot \\vec{f} \\mathrm{d}V = \\oint_S \\vec{f} \\cdot \\hat{n} \\mathrm{d}S Produces the following output: [ \\int_V \\nabla \\cdot \\vec{f} \\mathrm{d}V = \\oint_S \\vec{f} \\cdot \\hat{n} \\mathrm{d}S ] In the Milkdown editor, anything surrounded by dollar signs (like $ x^2 $ ) will be interpreted as LaTeX. Only the subset supported by KaTeX , which includes most common LaTeX functions, can be used.","title":"LaTeX"},{"location":"student/lexdown_student/#latex-equations-in-5-minutes","text":"","title":"LaTeX equations in 5 minutes"},{"location":"student/lexdown_student/#numbers-and-letters","text":"Numbers and Latin letters can be entered as you would expect: 1, 2, 3, 3.14159, -2.5, x, y, z [ 1, 2, 3, 3.14159, -2.5, x, y, z ] Subscripts can be written with _ and superscripts can be written with ^ , for example in x^2 ($x^2$) or x_2 ($x_2$). Only the first character or command after a _ or ^ will be taken. To subscript or superscript multiple characters, they can be grouped in curly braces, like this: V_{ab} ($V_{ab}$).","title":"Numbers and letters"},{"location":"student/lexdown_student/#basic-functions","text":"Functions in LaTeX start with a backslash \\ . Some common functions include Greek letters: \\pi ($\\pi$) \\delta ($\\delta$) \\Delta ($\\Delta$) etc. Equalities: \\approx ($\\approx$) \\ne ($\\ne$) \\gt ($\\gt$) etc. Symbols/operators: - \\int ($\\int$) - \\sum ($\\sum$) - \\sin ($\\sin$) - \\ln ($\\ln$) - etc.","title":"Basic functions"},{"location":"student/lexdown_student/#functions-with-arguments","text":"Some functions take arguments. Arguments are given between curly braces {} . Some commonly functions with arguments are: \\sqrt{x} ($\\sqrt{x}$). This places a square root sign around the argument. \\frac{x}{y} ($\\frac{x}{y}$). This command takes two arguments, and produces a fraction with the first argument in the numerator and the second on the denominator. Diacritics: \\vec{x} ($\\vec{x}$). \\dot{x} ($\\dot{x}$). \\hat{x} ($\\hat{x}$). etc. \\mathrm{x} ($\\mathrm{x}$). This formats the argument as regular, upright text, rather than italics. Should be used for units and operators (e.g. $\\frac{\\mathrm{d}y}{\\mathrm{d}x}$).","title":"Functions with arguments"},{"location":"student/lexdown_student/#nesting","text":"Functions can be nested arbitrarily. For example, a square root may contain a fraction, which may contain another square root: \\sqrt{ \\frac{-b \\pm \\sqrt{b^2 - 4ac }}{2a} } [\\sqrt{ \\frac{-b \\pm \\sqrt{b^2 - 4ac }}{2a} }]","title":"Nesting"},{"location":"student/lexdown_student/#going-further","text":"If you are unsure of the correct function to use to produce the desired result, there is a list of all supported KaTeX functions here .","title":"Going further"},{"location":"student/response_areas/","text":"Response Areas Numerical answers This type of response area expects a numerical answer. Usually, a tolerance is allowed, so you will still be marked as correct if your response differs from the answer by a small amount. Some questions will also require you to enter the units of the answer. In this case, any form of the same unit, with any SI prefix, should be accepted. For example, if the answer to a question is 10 MPa , 0.01 GPa and 10 MNm^-2 should both be marked correct. Entering mathematical expressions Entering mathematical expressions on Lambda is very similar to if you were doing it in Matlab, for example. Examples Expression Lambda Feedback input $x^2 - x - 2$ x^2 - x - 2 $\\sqrt{\\sin(x) + \\frac{\\pi}{2}}$ sqrt(sin(x) + pi/2) $e^{\\frac{\\pi x}{2} + 1} exp((pi*x)/2 + 1) Reference Operator Symbol Lambda Feedback input Addition $a + b$ a+b Subtraction $a - b$ a-b Multiplication $a \\times b$ a*b Division $\\frac{a}{b}$ a/b Exponentiation $a^b$ a^b Square root $\\sqrt{a}$ sqrt(a) Common elementary functions such as $\\sin$, $\\cos$, $\\arcsin$, $\\ln$ etc. are also supported.","title":"Response Areas"},{"location":"student/response_areas/#response-areas","text":"","title":"Response Areas"},{"location":"student/response_areas/#numerical-answers","text":"This type of response area expects a numerical answer. Usually, a tolerance is allowed, so you will still be marked as correct if your response differs from the answer by a small amount. Some questions will also require you to enter the units of the answer. In this case, any form of the same unit, with any SI prefix, should be accepted. For example, if the answer to a question is 10 MPa , 0.01 GPa and 10 MNm^-2 should both be marked correct.","title":"Numerical answers"},{"location":"student/response_areas/#entering-mathematical-expressions","text":"Entering mathematical expressions on Lambda is very similar to if you were doing it in Matlab, for example.","title":"Entering mathematical expressions"},{"location":"student/response_areas/#examples","text":"Expression Lambda Feedback input $x^2 - x - 2$ x^2 - x - 2 $\\sqrt{\\sin(x) + \\frac{\\pi}{2}}$ sqrt(sin(x) + pi/2) $e^{\\frac{\\pi x}{2} + 1} exp((pi*x)/2 + 1)","title":"Examples"},{"location":"student/response_areas/#reference","text":"Operator Symbol Lambda Feedback input Addition $a + b$ a+b Subtraction $a - b$ a-b Multiplication $a \\times b$ a*b Division $\\frac{a}{b}$ a/b Exponentiation $a^b$ a^b Square root $\\sqrt{a}$ sqrt(a) Common elementary functions such as $\\sin$, $\\cos$, $\\arcsin$, $\\ln$ etc. are also supported.","title":"Reference"},{"location":"teacher/","text":"Teacher and Content-author Documentation Welcome to teachers! We've put a lot of love into the teacher experience. Do give us feedback if you need anything. For now, try Getting Started ...","title":"Teacher and Content-author Documentation"},{"location":"teacher/#teacher-and-content-author-documentation","text":"Welcome to teachers! We've put a lot of love into the teacher experience. Do give us feedback if you need anything. For now, try Getting Started ...","title":"Teacher and Content-author Documentation"},{"location":"teacher/guides/analytics/","text":"Analytics Guide Analytics begin when a question is published . After publishing a question for the first time it becomes available to students and their usage is logged and fed back to the student and the teacher. Analytics History Analytics are linked to response areas. Each question can have more response areas and they can be added or removed. When a response area is removed, then it is removed only from the \"current version\" of the question (the version that the teacher is editing) and it persists on the previous version(s) of the question. It means that all submissions and analytics remain, but they are now linked to the response area which only exists on a previous version(s) of the question. Currently it is possible to see only analytics against the published version of the question. We are now working on the improvement so that it is possible to see analytics against all reponse areas (including those that exist only on previous versions of the question). Tracking students' response To improve the feedback that students receive and to better understand which areas they need help with, it is possible to check the different student responses and the frequency of each response for each response area. To see these statistics: Click on the Stats tab in teacher mode. Then click on Explore in the top right corner of each response area. You can even export these statistics as csv file!","title":"Analytics"},{"location":"teacher/guides/analytics/#analytics-guide","text":"Analytics begin when a question is published . After publishing a question for the first time it becomes available to students and their usage is logged and fed back to the student and the teacher.","title":"Analytics Guide"},{"location":"teacher/guides/analytics/#analytics-history","text":"Analytics are linked to response areas. Each question can have more response areas and they can be added or removed. When a response area is removed, then it is removed only from the \"current version\" of the question (the version that the teacher is editing) and it persists on the previous version(s) of the question. It means that all submissions and analytics remain, but they are now linked to the response area which only exists on a previous version(s) of the question. Currently it is possible to see only analytics against the published version of the question. We are now working on the improvement so that it is possible to see analytics against all reponse areas (including those that exist only on previous versions of the question).","title":"Analytics History"},{"location":"teacher/guides/analytics/#tracking-students-response","text":"To improve the feedback that students receive and to better understand which areas they need help with, it is possible to check the different student responses and the frequency of each response for each response area. To see these statistics: Click on the Stats tab in teacher mode. Then click on Explore in the top right corner of each response area. You can even export these statistics as csv file!","title":"Tracking students' response"},{"location":"teacher/guides/content-sets-questions/","text":"Editing questions This guide explains how to use the editor to create and modify sets and questions . Click a Set to edit or add questions to it. A guide to the editor: Label Name Description 1 Add Question Add a new blank question, duplicate an existing question, or upload a .zip file containing one or more question JSON files. 2 File, Preview, and Stats Access pages for: \u2022 File: Manage versions, download as a JSON file, or delete the question. \u2022 Preview: See the question as a student would. \u2022 Stats: View statistics on student responses for the question. 3 Question Name Edit the name of the question. 4 Master Content The main content for the question, which is always visible above the individual parts. This field uses the Milkdown editor. 5 Current Part Indicates which question part you are currently editing. 6 Part Content Edit the content for the selected question part (i.e., the sub-question). 7 Response Area The input field where a student submits their answer. Adding a response area is optional. 8 Question Help Options Add optional support materials for students, such as a Structured Tutorial , a Final Answer , or Worked Solutions . The buttons shown here are the same ones students will see. 9 Teacher/Student View Toggle Toggle between the teacher editing view ('EDIT') and the student 'PREVIEW' to see how the question will appear to students. 10 Edit Guidance Add extra details for the question, such as guidance notes, estimated completion time, and skill level. 11 Part Options Add a new part, duplicate the current part, or delete a part (only available if there is more than one).","title":"Editing questions"},{"location":"teacher/guides/content-sets-questions/#editing-questions","text":"This guide explains how to use the editor to create and modify sets and questions .","title":"Editing questions"},{"location":"teacher/guides/content-sets-questions/#click-a-set-to-edit-or-add-questions-to-it","text":"","title":"Click a Set to edit or add questions to it."},{"location":"teacher/guides/content-sets-questions/#a-guide-to-the-editor","text":"Label Name Description 1 Add Question Add a new blank question, duplicate an existing question, or upload a .zip file containing one or more question JSON files. 2 File, Preview, and Stats Access pages for: \u2022 File: Manage versions, download as a JSON file, or delete the question. \u2022 Preview: See the question as a student would. \u2022 Stats: View statistics on student responses for the question. 3 Question Name Edit the name of the question. 4 Master Content The main content for the question, which is always visible above the individual parts. This field uses the Milkdown editor. 5 Current Part Indicates which question part you are currently editing. 6 Part Content Edit the content for the selected question part (i.e., the sub-question). 7 Response Area The input field where a student submits their answer. Adding a response area is optional. 8 Question Help Options Add optional support materials for students, such as a Structured Tutorial , a Final Answer , or Worked Solutions . The buttons shown here are the same ones students will see. 9 Teacher/Student View Toggle Toggle between the teacher editing view ('EDIT') and the student 'PREVIEW' to see how the question will appear to students. 10 Edit Guidance Add extra details for the question, such as guidance notes, estimated completion time, and skill level. 11 Part Options Add a new part, duplicate the current part, or delete a part (only available if there is more than one).","title":"A guide to the editor:"},{"location":"teacher/guides/faq/","text":"Frequently Asked Questions How can I enroll students on my new Module ? Students and users are given access to a module using their college email address (from microsoft). Login and navigate to your Teacher dashboard Select the module on which you want to enroll students When on the module page, click the View Students button Enter the enrolment page by clicking the Entroll Students :material-plus: button Enroll students by supplying one or more student email addresses How can I move questions between problem sets? When creating a new question the teacher can choose to \"clone\" from an existing question. The teacher can then delete the original version. In the problem set you wish to move the question to, select the v symbol to the right of the Add Question button From the dropdown menu, select Clone From Question Select the title of the question you wish clone from the list that appear If you wish, go back and delete the question from its original location How can I share a link to a Problem Set? To share a link with students, open the Problem Set in STUDENT mode (light blue top bar), and copy the URL from the browser. To share a link with teachers who will access the content editor and analytics, share a link from TEACHER mode (orange top bar); students won't be able to access this link. How can I set parameters for evaluation functions? The most common parameters will be visible uder the EVALUATE tab in the configure panel. If there is a parameter that is not already visible it can be set using the Advanced - raw parameters (also under the EVALUATE tab) by doing the following: Hover over the list of parameters in the Advanced - raw parameters area. Click the green plus-symbol that appears. Type the name of the parameter (without quotation marks). Hover over the box that says NULL next to the newly added parameter. Click the green pen symbol that appears to the right of it. Type in the desired value in box that appears. By default it will be assumed that the parameter value is a string. The webclient will infer other possible types based on the written input. If the setting should be a string, click the green checkmark to the top right, and if you want the inferred type click the green checkmark at the bottom right. The parameter is now set. How do I reorder questions? It is only possible to reorder published questions in a set. This prevents inadvertently inserting new questions between two published ones. This ensures consistency to the student when viewing a published set as existing questions will remain in an unchanged order, with new questions being added to the bottom (unless manually changed by the teacher). You can tell a question is unpublished as it will take the ' 1.X ' numbering format To reorder questions: Publish the questions you wish to reorder using FILE > SAVE AND PUBLISH (alternatively click on the PUBLISH WHOLE SET button) Refresh the page Drag and drop the questions into the new order Ensure the green box pops up saying: 'questions reordered successfully' - there is no need to republish the set What to do when \\space is not showing in the pdf generated by lambda feedback? The Pandoc library that lambdafeedback use to generate a pdf does not support \\space . Alternatives that could be use to generate a space in math block is to use the tilde symbol ~ or \\, for thinner spacing. What to do if the pdf is not compiling my inline math equation? Please check if there is an additional space at the start or a the end of the equation. This is usually the cause for inline math blocks not compiling. Sometimes if you are copy-pasting text into equations you may end up with certain characters that look normal but actually have different ASCII codes than what you intended. This may also cause a PDF not to compile. How can I have the same font for the unit and for the number in the math block? You can use the code \\mathrm{} or {\\rm} . Both code will give you your units in serifed Times New Roman, which is the same font as the number in the math block when compiled. Complex Numbers Notation If you want to use I for the imaginary constant, add the parameter complexNumbers to \"advanced - raw parameters\" by clicking the green (+). Type in complexNumbers and press enter. Click the green edit button, type in \"True\" and a pop-up bool - true will appear. Click the green tick. You can denote i and j as I by using the input symbols below. Furthermore, the system can equate exp(Ix) to cos(x)+Isin(x) .","title":"FAQ"},{"location":"teacher/guides/faq/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"teacher/guides/faq/#how-can-i-enroll-students-on-my-new-module","text":"Students and users are given access to a module using their college email address (from microsoft). Login and navigate to your Teacher dashboard Select the module on which you want to enroll students When on the module page, click the View Students button Enter the enrolment page by clicking the Entroll Students :material-plus: button Enroll students by supplying one or more student email addresses","title":"How can I enroll students on my new Module?"},{"location":"teacher/guides/faq/#how-can-i-move-questions-between-problem-sets","text":"When creating a new question the teacher can choose to \"clone\" from an existing question. The teacher can then delete the original version. In the problem set you wish to move the question to, select the v symbol to the right of the Add Question button From the dropdown menu, select Clone From Question Select the title of the question you wish clone from the list that appear If you wish, go back and delete the question from its original location","title":"How can I move questions between problem sets?"},{"location":"teacher/guides/faq/#how-can-i-share-a-link-to-a-problem-set","text":"To share a link with students, open the Problem Set in STUDENT mode (light blue top bar), and copy the URL from the browser. To share a link with teachers who will access the content editor and analytics, share a link from TEACHER mode (orange top bar); students won't be able to access this link.","title":"How can I share a link to a Problem Set?"},{"location":"teacher/guides/faq/#how-can-i-set-parameters-for-evaluation-functions","text":"The most common parameters will be visible uder the EVALUATE tab in the configure panel. If there is a parameter that is not already visible it can be set using the Advanced - raw parameters (also under the EVALUATE tab) by doing the following: Hover over the list of parameters in the Advanced - raw parameters area. Click the green plus-symbol that appears. Type the name of the parameter (without quotation marks). Hover over the box that says NULL next to the newly added parameter. Click the green pen symbol that appears to the right of it. Type in the desired value in box that appears. By default it will be assumed that the parameter value is a string. The webclient will infer other possible types based on the written input. If the setting should be a string, click the green checkmark to the top right, and if you want the inferred type click the green checkmark at the bottom right. The parameter is now set.","title":"How can I set parameters for evaluation functions?"},{"location":"teacher/guides/faq/#how-do-i-reorder-questions","text":"It is only possible to reorder published questions in a set. This prevents inadvertently inserting new questions between two published ones. This ensures consistency to the student when viewing a published set as existing questions will remain in an unchanged order, with new questions being added to the bottom (unless manually changed by the teacher). You can tell a question is unpublished as it will take the ' 1.X ' numbering format To reorder questions: Publish the questions you wish to reorder using FILE > SAVE AND PUBLISH (alternatively click on the PUBLISH WHOLE SET button) Refresh the page Drag and drop the questions into the new order Ensure the green box pops up saying: 'questions reordered successfully' - there is no need to republish the set","title":"How do I reorder questions?"},{"location":"teacher/guides/faq/#what-to-do-when-space-is-not-showing-in-the-pdf-generated-by-lambda-feedback","text":"The Pandoc library that lambdafeedback use to generate a pdf does not support \\space . Alternatives that could be use to generate a space in math block is to use the tilde symbol ~ or \\, for thinner spacing.","title":"What to do when \\space is not showing in the pdf generated by lambda feedback?"},{"location":"teacher/guides/faq/#what-to-do-if-the-pdf-is-not-compiling-my-inline-math-equation","text":"Please check if there is an additional space at the start or a the end of the equation. This is usually the cause for inline math blocks not compiling. Sometimes if you are copy-pasting text into equations you may end up with certain characters that look normal but actually have different ASCII codes than what you intended. This may also cause a PDF not to compile.","title":"What to do if the pdf is not compiling my inline math equation?"},{"location":"teacher/guides/faq/#how-can-i-have-the-same-font-for-the-unit-and-for-the-number-in-the-math-block","text":"You can use the code \\mathrm{} or {\\rm} . Both code will give you your units in serifed Times New Roman, which is the same font as the number in the math block when compiled.","title":"How can I have the same font for the unit and for the number in the math block?"},{"location":"teacher/guides/faq/#complex-numbers-notation","text":"If you want to use I for the imaginary constant, add the parameter complexNumbers to \"advanced - raw parameters\" by clicking the green (+). Type in complexNumbers and press enter. Click the green edit button, type in \"True\" and a pop-up bool - true will appear. Click the green tick. You can denote i and j as I by using the input symbols below. Furthermore, the system can equate exp(Ix) to cos(x)+Isin(x) .","title":"Complex Numbers Notation"},{"location":"teacher/guides/gettingstarted/","text":"Getting Started with Lambda Feedback for Teachers Access a Module Use your Imperial Microsoft account to sign in and access your modules. By default, you are logged in as a student, and the interface will be blue. If you have teacher privileges , you will see a 'Teacher' button at the top. To enter teacher mode, click the 'Teacher' button , and the colour of the interface will change to orange. This is where you can access all your modules, as well as upload and edit problem sets. As of July 2023 , new modules can only be added to Lambda Feedback by administrators. Please contact an administrator if you want your module added to the website. To find the module you want, you can sort them in ascending/descending order , or filter them as shown below: {: style=\"height:200px\"} {: style=\"height:200px\"} Image: Quick sort (left) or filtering (right) Select the module you wish to edit. Create a New Problem Set Click your module and then click 'Content' (in the upper-left corner). Create a new set by clicking the 'Create Set' button. A menu will appear with options to edit the name, description, and other settings for the new set. To edit the content, click the set name . This will open the set in a 'WYSIWYG' editor. The first question is automatically created with a default name. The question structure is described here . Below the Line Below the main question content, you can provide high-quality support material for students. {: style=\"height:50px\"} A student guide is here . Teachers use the 'below the line' content as follows: Structured tutorial is to provide scaffolding for students struggling with the question. Final answer is self-explanatory. Worked solutions provides detailed, step-by-step solutions. All content below the line uses Lexdown functionality. Worked solutions can be branched. Future developments will add branching and response areas to structured tutorials. It is not necessary to include all three methods of help. If you only provide content for one tab, only that button will appear in the published student version. For general terminology, see here. To see further details on how to edit your questions, see here. Enrolling Students In Teacher mode , open your module's home page, click the 'Students' tab, and then click 'Enrol Students'. Enter a student's email address, or alternatively paste in a list of email addresses separated by commas. Press 'Enter' to add the email addresses: Then click 'SUBMIT' to enrol the students. Imperial College London Email Addresses You must use the long-form email address: Valid: first.nameYY@imperial.ac.uk (student) j.doe@imperial.ac.uk (staff) first.name@imperial.ac.uk (staff) Invalid: abc123@ic.ac.uk abc123@imperial.ac.uk user@ic.ac.uk user@imperial.ac.uk first.nameYY@ic.ac.uk This is because we use Azure Active Directory (i.e., Microsoft) to authorise users.","title":"Getting Started"},{"location":"teacher/guides/gettingstarted/#getting-started-with-lambda-feedback-for-teachers","text":"","title":"Getting Started with Lambda Feedback for Teachers"},{"location":"teacher/guides/gettingstarted/#access-a-module","text":"Use your Imperial Microsoft account to sign in and access your modules. By default, you are logged in as a student, and the interface will be blue. If you have teacher privileges , you will see a 'Teacher' button at the top. To enter teacher mode, click the 'Teacher' button , and the colour of the interface will change to orange. This is where you can access all your modules, as well as upload and edit problem sets. As of July 2023 , new modules can only be added to Lambda Feedback by administrators. Please contact an administrator if you want your module added to the website. To find the module you want, you can sort them in ascending/descending order , or filter them as shown below: {: style=\"height:200px\"} {: style=\"height:200px\"} Image: Quick sort (left) or filtering (right) Select the module you wish to edit.","title":"Access a Module"},{"location":"teacher/guides/gettingstarted/#create-a-new-problem-set","text":"Click your module and then click 'Content' (in the upper-left corner). Create a new set by clicking the 'Create Set' button. A menu will appear with options to edit the name, description, and other settings for the new set. To edit the content, click the set name . This will open the set in a 'WYSIWYG' editor. The first question is automatically created with a default name. The question structure is described here .","title":"Create a New Problem Set"},{"location":"teacher/guides/gettingstarted/#below-the-line","text":"Below the main question content, you can provide high-quality support material for students. {: style=\"height:50px\"} A student guide is here . Teachers use the 'below the line' content as follows: Structured tutorial is to provide scaffolding for students struggling with the question. Final answer is self-explanatory. Worked solutions provides detailed, step-by-step solutions. All content below the line uses Lexdown functionality. Worked solutions can be branched. Future developments will add branching and response areas to structured tutorials. It is not necessary to include all three methods of help. If you only provide content for one tab, only that button will appear in the published student version. For general terminology, see here. To see further details on how to edit your questions, see here.","title":"Below the Line"},{"location":"teacher/guides/gettingstarted/#enrolling-students","text":"In Teacher mode , open your module's home page, click the 'Students' tab, and then click 'Enrol Students'. Enter a student's email address, or alternatively paste in a list of email addresses separated by commas. Press 'Enter' to add the email addresses: Then click 'SUBMIT' to enrol the students.","title":"Enrolling Students"},{"location":"teacher/guides/gettingstarted/#imperial-college-london-email-addresses","text":"You must use the long-form email address:","title":"Imperial College London Email Addresses"},{"location":"teacher/guides/gettingstarted/#valid","text":"first.nameYY@imperial.ac.uk (student) j.doe@imperial.ac.uk (staff) first.name@imperial.ac.uk (staff)","title":"Valid:"},{"location":"teacher/guides/gettingstarted/#invalid","text":"abc123@ic.ac.uk abc123@imperial.ac.uk user@ic.ac.uk user@imperial.ac.uk first.nameYY@ic.ac.uk This is because we use Azure Active Directory (i.e., Microsoft) to authorise users.","title":"Invalid:"},{"location":"teacher/guides/good-practice/","text":"Good practice Romanised operators Use romanised operators such as $\\sin$, $\\frac{\\mathrm{d}}{\\mathrm{d}x}$ instead of $sin$, $\\frac{d}{dx}$, etc. Use empty lines Using empty lines can improve the readability and neatness of your content. Empty lines are often useful before and after an equation, and between paragraphs of text. An empty line in markdown requires two spaces on the line, otherwise the line is ignored. Space between numbers and units Put appropriate space between a number and its unit, such as 5 m or 3 kg , according to the SI conventions. Romanise units and check their case Use romanised units such as $\\text{m}$, $\\text{kN}$ instead of $m$, $kN$. Ensure that the case of the unit is correct. Add tests to response areas In a response area, press configure then tests . Tests allow you to enter potential student responses, define whether they are correct or not, then run the evaluation function on those student responses. This allows you to quickly test whether or not the evaluation function works as expected. Save and publish as you go Saving and publishing work regularly is recommended to prevent accidental data loss. Use branching when relevant Branching is a feature for worked solutions . It allows you to have different solution pathways Usage examples: When a question can be solved via multiple different methods, branching can be used for each method. When a question has multiple parts, where each part involves substitution of different values, branching can be used for each part. Use pre-response area text to be clear what should be entered Pre-response area text is found under configure - INPUT in the evaluation function. You can use LaTeX in the pre-response area text. Use \\dfrac for bigger fractions when needed. Use $\\dfrac{numerator}{denominator}$ for bigger fractions when you need to display them more clearly or emphasize them. For example, $\\dfrac{3}{4}$ will produce a bigger fraction than $\\frac{3}{4}$ . Alternatively, you can use $\\displaystyle$ at the start of an inline equation to render everything afterwards full-size (as in display maths mode), this is especially helpful for integrals. Use \\small when smaller fonts or fractions are needed Use $\\small{text}$ when you need to display smaller fonts or fractions in your LaTeX expressions. For example, $\\small{\\frac{1}{2}}$ will produce a smaller fraction than $\\frac{1}{2}$ . Use audio clips Just drag + drop an audio file into the milkdown editor. Issue with input symbols For the code of input symbols in the response areas, the system cannot accept brackets (i.e dot(x) for $\\dot{x}$) and response must be formatted in different ways (i.e dot_x ). a_b will render as $a_b$ without adding an input symbol, but note that dot_x overrides the _ input (in this example, will render as $\\dot{x}$ instead of $dot_x$) Use live preview and permit all types of input Live preview and input types are found in an evaluation function under configure - INPUT . Live preview instantly renders a student's input. This is very useful for long/complicated equations, as it allows students to ensure their input is correct. Latex help Use \\begin{array} to generate a compact table i.e. latex \\begin{array}{|c|c|} \\hline \\theta_{2,0} & \\theta_{1,L}\\\\ \\hline -6700 & 130.5641\\\\ \\hline -6600 & 161.6086\\\\ \\hline \\end{array} Use \\begin{aligned} to keep your working formatted nicely latex \\begin{aligned} M_{d e f} &=\\dfrac{1}{2}(M+M^T)\\\\ & =\\dfrac{1}{2} \\begin{pmatrix} 4 & 14\\\\ -6 & -11 \\end{pmatrix}+\\begin{pmatrix} 4 & -6\\\\ 14 & -11 \\end{pmatrix}\\\\ & =\\begin{pmatrix} 4 & 4\\\\ 4 & -11 \\end{pmatrix} \\end{aligned} Use \\left and \\right for equations with multiple brackets latex f(x)=\\left (\\frac{(\\cos (x) -x) + i(\\sin (x) - x)}{wi} \\right) This also works for [ ] and \\{ \\} Use \\sin , \\cos , etc. as a shortcut for \\text{sin } , \\text{cos } , etc.","title":"Good practice"},{"location":"teacher/guides/good-practice/#good-practice","text":"","title":"Good practice"},{"location":"teacher/guides/good-practice/#romanised-operators","text":"Use romanised operators such as $\\sin$, $\\frac{\\mathrm{d}}{\\mathrm{d}x}$ instead of $sin$, $\\frac{d}{dx}$, etc.","title":"Romanised operators"},{"location":"teacher/guides/good-practice/#use-empty-lines","text":"Using empty lines can improve the readability and neatness of your content. Empty lines are often useful before and after an equation, and between paragraphs of text. An empty line in markdown requires two spaces on the line, otherwise the line is ignored.","title":"Use empty lines"},{"location":"teacher/guides/good-practice/#space-between-numbers-and-units","text":"Put appropriate space between a number and its unit, such as 5 m or 3 kg , according to the SI conventions.","title":"Space between numbers and units"},{"location":"teacher/guides/good-practice/#romanise-units-and-check-their-case","text":"Use romanised units such as $\\text{m}$, $\\text{kN}$ instead of $m$, $kN$. Ensure that the case of the unit is correct.","title":"Romanise units and check their case"},{"location":"teacher/guides/good-practice/#add-tests-to-response-areas","text":"In a response area, press configure then tests . Tests allow you to enter potential student responses, define whether they are correct or not, then run the evaluation function on those student responses. This allows you to quickly test whether or not the evaluation function works as expected.","title":"Add tests to response areas"},{"location":"teacher/guides/good-practice/#save-and-publish-as-you-go","text":"Saving and publishing work regularly is recommended to prevent accidental data loss.","title":"Save and publish as you go"},{"location":"teacher/guides/good-practice/#use-branching-when-relevant","text":"Branching is a feature for worked solutions . It allows you to have different solution pathways Usage examples: When a question can be solved via multiple different methods, branching can be used for each method. When a question has multiple parts, where each part involves substitution of different values, branching can be used for each part.","title":"Use branching when relevant"},{"location":"teacher/guides/good-practice/#use-pre-response-area-text-to-be-clear-what-should-be-entered","text":"Pre-response area text is found under configure - INPUT in the evaluation function. You can use LaTeX in the pre-response area text.","title":"Use pre-response area text to be clear what should be entered"},{"location":"teacher/guides/good-practice/#use-dfrac-for-bigger-fractions-when-needed","text":"Use $\\dfrac{numerator}{denominator}$ for bigger fractions when you need to display them more clearly or emphasize them. For example, $\\dfrac{3}{4}$ will produce a bigger fraction than $\\frac{3}{4}$ . Alternatively, you can use $\\displaystyle$ at the start of an inline equation to render everything afterwards full-size (as in display maths mode), this is especially helpful for integrals.","title":"Use \\dfrac for bigger fractions when needed."},{"location":"teacher/guides/good-practice/#use-small-when-smaller-fonts-or-fractions-are-needed","text":"Use $\\small{text}$ when you need to display smaller fonts or fractions in your LaTeX expressions. For example, $\\small{\\frac{1}{2}}$ will produce a smaller fraction than $\\frac{1}{2}$ .","title":"Use \\small when smaller fonts or fractions are needed"},{"location":"teacher/guides/good-practice/#use-audio-clips","text":"Just drag + drop an audio file into the milkdown editor.","title":"Use audio clips"},{"location":"teacher/guides/good-practice/#issue-with-input-symbols","text":"For the code of input symbols in the response areas, the system cannot accept brackets (i.e dot(x) for $\\dot{x}$) and response must be formatted in different ways (i.e dot_x ). a_b will render as $a_b$ without adding an input symbol, but note that dot_x overrides the _ input (in this example, will render as $\\dot{x}$ instead of $dot_x$)","title":"Issue with input symbols"},{"location":"teacher/guides/good-practice/#use-live-preview-and-permit-all-types-of-input","text":"Live preview and input types are found in an evaluation function under configure - INPUT . Live preview instantly renders a student's input. This is very useful for long/complicated equations, as it allows students to ensure their input is correct.","title":"Use live preview and permit all types of input"},{"location":"teacher/guides/good-practice/#latex-help","text":"Use \\begin{array} to generate a compact table i.e. latex \\begin{array}{|c|c|} \\hline \\theta_{2,0} & \\theta_{1,L}\\\\ \\hline -6700 & 130.5641\\\\ \\hline -6600 & 161.6086\\\\ \\hline \\end{array} Use \\begin{aligned} to keep your working formatted nicely latex \\begin{aligned} M_{d e f} &=\\dfrac{1}{2}(M+M^T)\\\\ & =\\dfrac{1}{2} \\begin{pmatrix} 4 & 14\\\\ -6 & -11 \\end{pmatrix}+\\begin{pmatrix} 4 & -6\\\\ 14 & -11 \\end{pmatrix}\\\\ & =\\begin{pmatrix} 4 & 4\\\\ 4 & -11 \\end{pmatrix} \\end{aligned} Use \\left and \\right for equations with multiple brackets latex f(x)=\\left (\\frac{(\\cos (x) -x) + i(\\sin (x) - x)}{wi} \\right) This also works for [ ] and \\{ \\} Use \\sin , \\cos , etc. as a shortcut for \\text{sin } , \\text{cos } , etc.","title":"Latex help"},{"location":"teacher/guides/lexdown/","text":"The lexdown editor The lexdown is widely used in Lambda Feedback. It accepts: standard markdown $\\LaTeX$ (delimited by $ and limited to KaTeX functionality) images (paste or drag and drop) videos (paste a URL) The lexdown editor is an adapted version of lexical to use markdown-first, and incorporate features including drag-and-drop images, embedded videos and autio, and switch to raw markdown. Common needs in milkdown Here's a walkthrough to create some basic content: Inline maths Use the $ sign to delimited inline maths. For example type the following: This is inline maths, $\\alpha<0$, and it is useful Equation mode Start a blank line with $$ then press the space bar. This will introduce an equation editor. Type raw $\\LaTeX$ into the shaded part and see the live preview in the lower part. *Press ctrl+enter (Mac: cmd+enter ) to exit the equation editing box. For example, type the following after typing $$ [space] into a fresh line: f(x) = \\int_{-\\infty}^\\infty \\hat{f}(\\xi)\\,e^{2 \\pi i \\xi x} \\,\\mathrm{d}\\xi Steps in worked solutions If you begin a fresh line with --- (three dashes) then a horizontal rule appears. Alternatively click the button on the toolbar to insert a horizontal rule. If you are editing a worked solution, then Lambda Feedback will split the worked solution into steps according to the location of horizontal rules. You can delete and add the rules and the solution steps will update. For example: This is the first step of the solution - which is a good hint towards solving --- This is a second step, which makes it more obvious --- Finally we reach the solution When viewing the worked solutions, this is how it looks: This is the process to create the solution steps: Images You can add images with drag-and-drop or copy-and-paste. Images can be resized with the mouse, or click on the image to configure, or edit the raw markdown. Empty lines Use 'Enter' for a new paragraph, or 'shift-Enter' for a line break.","title":"Milkdown"},{"location":"teacher/guides/lexdown/#the-lexdown-editor","text":"The lexdown is widely used in Lambda Feedback. It accepts: standard markdown $\\LaTeX$ (delimited by $ and limited to KaTeX functionality) images (paste or drag and drop) videos (paste a URL) The lexdown editor is an adapted version of lexical to use markdown-first, and incorporate features including drag-and-drop images, embedded videos and autio, and switch to raw markdown.","title":"The lexdown editor"},{"location":"teacher/guides/lexdown/#common-needs-in-milkdown","text":"Here's a walkthrough to create some basic content:","title":"Common needs in milkdown"},{"location":"teacher/guides/lexdown/#inline-maths","text":"Use the $ sign to delimited inline maths. For example type the following: This is inline maths, $\\alpha<0$, and it is useful","title":"Inline maths"},{"location":"teacher/guides/lexdown/#equation-mode","text":"Start a blank line with $$ then press the space bar. This will introduce an equation editor. Type raw $\\LaTeX$ into the shaded part and see the live preview in the lower part. *Press ctrl+enter (Mac: cmd+enter ) to exit the equation editing box. For example, type the following after typing $$ [space] into a fresh line: f(x) = \\int_{-\\infty}^\\infty \\hat{f}(\\xi)\\,e^{2 \\pi i \\xi x} \\,\\mathrm{d}\\xi","title":"Equation mode"},{"location":"teacher/guides/lexdown/#steps-in-worked-solutions","text":"If you begin a fresh line with --- (three dashes) then a horizontal rule appears. Alternatively click the button on the toolbar to insert a horizontal rule. If you are editing a worked solution, then Lambda Feedback will split the worked solution into steps according to the location of horizontal rules. You can delete and add the rules and the solution steps will update. For example: This is the first step of the solution - which is a good hint towards solving --- This is a second step, which makes it more obvious --- Finally we reach the solution When viewing the worked solutions, this is how it looks: This is the process to create the solution steps:","title":"Steps in worked solutions"},{"location":"teacher/guides/lexdown/#images","text":"You can add images with drag-and-drop or copy-and-paste. Images can be resized with the mouse, or click on the image to configure, or edit the raw markdown.","title":"Images"},{"location":"teacher/guides/lexdown/#empty-lines","text":"Use 'Enter' for a new paragraph, or 'shift-Enter' for a line break.","title":"Empty lines"},{"location":"teacher/guides/question-export-import/","text":"Question export and import Export a question Under the File menu, select the Export as JSON option: The question and images (if any) will be downloaded into your download folder. Import a question Click Add question menu and select Import questions from file option: The file explorer opens. Select the zip file containing the question and click open. The question will be added as the last question. The zip file must contain question data in a valid JSON format. The best way to obtain a valid JSON format is to export a question, unzip the download file and open the JSON file. If the question contains media, they must be in the media folder inside of the zip file. Import more than 1 question The zip file can contain more than one question. Each of the questions must be in the JSON file and in the correct format. All media must be in the media folder. It is possible to e.g. export 2 questions, then unzip the exported zip files and then zip both questions and their medias into one zip file and then import the one zip file. Here is an example of a folder containing 2 questions and their medias: The name of the folder and names of json files are not important. However, the name of media files must correspond with the names used in the json files when referring the media.","title":"Exporting and importing questions"},{"location":"teacher/guides/question-export-import/#question-export-and-import","text":"","title":"Question export and import"},{"location":"teacher/guides/question-export-import/#export-a-question","text":"Under the File menu, select the Export as JSON option: The question and images (if any) will be downloaded into your download folder.","title":"Export a question"},{"location":"teacher/guides/question-export-import/#import-a-question","text":"Click Add question menu and select Import questions from file option: The file explorer opens. Select the zip file containing the question and click open. The question will be added as the last question. The zip file must contain question data in a valid JSON format. The best way to obtain a valid JSON format is to export a question, unzip the download file and open the JSON file. If the question contains media, they must be in the media folder inside of the zip file.","title":"Import a question"},{"location":"teacher/guides/question-export-import/#import-more-than-1-question","text":"The zip file can contain more than one question. Each of the questions must be in the JSON file and in the correct format. All media must be in the media folder. It is possible to e.g. export 2 questions, then unzip the exported zip files and then zip both questions and their medias into one zip file and then import the one zip file. Here is an example of a folder containing 2 questions and their medias: The name of the folder and names of json files are not important. However, the name of media files must correspond with the names used in the json files when referring the media.","title":"Import more than 1 question"},{"location":"teacher/guides/guidance/guidance-time-suggestion/","text":"Obtaining Guidance Time In this guide, we will walk through how to use the guidance time suggestion feature. Fill in all the question's attributes as much as possible. i.e, the question's text, the worked solution, skill level etc., The more information is filled in, the more accurate the suggested guidance time will be. Click on the \"Suggest\" button in the guidance configuration tab after you have filled in all the question's attributes.","title":"Guidance Time Suggestion"},{"location":"teacher/guides/guidance/guidance-time-suggestion/#obtaining-guidance-time","text":"In this guide, we will walk through how to use the guidance time suggestion feature. Fill in all the question's attributes as much as possible. i.e, the question's text, the worked solution, skill level etc., The more information is filled in, the more accurate the suggested guidance time will be. Click on the \"Suggest\" button in the guidance configuration tab after you have filled in all the question's attributes.","title":"Obtaining Guidance Time"},{"location":"teacher/reference/access_control/","text":"Access control Modules Module access for students is controlled by enrolling student users. More details to be added here. Sets Set access is granted to all users enrolled on a module, but the Set can be hidden by the teacher. Two methods can be used to hide a Set: Start and end dates (both optional) can be created in the Set Metadata. The Set can me manually hidden , which overrides the above settings. Support material within questions The following types of support materials are available to students in the help section: Sructured tutorial Final answer Worked solutions Two methods can be used to hide support material: Configuring student access at the set level Open the Edit Set Metadata page by clicking on the Edit Set Metadata button in the list of sets: The page contains the Student access to support material section: Access to each support material type can be set to one of the following options: Available Students can open this support material type without any restrictions. This is valid for all questions in the set except those for which the support material access is set to be unavailable at the question level (see below). Available with warnings A warning window appears if the studen opens the content before the recommended time. The recommended time is the Minimum time estimate (mins) which can be set on the question Guidance page: { width=\"400\" } However, the option will be changed to Available , if any of the following is true: The student has downloaded the PDF The part is marked as done There is no minimum time estimate set for the question The time now minus the time the student first accessed the question is more than the minimum time estimate This is valid for all questions in the set except those for which the support material access is set to be unavailable at the question level (see below). Unavailable Students cannot open any support material for any question in the set. This is valid for all questions in the set, even those for which the support material access is set to Available at the question level (see below). Configuring student access at the question level The support material access configuration at the question level is located on the File tab: All support material is available by default, it can be changed: If the switch is off , then the support material is available If the switch is on , then the support material is unavailable Summary overview Set level setting Question level setting Result (using Final answer as an example) Description Comment Unavailable N/A { width=\"200\" } The Final answer is disabled The setting at the question level is ignored Available Unavailable { width=\"200\" } The Final answer is disabled Available with warnings Unavailable { width=\"200\" } The Final answer is disabled The same result as above Available with warnings Available { width=\"200\" } When the Final answer is clicked, a warning message appears Additional conditions must be met: PDF not downloaded Part not marked as done The minimum time estimate is set for the question The time now minus the time the student first accessed the question is more than the minimum time estimate If any of them is not met, then the support material will be available with no warnings.","title":"Access control"},{"location":"teacher/reference/access_control/#access-control","text":"","title":"Access control"},{"location":"teacher/reference/access_control/#modules","text":"Module access for students is controlled by enrolling student users. More details to be added here.","title":"Modules"},{"location":"teacher/reference/access_control/#sets","text":"Set access is granted to all users enrolled on a module, but the Set can be hidden by the teacher. Two methods can be used to hide a Set: Start and end dates (both optional) can be created in the Set Metadata. The Set can me manually hidden , which overrides the above settings.","title":"Sets"},{"location":"teacher/reference/access_control/#support-material-within-questions","text":"The following types of support materials are available to students in the help section: Sructured tutorial Final answer Worked solutions Two methods can be used to hide support material:","title":"Support material within questions"},{"location":"teacher/reference/access_control/#configuring-student-access-at-the-set-level","text":"Open the Edit Set Metadata page by clicking on the Edit Set Metadata button in the list of sets: The page contains the Student access to support material section: Access to each support material type can be set to one of the following options:","title":"Configuring student access at the set level"},{"location":"teacher/reference/access_control/#available","text":"Students can open this support material type without any restrictions. This is valid for all questions in the set except those for which the support material access is set to be unavailable at the question level (see below).","title":"Available"},{"location":"teacher/reference/access_control/#available-with-warnings","text":"A warning window appears if the studen opens the content before the recommended time. The recommended time is the Minimum time estimate (mins) which can be set on the question Guidance page: { width=\"400\" } However, the option will be changed to Available , if any of the following is true: The student has downloaded the PDF The part is marked as done There is no minimum time estimate set for the question The time now minus the time the student first accessed the question is more than the minimum time estimate This is valid for all questions in the set except those for which the support material access is set to be unavailable at the question level (see below).","title":"Available with warnings"},{"location":"teacher/reference/access_control/#unavailable","text":"Students cannot open any support material for any question in the set. This is valid for all questions in the set, even those for which the support material access is set to Available at the question level (see below).","title":"Unavailable"},{"location":"teacher/reference/access_control/#configuring-student-access-at-the-question-level","text":"The support material access configuration at the question level is located on the File tab: All support material is available by default, it can be changed: If the switch is off , then the support material is available If the switch is on , then the support material is unavailable","title":"Configuring student access at the question level"},{"location":"teacher/reference/access_control/#summary-overview","text":"Set level setting Question level setting Result (using Final answer as an example) Description Comment Unavailable N/A { width=\"200\" } The Final answer is disabled The setting at the question level is ignored Available Unavailable { width=\"200\" } The Final answer is disabled Available with warnings Unavailable { width=\"200\" } The Final answer is disabled The same result as above Available with warnings Available { width=\"200\" } When the Final answer is clicked, a warning message appears Additional conditions must be met: PDF not downloaded Part not marked as done The minimum time estimate is set for the question The time now minus the time the student first accessed the question is more than the minimum time estimate If any of them is not met, then the support material will be available with no warnings.","title":"Summary overview"},{"location":"teacher/reference/latex_functionality/","text":"Latex functionality Lambda feedback uses one content source to serve two outputs: web and PDF . Each output has different requirements, and content must meet both requirements in order to serve both outputs. Content formatting All content is formatted in markdown . Headings, font style, lists, tables, images, $\\LaTeX$, can all be created using standard markdown. Special attention is required when formatting $\\LaTeX$ which, although it is formatted using standard markdown (i.e. delimited by the $ for 'inline formulas', and $$ for an equation environment), must use a subset of $\\LaTeX$ in order to compile for both outputs. This sometimes requires a compromise by the author. The milkdown editor All content in Lambda Feedback is stored as markdown (ASCII content), however it is always input/edited using the milkdown editor. This editor has the advantage of providing live interactive previews of content, including $\\LaTeX$ via katex. Web requirements: katex $\\LaTeX$ content is rendered in the web browser using the katex Javascript library. The katex home page has an intereactive input where content is rendered and can be checked for validity. The documentation lists which functions are supported. Katex is a subset of $\\LaTeX$. Therefore some functions that work in $\\LaTeX$ do not work in katex and won't render on the web. For example, the tikz package - which is a complex graphics package - is not supported by katex. Unsupported packages have knock-on effects, for example while the \\cancel{} function is supported, \\cancelto{}{} is not because it relies on tikz . Ensuring that content renders correctly on the web is straightforward because the editor gives a live preview - and will indicate when errors occur. PDF requirements: pandoc and PDFlatex/XeTeX When a Problem Set is saved in the editor, the PDF is automatically compiled by sending the markdown content to Pandoc , which internally uses $\\LaTeX$ (either PDFlatex of xelatex - depending on the settings within the Lambda Feedback stack) to render a PDF. Problems can occur with PDF compilation even if the web rendering is successful, because it uses different libraries to the web browser. If the PDF fails to compile, a red error bar will appear and provide the location of the error within the Problem Set (identifying which question), and the error that Pandoc returned. One key limitation of the Lambda Feedback system is that it uses markdown content, so cannot produce all the richness of a full $\\LaTeX$ document (and the AMS math library). All equation environments in markdown are signalled by the $$ delimiter which is equivalent to \\begin{equation*} . This rules out using alternative primary environments , such as align , gather , multiline , alignat , falign . You can use subordinate environments within an equation environment, for example the following is valid: $$ \\begin{aligned} a & b\\\\ c & d \\end{aligned} $$ Here the suffix -ed in aligned implies a subordinate environment; likewise gathered , alignedat etc. are all valid within an equation environment. Warning: No blank lines allowed in aligned subordinate environment If a blank line is present within a subordinate environment \\begin{aligned} then Pandoc will fail to compile the PDF. For example: ```Faulty code example: $$ \\begin{aligned} a & b\\ c & d \\end{aligned} $$ ``` The above will fail to compile the PDF. But removing the blank line will solve the problem. For further reading search for the AMS math package and related literature. Numbering equations Equation numbering is problematic and our advice is to use manual numbering. Automatic numbering is possible, for example using \\begin{equation} within a $$ environment. Note that sometimes the equation numbers continue counting from one environment to the next, while at other times they don't. You cannot use \\ref to refer to automatic equation numbers. An alternative approach is to use an unnumbered aligned environment, and to add an extra column with the equation number in (e.g. &(2) ). For some ad hoc good practice tips, see good practice .","title":"Latex functionality"},{"location":"teacher/reference/latex_functionality/#latex-functionality","text":"Lambda feedback uses one content source to serve two outputs: web and PDF . Each output has different requirements, and content must meet both requirements in order to serve both outputs.","title":"Latex functionality"},{"location":"teacher/reference/latex_functionality/#content-formatting","text":"All content is formatted in markdown . Headings, font style, lists, tables, images, $\\LaTeX$, can all be created using standard markdown. Special attention is required when formatting $\\LaTeX$ which, although it is formatted using standard markdown (i.e. delimited by the $ for 'inline formulas', and $$ for an equation environment), must use a subset of $\\LaTeX$ in order to compile for both outputs. This sometimes requires a compromise by the author.","title":"Content formatting"},{"location":"teacher/reference/latex_functionality/#the-milkdown-editor","text":"All content in Lambda Feedback is stored as markdown (ASCII content), however it is always input/edited using the milkdown editor. This editor has the advantage of providing live interactive previews of content, including $\\LaTeX$ via katex.","title":"The milkdown editor"},{"location":"teacher/reference/latex_functionality/#web-requirements-katex","text":"$\\LaTeX$ content is rendered in the web browser using the katex Javascript library. The katex home page has an intereactive input where content is rendered and can be checked for validity. The documentation lists which functions are supported. Katex is a subset of $\\LaTeX$. Therefore some functions that work in $\\LaTeX$ do not work in katex and won't render on the web. For example, the tikz package - which is a complex graphics package - is not supported by katex. Unsupported packages have knock-on effects, for example while the \\cancel{} function is supported, \\cancelto{}{} is not because it relies on tikz . Ensuring that content renders correctly on the web is straightforward because the editor gives a live preview - and will indicate when errors occur.","title":"Web requirements: katex"},{"location":"teacher/reference/latex_functionality/#pdf-requirements-pandoc-and-pdflatexxetex","text":"When a Problem Set is saved in the editor, the PDF is automatically compiled by sending the markdown content to Pandoc , which internally uses $\\LaTeX$ (either PDFlatex of xelatex - depending on the settings within the Lambda Feedback stack) to render a PDF. Problems can occur with PDF compilation even if the web rendering is successful, because it uses different libraries to the web browser. If the PDF fails to compile, a red error bar will appear and provide the location of the error within the Problem Set (identifying which question), and the error that Pandoc returned. One key limitation of the Lambda Feedback system is that it uses markdown content, so cannot produce all the richness of a full $\\LaTeX$ document (and the AMS math library). All equation environments in markdown are signalled by the $$ delimiter which is equivalent to \\begin{equation*} . This rules out using alternative primary environments , such as align , gather , multiline , alignat , falign . You can use subordinate environments within an equation environment, for example the following is valid: $$ \\begin{aligned} a & b\\\\ c & d \\end{aligned} $$ Here the suffix -ed in aligned implies a subordinate environment; likewise gathered , alignedat etc. are all valid within an equation environment.","title":"PDF requirements: pandoc and PDFlatex/XeTeX"},{"location":"teacher/reference/latex_functionality/#warning-no-blank-lines-allowed-in-aligned-subordinate-environment","text":"If a blank line is present within a subordinate environment \\begin{aligned} then Pandoc will fail to compile the PDF. For example: ```Faulty code example: $$ \\begin{aligned} a & b\\ c & d \\end{aligned} $$ ``` The above will fail to compile the PDF. But removing the blank line will solve the problem. For further reading search for the AMS math package and related literature.","title":"Warning: No blank lines allowed in aligned subordinate environment"},{"location":"teacher/reference/latex_functionality/#numbering-equations","text":"Equation numbering is problematic and our advice is to use manual numbering. Automatic numbering is possible, for example using \\begin{equation} within a $$ environment. Note that sometimes the equation numbers continue counting from one environment to the next, while at other times they don't. You cannot use \\ref to refer to automatic equation numbers. An alternative approach is to use an unnumbered aligned environment, and to add an extra column with the equation number in (e.g. &(2) ). For some ad hoc good practice tips, see good practice .","title":"Numbering equations"},{"location":"teacher/reference/pdf_generation/","text":"PDF Generation Lambda Feedback uses a single source to render content both in the browser and by PDF. The browser view uses katex to render LaTeX, which limits the scope of LaTeX that can be used. katex doesn't use traditional LaTeX packages, but emulates many of the popular packages: Package Emulation When a question is published by a teacher, a PDF copy is also generated. The PDF compilation process uses xelatex and the Latex Template is public. The template installs relevant packages, and a list of packages is compiled below. This list will be updated as we receive more requirements from users. Supported packages when generating a PDF Package Description amsmath Provides essential mathematical features like aligned equations, matrices, and advanced math functions; fundamental for most LaTeX math. amssymb Adds extra mathematical symbols beyond the base LaTeX set. babel Enables multilingual support with proper hyphenation and typographical conventions; allows switching languages within a document. biblatex Manages bibliographies with advanced features and customization; more flexible than traditional packages like natbib . bidi Enables bidirectional text support for mixing LTR and RTL scripts like Arabic and Hebrew. booktabs Provides commands for professional-looking tables with proper spacing and design; discourages vertical rules. bracket Offers commands for properly sizing and aligning brackets in math environments. cancel Draws slashes through math expressions to indicate cancellation; useful for derivations. eurosym Adds the Euro (\u20ac) symbol with options for appearance to integrate with fonts. fixltx2e Fixes bugs and improves LaTeX2e; useful for older distributions (deprecated in recent versions). fancyvrb Enhances verbatim text with customization; useful for code listings with line numbers and styling. fontenc Specifies font encoding; allows use of comprehensive encodings like T1 for accented characters. fontspec Allows use of system fonts (OpenType, TrueType) with XeLaTeX/LuaLaTeX; offers advanced font selection. geometry Simplifies setting page dimensions, margins, and layout parameters. graphicx Includes and manipulates images in documents. grffile Allows inclusion of graphics with filenames containing multiple dots or spaces. hyperref Creates hyperlinks in documents; makes references, citations, and TOC entries clickable. ifxetex Checks if document is compiled with XeTeX; useful for engine-specific configurations. ifluatex Checks if document is compiled with LuaTeX; enables engine-specific configurations. inputenc Specifies input encoding (e.g., UTF-8) for source files; allows direct typing of accented characters. listings Includes and formats source code with syntax highlighting and customization. longtable Creates tables that span multiple pages with automatic breaks and repeated headers. lmodern Provides the Latin Modern font family; improved version of default fonts with more characters. mathspec Uses OpenType fonts for math in XeLaTeX/LuaLaTeX; matches math fonts with text fonts. microtype Improves typography with microtypographic extensions like character protrusion and font expansion. natbib Advanced citation management; supports various styles and integrates with BibTeX. parskip Adds vertical space between paragraphs and removes indentation. pifont Provides access to Dingbat fonts for symbols like checkmarks and crosses. polyglossia Multilingual support for XeLaTeX/LuaLaTeX; provides language-specific typographical rules. setspace Adjusts line spacing (single, one-and-a-half, double) in documents. ulem Adds advanced underlining and strikethrough styles; allows underlines to break at line ends. upquote Ensures straight quotes in code listings; prevents conversion to curly quotes. xcolor Adds color to text and math expressions. xeCJK Typesets Chinese, Japanese, and Korean (CJK) characters in XeLaTeX; handles fonts, spacing, and line breaking.","title":"PDF generation"},{"location":"teacher/reference/pdf_generation/#pdf-generation","text":"Lambda Feedback uses a single source to render content both in the browser and by PDF. The browser view uses katex to render LaTeX, which limits the scope of LaTeX that can be used. katex doesn't use traditional LaTeX packages, but emulates many of the popular packages: Package Emulation When a question is published by a teacher, a PDF copy is also generated. The PDF compilation process uses xelatex and the Latex Template is public. The template installs relevant packages, and a list of packages is compiled below. This list will be updated as we receive more requirements from users.","title":"PDF Generation"},{"location":"teacher/reference/pdf_generation/#supported-packages-when-generating-a-pdf","text":"Package Description amsmath Provides essential mathematical features like aligned equations, matrices, and advanced math functions; fundamental for most LaTeX math. amssymb Adds extra mathematical symbols beyond the base LaTeX set. babel Enables multilingual support with proper hyphenation and typographical conventions; allows switching languages within a document. biblatex Manages bibliographies with advanced features and customization; more flexible than traditional packages like natbib . bidi Enables bidirectional text support for mixing LTR and RTL scripts like Arabic and Hebrew. booktabs Provides commands for professional-looking tables with proper spacing and design; discourages vertical rules. bracket Offers commands for properly sizing and aligning brackets in math environments. cancel Draws slashes through math expressions to indicate cancellation; useful for derivations. eurosym Adds the Euro (\u20ac) symbol with options for appearance to integrate with fonts. fixltx2e Fixes bugs and improves LaTeX2e; useful for older distributions (deprecated in recent versions). fancyvrb Enhances verbatim text with customization; useful for code listings with line numbers and styling. fontenc Specifies font encoding; allows use of comprehensive encodings like T1 for accented characters. fontspec Allows use of system fonts (OpenType, TrueType) with XeLaTeX/LuaLaTeX; offers advanced font selection. geometry Simplifies setting page dimensions, margins, and layout parameters. graphicx Includes and manipulates images in documents. grffile Allows inclusion of graphics with filenames containing multiple dots or spaces. hyperref Creates hyperlinks in documents; makes references, citations, and TOC entries clickable. ifxetex Checks if document is compiled with XeTeX; useful for engine-specific configurations. ifluatex Checks if document is compiled with LuaTeX; enables engine-specific configurations. inputenc Specifies input encoding (e.g., UTF-8) for source files; allows direct typing of accented characters. listings Includes and formats source code with syntax highlighting and customization. longtable Creates tables that span multiple pages with automatic breaks and repeated headers. lmodern Provides the Latin Modern font family; improved version of default fonts with more characters. mathspec Uses OpenType fonts for math in XeLaTeX/LuaLaTeX; matches math fonts with text fonts. microtype Improves typography with microtypographic extensions like character protrusion and font expansion. natbib Advanced citation management; supports various styles and integrates with BibTeX. parskip Adds vertical space between paragraphs and removes indentation. pifont Provides access to Dingbat fonts for symbols like checkmarks and crosses. polyglossia Multilingual support for XeLaTeX/LuaLaTeX; provides language-specific typographical rules. setspace Adjusts line spacing (single, one-and-a-half, double) in documents. ulem Adds advanced underlining and strikethrough styles; allows underlines to break at line ends. upquote Ensures straight quotes in code listings; prevents conversion to curly quotes. xcolor Adds color to text and math expressions. xeCJK Typesets Chinese, Japanese, and Korean (CJK) characters in XeLaTeX; handles fonts, spacing, and line breaking.","title":"Supported packages when generating a PDF"},{"location":"teacher/reference/evaluation_functions/","text":"Evaluation Functions Evaluation functions are responsible for taking in a user's response, comparing it with a correct answer, and providing feedback to the frontend application. Living as containerized Lambda functions on the cloud, they are infinitely customisable and language-agnostic. Content authors should be able to create their own at will. However, we are aware that in a lot of cases, this grading logic will be similar, which is why a few functions have already been created.","title":"Evaluation Functions"},{"location":"teacher/reference/evaluation_functions/#evaluation-functions","text":"Evaluation functions are responsible for taking in a user's response, comparing it with a correct answer, and providing feedback to the frontend application. Living as containerized Lambda functions on the cloud, they are infinitely customisable and language-agnostic. Content authors should be able to create their own at will. However, we are aware that in a lot of cases, this grading logic will be similar, which is why a few functions have already been created.","title":"Evaluation Functions"},{"location":"teacher/reference/response_area_components/","text":"Response Area Components These are what the user interacts with on the front-end. They check an input given by the student, and provide feedback. As React components, they admit a certain number of parameters which are described in this section. Response Area creation Response areas are added to the question field, and are configured for each question in the set. Add Response Area The user can add any number of response areas to a question part. These may be separated by text fields. If desired, adding a double space in the field will space out response areas. Duplicate The user can duplicate the response area within the same part using the duplicate icon. When a response area is duplicated, data entered in the teacher edit mode is copied (such as input type, evaluation function, input symbols, pre and post text, answer, tests, cases, ...). Data entered in the teacher preview mode (such as comments) and student mode (comments, flags, likes, student solutions, ...) is not copied. Reorder It is possible to reorder response areas within the part using the \"drag and drop\" feature. It works in the same way a reordering of parts: Move your mouse cursor over the response are you want to move. Then, press and hold down the left mouse button, move the object to the location you desire, and release the mouse button to set it down. Delete Response Area The user can delete a response area without any restrictions. A popup message appears to confirm the deletion. However, it is important to remember that there might be submissions against the response area you are trying to delete. If this is the case, the popup message will contain the relevant information. See more information about analytics against deleted response areas in Analytics Response Area configuration The user can configure a response area using the configure button: which opens the 'Response Area Panel'. The panel follows a workflow designed around the way a teacher thinks: Input Evaluation Feedback Tests Each stage is in a separate tab. Teachers are recommended to be mindful of this process when creating a response area. Input Select an input style for the student by scrolling or filtering. These consist of the following: Matrix Number Boolean (True/false) Text (Suitable for short text answers) Table Multiple-choice Expression (Gives a preview for the typed symbolic expression) Numeric units (Two fields, allowing for units to be assessed) Code Essay (Suitable for long text answers) Each field has suitable evaluation functions. For example, a simple numerical answer is best suited to number, as this supports isSimilar, while assessing an equation is best suited to the expression foeld, as this supports compareExpressions. Each input field may be configured with a series of options: Enable live preview. Default TRUE for the EXPRESSION input type, to validate student input before submitting for feedback. Display input symbols. Default FALSE. When TRUE, the symbols and associated shortcut codes that may be required for a problem are displayed beneath the input field. These are configured in the 'Evaluate' tab. Include in PDF. Default FALSE except for MCQ. Only affects the PDF version. Includes pre/post response text in the PDF, with a blank space between. Pre/post response text (optional). To clarify to students what to input in the response area. Accepts plain text, including single-dollar-delimited latex. E.g. Estimate $f(x)=$ is acceptable. When using fractions in this field, use $\\dfrac{}{}$ as this is more legible. Answer. Enter a reference answer. This will typically be the absolute solution to a problem. When requesting a symbolic answer, it must be given in terms of the chosen symbol shortcuts. Configure the answer where relevant (e.g. number of rows and columns). Response Area Preview: for teachers to verify the configuration EVALUATE: configure how student expressions are evaluated. This is a 'no code' parametric configuration. Settings will be upgraded as the system improves. Evaluation Function - select an evaluation function from the list. For example: isSimilar will perform a basic numerical comparison between the reference answer and student input, with a configurable level of absolute and relative uncertainty. compareExpressions is typically used where a symbolic answer is requested. Parameters - configure as provided, and add new parameters as required. Details depend on the Evaluation Function. Input symbols - define a dictionary of symbols and their equivalent in code form. This essentially associates a LaTeX-rendered symbol with a machine-readable variable label, with the LaTeX render returned to the student through the preview. These symbols may also be hiddent to students. All inputs are plain text. For example, the symbol $f(x)$ may have code fx and alternatives f_x , f(x) , f . This dictionary will be provided to the evaluation function, even if the teacher has not displayed it to the student. This allow teachers to accept several alternative symbols, such as those with different cases or conventional expressions. The configuration of input symbols is a very important part of providing high quality feedback. Note that the 'visibility' Boolean applies if input symbols are displayed to students, otherwise it is irrelevant. It allows Teachers to communicate some symbols to students, while keeping others hidden to the student but visible to the evaluation function. FEEDBACK: add 'cases'. Each case is an alternative reference answer, with customised parameters, so that multiple cases can be dealt with independently. Cases can be used to capture multiple correct approaches that are not equivalent. Cases can also be used to identify common incorrect approaches and to provide customised feedback. The FEEDBACK tab is typically populated after students start using the system, and when data is available to point to common expressions. Configuring a case works similarly to setting up the default answer in the INPUT tab, with added options for changing the colour of the given feedback, give custom feedback and toggling whether the case answer should be considered correct or not. Adding custom feedback will overwrite the feedback produced by the evaluation function. When a response is submitted, it is evaluated for all cases and feedback for the first case that matches will be displayed. When determining which matched case is first, the default answer described in the INPUT tab will take precedence over all other cases, otherwise the feedback for the matched case with the lowest number will be displayed (i.e. the answer given in the INPUT tab can be considered to be Case 0). Feedback fields also support LaTeX equations in both $f(x)$ and $$f(x)$$ formats, and Markdown inputs such as line breaks. Make sure to follow good typesetting practice in this field. TESTS: tests provide a systematic way to log what behaviour the teacher expects. It provides a useful record and an efficient way to retest the bevhaiour of a response area over time (e.g. as evaluation functions evolve, or as the subject matter itself changes). Restrictions on changes: the input type It is possible to change the input type (e.g. from Text to Number ) without any restrictions until the response area is saved (with or without publishing) to students. After the response area is saved, it is still possible to change the input type, but it will result into replacing the response area by a new one. The previous response area will still exist, but only on the previous version of the question. When replacing the response area, all response area content data (those entered by teachers including tutorials, final answer and worked solutions) are copied, but any existing response area event data (student answers, click events and statistics) will remain linked only to the previous response area. Student answers, click events and statisticsthose data are never lost by deleting a response area, they are always preserved. Once a question is saved (with or without publishing), then any new changes are saved into a new (draft) version of the question. So, if e.g. a response area is deleted after a question was published, then it is deleted from the draft version only. And if this draft version is later published, then the previously published version is preserved (and with it the \"deleted\" response area and linked submissions). The reason why the input type change is restricted is to preserve high quality data analytics as explained in the examples below. An Example 1 - changing input type on PUBLISHED response area FIRST Part The teacher creates a new question with Response Areas RA1 and RA2. -> The version of the question is QV1 with status DRAFT. The teacher is making changes (including the change of the input type if needed). -> The changes are being saved into QV1 with no restrictions The teacher performs PUBLISH action (let's assume RA1 and RA2 input types are both Number for this example). -> The QV1 version status is changed to PUBLISHED Students are submitting their answers -> submissions are recorder against Response Area RA1 and RA2 (in the single Number format for both response areas) The teacher clicks on a question to edit it -> with the first click a new question version QV2 is created with status DRAFT The teacher makes following changes (which are being recorded against QV2): In RA1: adds a new Input Symbol -> the change is recorded against RA1 In RA2: the teacher unlocks and changes the input type -> RA2 is deleted (from the question version QV2) and a new response area RA3 is created (let's assume input type Table for this example) The teacher performs PUBLISH action -> the QV2 is published (with response area RA1 with input type Number and response area RA3 with input type Table ) Students are submitting their answers -> submissions are recorder against Response Area RA1 (in the single Number format) and against Response Area RA3 (in the Table format) => No submissions are lost. The original submissions (in the Number format) are linked to the RA2, which is preserved on the question version QV1. New submissions (in the table format) are linked to the RA3 which is recorded on the question version QV2. Please note: All statistics and submissions are currently displayed against the published question version only. So, though the submissions against RA2 are preserved, it is not currently possible to see them. We are working on the improvement to make this possible. SECOND Part - this is an extension of the FIRST Part The teacher decides to REVERT (the question created in the FIRST Part) to the question version QV1 -> a new question version QV3 is created and the content of the QV1 is copied to QV3 -> QV3 is DRAFT version which contains RA1 (input type Number ) and RA2 (input type Number ) The teacher performs PUBLISH action -> the QV3 is published and the teacher can now see submissions against RA1 and RA2, but he cannot see anymore submissions against RA3 (these are preserved against the QV2 version) An Example 2 - changing input type on SAVED response area The teacher creates a new question with Response Areas RA1 and RA2. -> The version of the question is QV1 with status DRAFT. The teacher is making changes (including the change of the input type if needed). -> The changes are being saved into QV1 with no restrictions The teacher performs SAVE action (let's assume RA1 and RA2 input types are both Number for this example). -> The QV1 version status is changed to SAVED The teacher clicks on a question to edit it -> with the first click a new question version QV2 is created with status DRAFT The teacher makes following changes (which are being recorded against QV2): In RA1: adds a new Input Symbol -> the change is recorded against RA1 In RA2: the teacher unlocks and changes the input type -> RA2 is deleted (from the question version QV2) and a new response area RA3 is created (let's assume input type Table for this example) The teacher performs PUBLISH action -> the QV2 is published (with response area RA1 with input type Number and response area RA3 with input type Table ) Students are submitting their answers -> submissions are recorder against Response Area RA1 (in the single Number format) and against Response Area RA3 (in the Table format) The teacher decides to REVERT to the question version QV1 -> a new question version QV3 is created and the content of the QV1 is copied to QV3 -> QV3 is DRAFT version which contains RA1 (input type Number ) and RA2 (input type Number ) The teacher performs PUBLISH action -> the QV3 is published and the teacher can now see submissions against RA1. There are no submissions against RA2 as it has not been (until now) published. Submissions against RA3 are not visible, but they are preserved against the question version QV2. An Example 3 - adding new response area to a published question The teacher creates a new question with Response Areas RA1 and RA2. -> The version of the question is QV1 with status DRAFT. The teacher is making changes (including the change of the input type if needed). -> The changes are being saved into QV1 with no restrictions The teacher performs SAVE (or PUBLISH) action (let's assume RA1 and RA2 input types are both Number for this example). -> The QV1 version status is changed to SAVE (or PUBLISHED) The teacher clicks on a question to edit it -> with the first click a new question version QV2 is created with status DRAFT The teacher adds a new response area RA3 => At this point the teacher is making changes in the question version QV2 (DRAFT) in which: - The input types of RA1 and RA2 are locked, because they exist on a saved version QV1. It does not matter if QV1 is (only) saved or published or if there are or there are not existing submissions. The reason why it is locked is that the teacher can revert into this version later after submissions are created. By locking it we are making sure that the \"unlock\" process will be triggered which will preserve the original response area and it will create a new response area and it will make sure that the submissions are linked to response area with compatible input type. - The input type of RA3 is not locked at this point, because RA3 does not (yet) exist on any saved question version.","title":"Response Area Components"},{"location":"teacher/reference/response_area_components/#response-area-components","text":"These are what the user interacts with on the front-end. They check an input given by the student, and provide feedback. As React components, they admit a certain number of parameters which are described in this section.","title":"Response Area Components"},{"location":"teacher/reference/response_area_components/#response-area-creation","text":"Response areas are added to the question field, and are configured for each question in the set.","title":"Response Area creation"},{"location":"teacher/reference/response_area_components/#add-response-area","text":"The user can add any number of response areas to a question part. These may be separated by text fields. If desired, adding a double space in the field will space out response areas.","title":"Add Response Area"},{"location":"teacher/reference/response_area_components/#duplicate","text":"The user can duplicate the response area within the same part using the duplicate icon. When a response area is duplicated, data entered in the teacher edit mode is copied (such as input type, evaluation function, input symbols, pre and post text, answer, tests, cases, ...). Data entered in the teacher preview mode (such as comments) and student mode (comments, flags, likes, student solutions, ...) is not copied.","title":"Duplicate"},{"location":"teacher/reference/response_area_components/#reorder","text":"It is possible to reorder response areas within the part using the \"drag and drop\" feature. It works in the same way a reordering of parts: Move your mouse cursor over the response are you want to move. Then, press and hold down the left mouse button, move the object to the location you desire, and release the mouse button to set it down.","title":"Reorder"},{"location":"teacher/reference/response_area_components/#delete-response-area","text":"The user can delete a response area without any restrictions. A popup message appears to confirm the deletion. However, it is important to remember that there might be submissions against the response area you are trying to delete. If this is the case, the popup message will contain the relevant information. See more information about analytics against deleted response areas in Analytics","title":"Delete Response Area"},{"location":"teacher/reference/response_area_components/#response-area-configuration","text":"The user can configure a response area using the configure button: which opens the 'Response Area Panel'. The panel follows a workflow designed around the way a teacher thinks: Input Evaluation Feedback Tests Each stage is in a separate tab. Teachers are recommended to be mindful of this process when creating a response area.","title":"Response Area configuration"},{"location":"teacher/reference/response_area_components/#input","text":"Select an input style for the student by scrolling or filtering. These consist of the following: Matrix Number Boolean (True/false) Text (Suitable for short text answers) Table Multiple-choice Expression (Gives a preview for the typed symbolic expression) Numeric units (Two fields, allowing for units to be assessed) Code Essay (Suitable for long text answers) Each field has suitable evaluation functions. For example, a simple numerical answer is best suited to number, as this supports isSimilar, while assessing an equation is best suited to the expression foeld, as this supports compareExpressions. Each input field may be configured with a series of options: Enable live preview. Default TRUE for the EXPRESSION input type, to validate student input before submitting for feedback. Display input symbols. Default FALSE. When TRUE, the symbols and associated shortcut codes that may be required for a problem are displayed beneath the input field. These are configured in the 'Evaluate' tab. Include in PDF. Default FALSE except for MCQ. Only affects the PDF version. Includes pre/post response text in the PDF, with a blank space between. Pre/post response text (optional). To clarify to students what to input in the response area. Accepts plain text, including single-dollar-delimited latex. E.g. Estimate $f(x)=$ is acceptable. When using fractions in this field, use $\\dfrac{}{}$ as this is more legible. Answer. Enter a reference answer. This will typically be the absolute solution to a problem. When requesting a symbolic answer, it must be given in terms of the chosen symbol shortcuts. Configure the answer where relevant (e.g. number of rows and columns). Response Area Preview: for teachers to verify the configuration EVALUATE: configure how student expressions are evaluated. This is a 'no code' parametric configuration. Settings will be upgraded as the system improves. Evaluation Function - select an evaluation function from the list. For example: isSimilar will perform a basic numerical comparison between the reference answer and student input, with a configurable level of absolute and relative uncertainty. compareExpressions is typically used where a symbolic answer is requested. Parameters - configure as provided, and add new parameters as required. Details depend on the Evaluation Function. Input symbols - define a dictionary of symbols and their equivalent in code form. This essentially associates a LaTeX-rendered symbol with a machine-readable variable label, with the LaTeX render returned to the student through the preview. These symbols may also be hiddent to students. All inputs are plain text. For example, the symbol $f(x)$ may have code fx and alternatives f_x , f(x) , f . This dictionary will be provided to the evaluation function, even if the teacher has not displayed it to the student. This allow teachers to accept several alternative symbols, such as those with different cases or conventional expressions. The configuration of input symbols is a very important part of providing high quality feedback. Note that the 'visibility' Boolean applies if input symbols are displayed to students, otherwise it is irrelevant. It allows Teachers to communicate some symbols to students, while keeping others hidden to the student but visible to the evaluation function. FEEDBACK: add 'cases'. Each case is an alternative reference answer, with customised parameters, so that multiple cases can be dealt with independently. Cases can be used to capture multiple correct approaches that are not equivalent. Cases can also be used to identify common incorrect approaches and to provide customised feedback. The FEEDBACK tab is typically populated after students start using the system, and when data is available to point to common expressions. Configuring a case works similarly to setting up the default answer in the INPUT tab, with added options for changing the colour of the given feedback, give custom feedback and toggling whether the case answer should be considered correct or not. Adding custom feedback will overwrite the feedback produced by the evaluation function. When a response is submitted, it is evaluated for all cases and feedback for the first case that matches will be displayed. When determining which matched case is first, the default answer described in the INPUT tab will take precedence over all other cases, otherwise the feedback for the matched case with the lowest number will be displayed (i.e. the answer given in the INPUT tab can be considered to be Case 0). Feedback fields also support LaTeX equations in both $f(x)$ and $$f(x)$$ formats, and Markdown inputs such as line breaks. Make sure to follow good typesetting practice in this field. TESTS: tests provide a systematic way to log what behaviour the teacher expects. It provides a useful record and an efficient way to retest the bevhaiour of a response area over time (e.g. as evaluation functions evolve, or as the subject matter itself changes).","title":"Input"},{"location":"teacher/reference/response_area_components/#restrictions-on-changes-the-input-type","text":"It is possible to change the input type (e.g. from Text to Number ) without any restrictions until the response area is saved (with or without publishing) to students. After the response area is saved, it is still possible to change the input type, but it will result into replacing the response area by a new one. The previous response area will still exist, but only on the previous version of the question. When replacing the response area, all response area content data (those entered by teachers including tutorials, final answer and worked solutions) are copied, but any existing response area event data (student answers, click events and statistics) will remain linked only to the previous response area. Student answers, click events and statisticsthose data are never lost by deleting a response area, they are always preserved. Once a question is saved (with or without publishing), then any new changes are saved into a new (draft) version of the question. So, if e.g. a response area is deleted after a question was published, then it is deleted from the draft version only. And if this draft version is later published, then the previously published version is preserved (and with it the \"deleted\" response area and linked submissions). The reason why the input type change is restricted is to preserve high quality data analytics as explained in the examples below.","title":"Restrictions on changes: the input type"},{"location":"teacher/reference/response_area_components/#an-example-1-changing-input-type-on-published-response-area","text":"","title":"An Example 1 - changing input type on PUBLISHED response area"},{"location":"teacher/reference/response_area_components/#first-part","text":"The teacher creates a new question with Response Areas RA1 and RA2. -> The version of the question is QV1 with status DRAFT. The teacher is making changes (including the change of the input type if needed). -> The changes are being saved into QV1 with no restrictions The teacher performs PUBLISH action (let's assume RA1 and RA2 input types are both Number for this example). -> The QV1 version status is changed to PUBLISHED Students are submitting their answers -> submissions are recorder against Response Area RA1 and RA2 (in the single Number format for both response areas) The teacher clicks on a question to edit it -> with the first click a new question version QV2 is created with status DRAFT The teacher makes following changes (which are being recorded against QV2): In RA1: adds a new Input Symbol -> the change is recorded against RA1 In RA2: the teacher unlocks and changes the input type -> RA2 is deleted (from the question version QV2) and a new response area RA3 is created (let's assume input type Table for this example) The teacher performs PUBLISH action -> the QV2 is published (with response area RA1 with input type Number and response area RA3 with input type Table ) Students are submitting their answers -> submissions are recorder against Response Area RA1 (in the single Number format) and against Response Area RA3 (in the Table format) => No submissions are lost. The original submissions (in the Number format) are linked to the RA2, which is preserved on the question version QV1. New submissions (in the table format) are linked to the RA3 which is recorded on the question version QV2. Please note: All statistics and submissions are currently displayed against the published question version only. So, though the submissions against RA2 are preserved, it is not currently possible to see them. We are working on the improvement to make this possible.","title":"FIRST Part"},{"location":"teacher/reference/response_area_components/#second-part-this-is-an-extension-of-the-first-part","text":"The teacher decides to REVERT (the question created in the FIRST Part) to the question version QV1 -> a new question version QV3 is created and the content of the QV1 is copied to QV3 -> QV3 is DRAFT version which contains RA1 (input type Number ) and RA2 (input type Number ) The teacher performs PUBLISH action -> the QV3 is published and the teacher can now see submissions against RA1 and RA2, but he cannot see anymore submissions against RA3 (these are preserved against the QV2 version)","title":"SECOND Part - this is an extension of the FIRST Part"},{"location":"teacher/reference/response_area_components/#an-example-2-changing-input-type-on-saved-response-area","text":"The teacher creates a new question with Response Areas RA1 and RA2. -> The version of the question is QV1 with status DRAFT. The teacher is making changes (including the change of the input type if needed). -> The changes are being saved into QV1 with no restrictions The teacher performs SAVE action (let's assume RA1 and RA2 input types are both Number for this example). -> The QV1 version status is changed to SAVED The teacher clicks on a question to edit it -> with the first click a new question version QV2 is created with status DRAFT The teacher makes following changes (which are being recorded against QV2): In RA1: adds a new Input Symbol -> the change is recorded against RA1 In RA2: the teacher unlocks and changes the input type -> RA2 is deleted (from the question version QV2) and a new response area RA3 is created (let's assume input type Table for this example) The teacher performs PUBLISH action -> the QV2 is published (with response area RA1 with input type Number and response area RA3 with input type Table ) Students are submitting their answers -> submissions are recorder against Response Area RA1 (in the single Number format) and against Response Area RA3 (in the Table format) The teacher decides to REVERT to the question version QV1 -> a new question version QV3 is created and the content of the QV1 is copied to QV3 -> QV3 is DRAFT version which contains RA1 (input type Number ) and RA2 (input type Number ) The teacher performs PUBLISH action -> the QV3 is published and the teacher can now see submissions against RA1. There are no submissions against RA2 as it has not been (until now) published. Submissions against RA3 are not visible, but they are preserved against the question version QV2.","title":"An Example 2 - changing input type on SAVED response area"},{"location":"teacher/reference/response_area_components/#an-example-3-adding-new-response-area-to-a-published-question","text":"The teacher creates a new question with Response Areas RA1 and RA2. -> The version of the question is QV1 with status DRAFT. The teacher is making changes (including the change of the input type if needed). -> The changes are being saved into QV1 with no restrictions The teacher performs SAVE (or PUBLISH) action (let's assume RA1 and RA2 input types are both Number for this example). -> The QV1 version status is changed to SAVE (or PUBLISHED) The teacher clicks on a question to edit it -> with the first click a new question version QV2 is created with status DRAFT The teacher adds a new response area RA3 => At this point the teacher is making changes in the question version QV2 (DRAFT) in which: - The input types of RA1 and RA2 are locked, because they exist on a saved version QV1. It does not matter if QV1 is (only) saved or published or if there are or there are not existing submissions. The reason why it is locked is that the teacher can revert into this version later after submissions are created. By locking it we are making sure that the \"unlock\" process will be triggered which will preserve the original response area and it will create a new response area and it will make sure that the submissions are linked to response area with compatible input type. - The input type of RA3 is not locked at this point, because RA3 does not (yet) exist on any saved question version.","title":"An Example 3 - adding new response area to a published question"},{"location":"teacher/reference/response_area_components/Boolean/","text":"","title":"Boolean"},{"location":"teacher/reference/response_area_components/Expression/","text":"Expression This response area is very similar to Text , differing in that it can display how the user's response was interpreted back to them through the 'live preview' feature. This works using the grading function, providing a feedback.response_latex field, which gets rendered. Evaluation Function Options isSimilar Calculates the difference between the teacher answer (ans) and the student response (res); compares this to an allowable difference comprising an absolute tolerance (atol) and a relative tolerance (rtol). symbolicEqual Compares two symbolic expressions for mathematical equivalence, using SymPy. See SymPy for further information. Component Parameters post_response_text (optional) Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax. pre_response_text (optional) Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax. Allow Handwrite (Experimental) Enables a handwriting canvas in the browser, which allows a student can use to draw their expression, rather than type using Sympy's syntax. Photo (Experimental) Allows a student to upload their expression as an image, as an alternative to handwriting if the student isn't using a phone or tablet. Setting The Answer Type the correct answer into the 'Response Area Answer' using standard syntax. As the student enters the answer, this will be rendered using the 'live preview' feature, to ensure the correct expression has been entered. Use the 'Response Area Preview' to check the answer has been set correctly. Example Student Response area Correct response given Incorrect response given","title":"Expression"},{"location":"teacher/reference/response_area_components/Expression/#expression","text":"This response area is very similar to Text , differing in that it can display how the user's response was interpreted back to them through the 'live preview' feature. This works using the grading function, providing a feedback.response_latex field, which gets rendered.","title":"Expression"},{"location":"teacher/reference/response_area_components/Expression/#evaluation-function-options","text":"","title":"Evaluation Function Options"},{"location":"teacher/reference/response_area_components/Expression/#issimilar","text":"Calculates the difference between the teacher answer (ans) and the student response (res); compares this to an allowable difference comprising an absolute tolerance (atol) and a relative tolerance (rtol).","title":"isSimilar"},{"location":"teacher/reference/response_area_components/Expression/#symbolicequal","text":"Compares two symbolic expressions for mathematical equivalence, using SymPy. See SymPy for further information.","title":"symbolicEqual"},{"location":"teacher/reference/response_area_components/Expression/#component-parameters","text":"","title":"Component Parameters"},{"location":"teacher/reference/response_area_components/Expression/#post_response_text-optional","text":"Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax.","title":"post_response_text (optional)"},{"location":"teacher/reference/response_area_components/Expression/#pre_response_text-optional","text":"Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax.","title":"pre_response_text (optional)"},{"location":"teacher/reference/response_area_components/Expression/#allow-handwrite-experimental","text":"Enables a handwriting canvas in the browser, which allows a student can use to draw their expression, rather than type using Sympy's syntax.","title":"Allow Handwrite (Experimental)"},{"location":"teacher/reference/response_area_components/Expression/#photo-experimental","text":"Allows a student to upload their expression as an image, as an alternative to handwriting if the student isn't using a phone or tablet.","title":"Photo (Experimental)"},{"location":"teacher/reference/response_area_components/Expression/#setting-the-answer","text":"Type the correct answer into the 'Response Area Answer' using standard syntax. As the student enters the answer, this will be rendered using the 'live preview' feature, to ensure the correct expression has been entered. Use the 'Response Area Preview' to check the answer has been set correctly.","title":"Setting The Answer"},{"location":"teacher/reference/response_area_components/Expression/#example-student-response-area","text":"Correct response given Incorrect response given","title":"Example Student Response area"},{"location":"teacher/reference/response_area_components/Matrix/","text":"Matrix Matrix response area. Will populate the component with a grid of text input fields, in order to facilitate inputing matrices. Evaluation Function Options ArrayEqual Evaluation function checks if the supplied response and answer arrays are within the optionally supplied tolerances. This is based on the numpy.allclose function. Numpy is a dependancy for this function, but it means that arrays of any shape (regular) can be compared efficiently. ArraySymbolicEqual Very similar to the SymbolicEqual grading function, but grading any list of expressions instead. This algorithm can take any level of nesting for \"response\" and \"answer\" fields, as grading is done recursively (as long as both shapes are identical). Symbolic grading is done using the SymPy library. See SymPy for further information. Component Parameters rows and cols (required) Required paramter, describes the shape of the Matrix to be displayed. In the 'Response area answer' section, the number of rows and columns can either be typed directly into the corresponding boxes, or adjusted using the up and down arrows, which appear once the mouse hovers over the input box. post_response_text (optional) Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax. pre_response_text (optional) Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax. Setting The Answer Once the required number of rows and cols has been selected, Each element of the matrix can be entered by clicking the individual input boxes and typing in the correct numbers. Example Student Response Correct response given Incorrect response given","title":"Matrix"},{"location":"teacher/reference/response_area_components/Matrix/#matrix","text":"Matrix response area. Will populate the component with a grid of text input fields, in order to facilitate inputing matrices.","title":"Matrix"},{"location":"teacher/reference/response_area_components/Matrix/#evaluation-function-options","text":"","title":"Evaluation Function Options"},{"location":"teacher/reference/response_area_components/Matrix/#arrayequal","text":"Evaluation function checks if the supplied response and answer arrays are within the optionally supplied tolerances. This is based on the numpy.allclose function. Numpy is a dependancy for this function, but it means that arrays of any shape (regular) can be compared efficiently.","title":"ArrayEqual"},{"location":"teacher/reference/response_area_components/Matrix/#arraysymbolicequal","text":"Very similar to the SymbolicEqual grading function, but grading any list of expressions instead. This algorithm can take any level of nesting for \"response\" and \"answer\" fields, as grading is done recursively (as long as both shapes are identical). Symbolic grading is done using the SymPy library. See SymPy for further information.","title":"ArraySymbolicEqual"},{"location":"teacher/reference/response_area_components/Matrix/#component-parameters","text":"","title":"Component Parameters"},{"location":"teacher/reference/response_area_components/Matrix/#rows-and-cols-required","text":"Required paramter, describes the shape of the Matrix to be displayed. In the 'Response area answer' section, the number of rows and columns can either be typed directly into the corresponding boxes, or adjusted using the up and down arrows, which appear once the mouse hovers over the input box.","title":"rows and cols (required)"},{"location":"teacher/reference/response_area_components/Matrix/#post_response_text-optional","text":"Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax.","title":"post_response_text (optional)"},{"location":"teacher/reference/response_area_components/Matrix/#pre_response_text-optional","text":"Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax.","title":"pre_response_text (optional)"},{"location":"teacher/reference/response_area_components/Matrix/#setting-the-answer","text":"Once the required number of rows and cols has been selected, Each element of the matrix can be entered by clicking the individual input boxes and typing in the correct numbers.","title":"Setting The Answer"},{"location":"teacher/reference/response_area_components/Matrix/#example-student-response","text":"Correct response given Incorrect response given","title":"Example Student Response"},{"location":"teacher/reference/response_area_components/MultipleChoice/","text":"MultipleChoice General multiple choice response area. Features multiple options for single answer and randomising the order. Evaluation Function Options ArrayEqual Evaluation function checks if the supplied response and answer arrays are within the optionally supplied tolerances. This is based on the numpy.allclose function. Numpy is a dependancy for this function, but it means that arrays of any shape (regular) can be compared efficiently. Parameters options (required) This is an array containing strings, each representing an option in the multiple choice component. These are parsed using the parseEquations function, meaning they can support markdown styling and LaTeX. !!! example ```json \"options\": [ \"\\\\( 4x^2 + 2 = \\\\frac{\\\\delta y}{\\\\delta x} \\\\)\", \"\\\\( \\\\pi = 3 \\\\)\", \"\\\\( K_{iakb} U^{b}_{k} = f^{a}_{i} \\\\)\", \"\\\\( 3 = \\\\pi \\\\)\", ] ``` Randomise (optional) This is an optional boolean which will shuffle the options array on each render of this component. switch to 'randomise' singleAnswer (optional) By default, each item options is rendered using the html checkbox input type. Setting the singleAnswer boolean flag will turn those into radio buttons, allowing the student to select only one option at a time. Note Changing this flag will alter the shape of the Response Structure , and potentially require changing the grading function type and settings. Response Structure This is how the react component will structure the user's input to the Grading Gateway, when they press the check button. This structure is different depending on if the singleAnswer option was used: singleAnswer == False (or undefined) In this case, the user data is saved as an array with the same length as options , where each item is either a 1 or a 0 depending on if the corresponding option was selected. !!! example If for an instance where there are 4 options, and the first and third options were selected, the response field would be: ```json \"response\": [1, 0, 1, 0] ``` Example Screenshot: SingleAnswer = False singleAnswer == True In this case, there is only one correct answer, and each option is displayed as a radio button. Therefore the response field contains only one integer, corresponding to the index of the selected option. !!! example If for an instance where there are 4 options, and the third option was selected, the response field would be: ```json \"response\": 2 ``` Example Screenshot: SingleAnswer = True Example Student Response This shows a response where singleAnswer was set to False, since each option is displayed as a checkbox","title":"MultipleChoice"},{"location":"teacher/reference/response_area_components/MultipleChoice/#multiplechoice","text":"General multiple choice response area. Features multiple options for single answer and randomising the order.","title":"MultipleChoice"},{"location":"teacher/reference/response_area_components/MultipleChoice/#evaluation-function-options","text":"","title":"Evaluation Function Options"},{"location":"teacher/reference/response_area_components/MultipleChoice/#arrayequal","text":"Evaluation function checks if the supplied response and answer arrays are within the optionally supplied tolerances. This is based on the numpy.allclose function. Numpy is a dependancy for this function, but it means that arrays of any shape (regular) can be compared efficiently.","title":"ArrayEqual"},{"location":"teacher/reference/response_area_components/MultipleChoice/#parameters","text":"","title":"Parameters"},{"location":"teacher/reference/response_area_components/MultipleChoice/#options-required","text":"This is an array containing strings, each representing an option in the multiple choice component. These are parsed using the parseEquations function, meaning they can support markdown styling and LaTeX. !!! example ```json \"options\": [ \"\\\\( 4x^2 + 2 = \\\\frac{\\\\delta y}{\\\\delta x} \\\\)\", \"\\\\( \\\\pi = 3 \\\\)\", \"\\\\( K_{iakb} U^{b}_{k} = f^{a}_{i} \\\\)\", \"\\\\( 3 = \\\\pi \\\\)\", ] ```","title":"options (required)"},{"location":"teacher/reference/response_area_components/MultipleChoice/#randomise-optional","text":"This is an optional boolean which will shuffle the options array on each render of this component. switch to 'randomise'","title":"Randomise (optional)"},{"location":"teacher/reference/response_area_components/MultipleChoice/#singleanswer-optional","text":"By default, each item options is rendered using the html checkbox input type. Setting the singleAnswer boolean flag will turn those into radio buttons, allowing the student to select only one option at a time. Note Changing this flag will alter the shape of the Response Structure , and potentially require changing the grading function type and settings.","title":"singleAnswer (optional)"},{"location":"teacher/reference/response_area_components/MultipleChoice/#response-structure","text":"This is how the react component will structure the user's input to the Grading Gateway, when they press the check button. This structure is different depending on if the singleAnswer option was used:","title":"Response Structure"},{"location":"teacher/reference/response_area_components/MultipleChoice/#singleanswer-false-or-undefined","text":"In this case, the user data is saved as an array with the same length as options , where each item is either a 1 or a 0 depending on if the corresponding option was selected. !!! example If for an instance where there are 4 options, and the first and third options were selected, the response field would be: ```json \"response\": [1, 0, 1, 0] ``` Example Screenshot: SingleAnswer = False","title":"singleAnswer == False (or undefined)"},{"location":"teacher/reference/response_area_components/MultipleChoice/#singleanswer-true","text":"In this case, there is only one correct answer, and each option is displayed as a radio button. Therefore the response field contains only one integer, corresponding to the index of the selected option. !!! example If for an instance where there are 4 options, and the third option was selected, the response field would be: ```json \"response\": 2 ``` Example Screenshot: SingleAnswer = True","title":"singleAnswer == True"},{"location":"teacher/reference/response_area_components/MultipleChoice/#example-student-response","text":"This shows a response where singleAnswer was set to False, since each option is displayed as a checkbox","title":"Example Student Response"},{"location":"teacher/reference/response_area_components/Number/","text":"Number Very similar to the Text response area, except the user response is parsed as a float. Evaluation Function Options isSimilar Calculates the difference between the teacher answer (ans) and the student response (res); compares this to an allowable difference comprising an absolute tolerance (atol) and a relative tolerance (rtol). isExactEqual A strict comparison in Python using '=='. This function is a basic utility but often not the function you really want to use because it is quite brittle. Setting The Answer In the 'Response Area Answer' section, enter the required float into the input field. To test this, try typing correct and incorrect answers into the 'Response Area Preview' section. Component Parameters post_response_text (optional) Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax. pre_response_text (optional) Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax. grading_parameters (optional) atol : Absolute tolerance parameter rtol : Relative tolerance parameter Valid params include atol and rtol, which can be used in combination, or alone. As the comparison made is the following: !!! note \"\" is_correct = abs(res - ans) <= (atol + rtol*abs(ans)) Response Structure This is how the react component will structure the user's input to the Grading Gateway, when they press the check button. The response is simply sent as a float, parsed from the input field using the JavaScript parseFloat function. !!! example ```json \"response\": 15.8 ``` Example Student Response Correct response: Incorrect response:","title":"Number"},{"location":"teacher/reference/response_area_components/Number/#number","text":"Very similar to the Text response area, except the user response is parsed as a float.","title":"Number"},{"location":"teacher/reference/response_area_components/Number/#evaluation-function-options","text":"","title":"Evaluation Function Options"},{"location":"teacher/reference/response_area_components/Number/#issimilar","text":"Calculates the difference between the teacher answer (ans) and the student response (res); compares this to an allowable difference comprising an absolute tolerance (atol) and a relative tolerance (rtol).","title":"isSimilar"},{"location":"teacher/reference/response_area_components/Number/#isexactequal","text":"A strict comparison in Python using '=='. This function is a basic utility but often not the function you really want to use because it is quite brittle.","title":"isExactEqual"},{"location":"teacher/reference/response_area_components/Number/#setting-the-answer","text":"In the 'Response Area Answer' section, enter the required float into the input field. To test this, try typing correct and incorrect answers into the 'Response Area Preview' section.","title":"Setting The Answer"},{"location":"teacher/reference/response_area_components/Number/#component-parameters","text":"","title":"Component Parameters"},{"location":"teacher/reference/response_area_components/Number/#post_response_text-optional","text":"Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax.","title":"post_response_text (optional)"},{"location":"teacher/reference/response_area_components/Number/#pre_response_text-optional","text":"Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax.","title":"pre_response_text (optional)"},{"location":"teacher/reference/response_area_components/Number/#grading_parameters-optional","text":"atol : Absolute tolerance parameter rtol : Relative tolerance parameter Valid params include atol and rtol, which can be used in combination, or alone. As the comparison made is the following: !!! note \"\" is_correct = abs(res - ans) <= (atol + rtol*abs(ans))","title":"grading_parameters (optional)"},{"location":"teacher/reference/response_area_components/Number/#response-structure","text":"This is how the react component will structure the user's input to the Grading Gateway, when they press the check button. The response is simply sent as a float, parsed from the input field using the JavaScript parseFloat function. !!! example ```json \"response\": 15.8 ```","title":"Response Structure"},{"location":"teacher/reference/response_area_components/Number/#example-student-response","text":"Correct response: Incorrect response:","title":"Example Student Response"},{"location":"teacher/reference/response_area_components/NumericUnits/","text":"NumericUnits Provides two input fields with Number and Units placeholder texts. This area will also display its associated grading function (as seen in the screenshot below). Note this area will display how the user's response was interpred using the interp_string field provided in the feedback object returned by that function (if it exists). Component Parameters pre_response_text (optional) Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax. Response Structure This is how the react component will structure the user's input to the Grading Gateway, when they press the check button. In this case, the response is a single string which features the user's response to both fields separated by a space. !!! example ```json \"response\": \"150 g\" ``` Example Screenshot","title":"NumericUnits"},{"location":"teacher/reference/response_area_components/NumericUnits/#numericunits","text":"Provides two input fields with Number and Units placeholder texts. This area will also display its associated grading function (as seen in the screenshot below). Note this area will display how the user's response was interpred using the interp_string field provided in the feedback object returned by that function (if it exists).","title":"NumericUnits"},{"location":"teacher/reference/response_area_components/NumericUnits/#component-parameters","text":"","title":"Component Parameters"},{"location":"teacher/reference/response_area_components/NumericUnits/#pre_response_text-optional","text":"Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax.","title":"pre_response_text (optional)"},{"location":"teacher/reference/response_area_components/NumericUnits/#response-structure","text":"This is how the react component will structure the user's input to the Grading Gateway, when they press the check button. In this case, the response is a single string which features the user's response to both fields separated by a space. !!! example ```json \"response\": \"150 g\" ```","title":"Response Structure"},{"location":"teacher/reference/response_area_components/NumericUnits/#example-screenshot","text":"","title":"Example Screenshot"},{"location":"teacher/reference/response_area_components/Table/","text":"Table Table response area. Will populate the component with a grid of text input fields, in order to facilitate inputing elements of a table. The number of rows and columns can be specified, along with their corresponding names. Evaluation Function Options ArrayEqual Evaluation function checks if the supplied response and answer arrays are within the optionally supplied tolerances. This is based on the numpy.allclose function. Numpy is a dependancy for this function, but it means that arrays of any shape (regular) can be compared efficiently. ArraySymbolicEqual Very similar to the SymbolicEqual grading function, but grading any list of expressions instead. This algorithm can take any level of nesting for \"response\" and \"answer\" fields, as grading is done recursively (as long as both shapes are identical). Symbolic grading is done using the SymPy library. See SymPy for further information. Component Parameters rows The number of rows required for the table can be entered into this input field, either through typing directly, or using thr up and down arrows located inside the box. cols The number of columns required for the table can be entered into this input field, either through typing directly, or using thr up and down arrows located inside the box. post_response_text (optional) Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax. pre_response_text (optional) Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax. Setting The Answer Once the required number of rows and cols has been inputted, The names of each row and column should be changed depending on their corresponding variables. The value of each grid element can then be entered into individual input fields. If the row or column names are not changed, these will appear blank in the student response area. Example Student Response Correct response: Incorrect response:","title":"Table"},{"location":"teacher/reference/response_area_components/Table/#table","text":"Table response area. Will populate the component with a grid of text input fields, in order to facilitate inputing elements of a table. The number of rows and columns can be specified, along with their corresponding names.","title":"Table"},{"location":"teacher/reference/response_area_components/Table/#evaluation-function-options","text":"","title":"Evaluation Function Options"},{"location":"teacher/reference/response_area_components/Table/#arrayequal","text":"Evaluation function checks if the supplied response and answer arrays are within the optionally supplied tolerances. This is based on the numpy.allclose function. Numpy is a dependancy for this function, but it means that arrays of any shape (regular) can be compared efficiently.","title":"ArrayEqual"},{"location":"teacher/reference/response_area_components/Table/#arraysymbolicequal","text":"Very similar to the SymbolicEqual grading function, but grading any list of expressions instead. This algorithm can take any level of nesting for \"response\" and \"answer\" fields, as grading is done recursively (as long as both shapes are identical). Symbolic grading is done using the SymPy library. See SymPy for further information.","title":"ArraySymbolicEqual"},{"location":"teacher/reference/response_area_components/Table/#component-parameters","text":"","title":"Component Parameters"},{"location":"teacher/reference/response_area_components/Table/#rows","text":"The number of rows required for the table can be entered into this input field, either through typing directly, or using thr up and down arrows located inside the box.","title":"rows"},{"location":"teacher/reference/response_area_components/Table/#cols","text":"The number of columns required for the table can be entered into this input field, either through typing directly, or using thr up and down arrows located inside the box.","title":"cols"},{"location":"teacher/reference/response_area_components/Table/#post_response_text-optional","text":"Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax.","title":"post_response_text (optional)"},{"location":"teacher/reference/response_area_components/Table/#pre_response_text-optional","text":"Text block to be displayed to the left of the input field. Markdown and LaTeX are allowed following the usual syntax.","title":"pre_response_text (optional)"},{"location":"teacher/reference/response_area_components/Table/#setting-the-answer","text":"Once the required number of rows and cols has been inputted, The names of each row and column should be changed depending on their corresponding variables. The value of each grid element can then be entered into individual input fields. If the row or column names are not changed, these will appear blank in the student response area.","title":"Setting The Answer"},{"location":"teacher/reference/response_area_components/Table/#example-student-response","text":"Correct response: Incorrect response:","title":"Example Student Response"},{"location":"teacher/reference/response_area_components/Text/","text":"","title":"Text"}]}